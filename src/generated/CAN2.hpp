#include <Register.hpp>




namespace CAN2
{
    struct can2_t{};

    constexpr std::uint32_t CAN2_BASE_ADDRESS = 0x40006800u;

    constexpr auto INRQ = BitField<can2_t, 0, 1>{}; // bit offset: 0, bit width: 1, INRQ
    constexpr auto SLEEP = BitField<can2_t, 1, 1>{}; // bit offset: 1, bit width: 1, SLEEP
    constexpr auto TXFP = BitField<can2_t, 2, 1>{}; // bit offset: 2, bit width: 1, TXFP
    constexpr auto RFLM = BitField<can2_t, 3, 1>{}; // bit offset: 3, bit width: 1, RFLM
    constexpr auto NART = BitField<can2_t, 4, 1>{}; // bit offset: 4, bit width: 1, NART
    constexpr auto AWUM = BitField<can2_t, 5, 1>{}; // bit offset: 5, bit width: 1, AWUM
    constexpr auto ABOM = BitField<can2_t, 6, 1>{}; // bit offset: 6, bit width: 1, ABOM
    constexpr auto TTCM = BitField<can2_t, 7, 1>{}; // bit offset: 7, bit width: 1, TTCM
    constexpr auto RESET = BitField<can2_t, 15, 1>{}; // bit offset: 15, bit width: 1, RESET
    constexpr auto DBF = BitField<can2_t, 16, 1>{}; // bit offset: 16, bit width: 1, DBF
    static Register<std::uint32_t, CAN2_BASE_ADDRESS + 0x00000000u, 0, READWRITE, decltype(INRQ), decltype(SLEEP), decltype(TXFP), decltype(RFLM), decltype(NART), decltype(AWUM), decltype(ABOM), decltype(TTCM), decltype(RESET), decltype(DBF)> MCR; // master control register

    constexpr auto INAK = BitField<can2_t, 0, 1, READONLY>{}; // bit offset: 0, bit width: 1, INAK
    constexpr auto SLAK = BitField<can2_t, 1, 1, READONLY>{}; // bit offset: 1, bit width: 1, SLAK
    constexpr auto ERRI = BitField<can2_t, 2, 1, READWRITE>{}; // bit offset: 2, bit width: 1, ERRI
    constexpr auto WKUI = BitField<can2_t, 3, 1, READWRITE>{}; // bit offset: 3, bit width: 1, WKUI
    constexpr auto SLAKI = BitField<can2_t, 4, 1, READWRITE>{}; // bit offset: 4, bit width: 1, SLAKI
    constexpr auto TXM = BitField<can2_t, 8, 1, READONLY>{}; // bit offset: 8, bit width: 1, TXM
    constexpr auto RXM = BitField<can2_t, 9, 1, READONLY>{}; // bit offset: 9, bit width: 1, RXM
    constexpr auto SAMP = BitField<can2_t, 10, 1, READONLY>{}; // bit offset: 10, bit width: 1, SAMP
    constexpr auto RX = BitField<can2_t, 11, 1, READONLY>{}; // bit offset: 11, bit width: 1, RX
    static Register<std::uint32_t, CAN2_BASE_ADDRESS + 0x00000004u, 0, READWRITE, decltype(INAK), decltype(SLAK), decltype(ERRI), decltype(WKUI), decltype(SLAKI), decltype(TXM), decltype(RXM), decltype(SAMP), decltype(RX)> MSR; // master status register

    constexpr auto RQCP0 = BitField<can2_t, 0, 1, READWRITE>{}; // bit offset: 0, bit width: 1, RQCP0
    constexpr auto TXOK0 = BitField<can2_t, 1, 1, READWRITE>{}; // bit offset: 1, bit width: 1, TXOK0
    constexpr auto ALST0 = BitField<can2_t, 2, 1, READWRITE>{}; // bit offset: 2, bit width: 1, ALST0
    constexpr auto TERR0 = BitField<can2_t, 3, 1, READWRITE>{}; // bit offset: 3, bit width: 1, TERR0
    constexpr auto ABRQ0 = BitField<can2_t, 7, 1, READWRITE>{}; // bit offset: 7, bit width: 1, ABRQ0
    constexpr auto RQCP1 = BitField<can2_t, 8, 1, READWRITE>{}; // bit offset: 8, bit width: 1, RQCP1
    constexpr auto TXOK1 = BitField<can2_t, 9, 1, READWRITE>{}; // bit offset: 9, bit width: 1, TXOK1
    constexpr auto ALST1 = BitField<can2_t, 10, 1, READWRITE>{}; // bit offset: 10, bit width: 1, ALST1
    constexpr auto TERR1 = BitField<can2_t, 11, 1, READWRITE>{}; // bit offset: 11, bit width: 1, TERR1
    constexpr auto ABRQ1 = BitField<can2_t, 15, 1, READWRITE>{}; // bit offset: 15, bit width: 1, ABRQ1
    constexpr auto RQCP2 = BitField<can2_t, 16, 1, READWRITE>{}; // bit offset: 16, bit width: 1, RQCP2
    constexpr auto TXOK2 = BitField<can2_t, 17, 1, READWRITE>{}; // bit offset: 17, bit width: 1, TXOK2
    constexpr auto ALST2 = BitField<can2_t, 18, 1, READWRITE>{}; // bit offset: 18, bit width: 1, ALST2
    constexpr auto TERR2 = BitField<can2_t, 19, 1, READWRITE>{}; // bit offset: 19, bit width: 1, TERR2
    constexpr auto ABRQ2 = BitField<can2_t, 23, 1, READWRITE>{}; // bit offset: 23, bit width: 1, ABRQ2
    constexpr auto CODE = BitField<can2_t, 24, 2, READONLY>{}; // bit offset: 24, bit width: 2, CODE
    constexpr auto TME0 = BitField<can2_t, 26, 1, READONLY>{}; // bit offset: 26, bit width: 1, Lowest priority flag for mailbox 0
    constexpr auto TME1 = BitField<can2_t, 27, 1, READONLY>{}; // bit offset: 27, bit width: 1, Lowest priority flag for mailbox 1
    constexpr auto TME2 = BitField<can2_t, 28, 1, READONLY>{}; // bit offset: 28, bit width: 1, Lowest priority flag for mailbox 2
    constexpr auto LOW0 = BitField<can2_t, 29, 1, READONLY>{}; // bit offset: 29, bit width: 1, Lowest priority flag for mailbox 0
    constexpr auto LOW1 = BitField<can2_t, 30, 1, READONLY>{}; // bit offset: 30, bit width: 1, Lowest priority flag for mailbox 1
    constexpr auto LOW2 = BitField<can2_t, 31, 1, READONLY>{}; // bit offset: 31, bit width: 1, Lowest priority flag for mailbox 2
    static Register<std::uint32_t, CAN2_BASE_ADDRESS + 0x00000008u, 0, READWRITE, decltype(RQCP0), decltype(TXOK0), decltype(ALST0), decltype(TERR0), decltype(ABRQ0), decltype(RQCP1), decltype(TXOK1), decltype(ALST1), decltype(TERR1), decltype(ABRQ1), decltype(RQCP2), decltype(TXOK2), decltype(ALST2), decltype(TERR2), decltype(ABRQ2), decltype(CODE), decltype(TME0), decltype(TME1), decltype(TME2), decltype(LOW0), decltype(LOW1), decltype(LOW2)> TSR; // transmit status register

    constexpr auto FMP0 = BitField<can2_t, 0, 2, READONLY>{}; // bit offset: 0, bit width: 2, FMP0
    constexpr auto FULL0 = BitField<can2_t, 3, 1, READWRITE>{}; // bit offset: 3, bit width: 1, FULL0
    constexpr auto FOVR0 = BitField<can2_t, 4, 1, READWRITE>{}; // bit offset: 4, bit width: 1, FOVR0
    constexpr auto RFOM0 = BitField<can2_t, 5, 1, READWRITE>{}; // bit offset: 5, bit width: 1, RFOM0
    static Register<std::uint32_t, CAN2_BASE_ADDRESS + 0x0000000cu, 0, READWRITE, decltype(FMP0), decltype(FULL0), decltype(FOVR0), decltype(RFOM0)> RF0R; // receive FIFO 0 register

    constexpr auto FMP1 = BitField<can2_t, 0, 2, READONLY>{}; // bit offset: 0, bit width: 2, FMP1
    constexpr auto FULL1 = BitField<can2_t, 3, 1, READWRITE>{}; // bit offset: 3, bit width: 1, FULL1
    constexpr auto FOVR1 = BitField<can2_t, 4, 1, READWRITE>{}; // bit offset: 4, bit width: 1, FOVR1
    constexpr auto RFOM1 = BitField<can2_t, 5, 1, READWRITE>{}; // bit offset: 5, bit width: 1, RFOM1
    static Register<std::uint32_t, CAN2_BASE_ADDRESS + 0x00000010u, 0, READWRITE, decltype(FMP1), decltype(FULL1), decltype(FOVR1), decltype(RFOM1)> RF1R; // receive FIFO 1 register

    constexpr auto TMEIE = BitField<can2_t, 0, 1>{}; // bit offset: 0, bit width: 1, TMEIE
    constexpr auto FMPIE0 = BitField<can2_t, 1, 1>{}; // bit offset: 1, bit width: 1, FMPIE0
    constexpr auto FFIE0 = BitField<can2_t, 2, 1>{}; // bit offset: 2, bit width: 1, FFIE0
    constexpr auto FOVIE0 = BitField<can2_t, 3, 1>{}; // bit offset: 3, bit width: 1, FOVIE0
    constexpr auto FMPIE1 = BitField<can2_t, 4, 1>{}; // bit offset: 4, bit width: 1, FMPIE1
    constexpr auto FFIE1 = BitField<can2_t, 5, 1>{}; // bit offset: 5, bit width: 1, FFIE1
    constexpr auto FOVIE1 = BitField<can2_t, 6, 1>{}; // bit offset: 6, bit width: 1, FOVIE1
    constexpr auto EWGIE = BitField<can2_t, 8, 1>{}; // bit offset: 8, bit width: 1, EWGIE
    constexpr auto EPVIE = BitField<can2_t, 9, 1>{}; // bit offset: 9, bit width: 1, EPVIE
    constexpr auto BOFIE = BitField<can2_t, 10, 1>{}; // bit offset: 10, bit width: 1, BOFIE
    constexpr auto LECIE = BitField<can2_t, 11, 1>{}; // bit offset: 11, bit width: 1, LECIE
    constexpr auto ERRIE = BitField<can2_t, 15, 1>{}; // bit offset: 15, bit width: 1, ERRIE
    constexpr auto WKUIE = BitField<can2_t, 16, 1>{}; // bit offset: 16, bit width: 1, WKUIE
    constexpr auto SLKIE = BitField<can2_t, 17, 1>{}; // bit offset: 17, bit width: 1, SLKIE
    static Register<std::uint32_t, CAN2_BASE_ADDRESS + 0x00000014u, 0, READWRITE, decltype(TMEIE), decltype(FMPIE0), decltype(FFIE0), decltype(FOVIE0), decltype(FMPIE1), decltype(FFIE1), decltype(FOVIE1), decltype(EWGIE), decltype(EPVIE), decltype(BOFIE), decltype(LECIE), decltype(ERRIE), decltype(WKUIE), decltype(SLKIE)> IER; // interrupt enable register

    constexpr auto EWGF = BitField<can2_t, 0, 1, READONLY>{}; // bit offset: 0, bit width: 1, EWGF
    constexpr auto EPVF = BitField<can2_t, 1, 1, READONLY>{}; // bit offset: 1, bit width: 1, EPVF
    constexpr auto BOFF = BitField<can2_t, 2, 1, READONLY>{}; // bit offset: 2, bit width: 1, BOFF
    constexpr auto LEC = BitField<can2_t, 4, 3, READWRITE>{}; // bit offset: 4, bit width: 3, LEC
    constexpr auto TEC = BitField<can2_t, 16, 8, READONLY>{}; // bit offset: 16, bit width: 8, TEC
    constexpr auto REC = BitField<can2_t, 24, 8, READONLY>{}; // bit offset: 24, bit width: 8, REC
    static Register<std::uint32_t, CAN2_BASE_ADDRESS + 0x00000018u, 0, READWRITE, decltype(EWGF), decltype(EPVF), decltype(BOFF), decltype(LEC), decltype(TEC), decltype(REC)> ESR; // interrupt enable register

    constexpr auto BRP = BitField<can2_t, 0, 10>{}; // bit offset: 0, bit width: 10, BRP
    constexpr auto TS1 = BitField<can2_t, 16, 4>{}; // bit offset: 16, bit width: 4, TS1
    constexpr auto TS2 = BitField<can2_t, 20, 3>{}; // bit offset: 20, bit width: 3, TS2
    constexpr auto SJW = BitField<can2_t, 24, 2>{}; // bit offset: 24, bit width: 2, SJW
    constexpr auto LBKM = BitField<can2_t, 30, 1>{}; // bit offset: 30, bit width: 1, LBKM
    constexpr auto SILM = BitField<can2_t, 31, 1>{}; // bit offset: 31, bit width: 1, SILM
    static Register<std::uint32_t, CAN2_BASE_ADDRESS + 0x0000001cu, 0, READWRITE, decltype(BRP), decltype(TS1), decltype(TS2), decltype(SJW), decltype(LBKM), decltype(SILM)> BTR; // bit timing register

    constexpr auto TXRQ = BitField<can2_t, 0, 1>{}; // bit offset: 0, bit width: 1, TXRQ
    constexpr auto RTR = BitField<can2_t, 1, 1>{}; // bit offset: 1, bit width: 1, RTR
    constexpr auto IDE = BitField<can2_t, 2, 1>{}; // bit offset: 2, bit width: 1, IDE
    constexpr auto EXID = BitField<can2_t, 3, 18>{}; // bit offset: 3, bit width: 18, EXID
    constexpr auto STID = BitField<can2_t, 21, 11>{}; // bit offset: 21, bit width: 11, STID
    static Register<std::uint32_t, CAN2_BASE_ADDRESS + 0x00000180u, 0, READWRITE, decltype(TXRQ), decltype(RTR), decltype(IDE), decltype(EXID), decltype(STID)> TI0R; // TX mailbox identifier register

    constexpr auto DLC = BitField<can2_t, 0, 4>{}; // bit offset: 0, bit width: 4, DLC
    constexpr auto TGT = BitField<can2_t, 8, 1>{}; // bit offset: 8, bit width: 1, TGT
    constexpr auto TIME = BitField<can2_t, 16, 16>{}; // bit offset: 16, bit width: 16, TIME
    static Register<std::uint32_t, CAN2_BASE_ADDRESS + 0x00000184u, 0, READWRITE, decltype(DLC), decltype(TGT), decltype(TIME)> TDT0R; // mailbox data length control and time stamp register

    constexpr auto DATA0 = BitField<can2_t, 0, 8>{}; // bit offset: 0, bit width: 8, DATA0
    constexpr auto DATA1 = BitField<can2_t, 8, 8>{}; // bit offset: 8, bit width: 8, DATA1
    constexpr auto DATA2 = BitField<can2_t, 16, 8>{}; // bit offset: 16, bit width: 8, DATA2
    constexpr auto DATA3 = BitField<can2_t, 24, 8>{}; // bit offset: 24, bit width: 8, DATA3
    static Register<std::uint32_t, CAN2_BASE_ADDRESS + 0x00000188u, 0, READWRITE, decltype(DATA0), decltype(DATA1), decltype(DATA2), decltype(DATA3)> TDL0R; // mailbox data low register

    constexpr auto DATA4 = BitField<can2_t, 0, 8>{}; // bit offset: 0, bit width: 8, DATA4
    constexpr auto DATA5 = BitField<can2_t, 8, 8>{}; // bit offset: 8, bit width: 8, DATA5
    constexpr auto DATA6 = BitField<can2_t, 16, 8>{}; // bit offset: 16, bit width: 8, DATA6
    constexpr auto DATA7 = BitField<can2_t, 24, 8>{}; // bit offset: 24, bit width: 8, DATA7
    static Register<std::uint32_t, CAN2_BASE_ADDRESS + 0x0000018cu, 0, READWRITE, decltype(DATA4), decltype(DATA5), decltype(DATA6), decltype(DATA7)> TDH0R; // mailbox data high register

    constexpr auto TXRQ = BitField<can2_t, 0, 1>{}; // bit offset: 0, bit width: 1, TXRQ
    constexpr auto RTR = BitField<can2_t, 1, 1>{}; // bit offset: 1, bit width: 1, RTR
    constexpr auto IDE = BitField<can2_t, 2, 1>{}; // bit offset: 2, bit width: 1, IDE
    constexpr auto EXID = BitField<can2_t, 3, 18>{}; // bit offset: 3, bit width: 18, EXID
    constexpr auto STID = BitField<can2_t, 21, 11>{}; // bit offset: 21, bit width: 11, STID
    static Register<std::uint32_t, CAN2_BASE_ADDRESS + 0x00000190u, 0, READWRITE, decltype(TXRQ), decltype(RTR), decltype(IDE), decltype(EXID), decltype(STID)> TI1R; // mailbox identifier register

    constexpr auto DLC = BitField<can2_t, 0, 4>{}; // bit offset: 0, bit width: 4, DLC
    constexpr auto TGT = BitField<can2_t, 8, 1>{}; // bit offset: 8, bit width: 1, TGT
    constexpr auto TIME = BitField<can2_t, 16, 16>{}; // bit offset: 16, bit width: 16, TIME
    static Register<std::uint32_t, CAN2_BASE_ADDRESS + 0x00000194u, 0, READWRITE, decltype(DLC), decltype(TGT), decltype(TIME)> TDT1R; // mailbox data length control and time stamp register

    constexpr auto DATA0 = BitField<can2_t, 0, 8>{}; // bit offset: 0, bit width: 8, DATA0
    constexpr auto DATA1 = BitField<can2_t, 8, 8>{}; // bit offset: 8, bit width: 8, DATA1
    constexpr auto DATA2 = BitField<can2_t, 16, 8>{}; // bit offset: 16, bit width: 8, DATA2
    constexpr auto DATA3 = BitField<can2_t, 24, 8>{}; // bit offset: 24, bit width: 8, DATA3
    static Register<std::uint32_t, CAN2_BASE_ADDRESS + 0x00000198u, 0, READWRITE, decltype(DATA0), decltype(DATA1), decltype(DATA2), decltype(DATA3)> TDL1R; // mailbox data low register

    constexpr auto DATA4 = BitField<can2_t, 0, 8>{}; // bit offset: 0, bit width: 8, DATA4
    constexpr auto DATA5 = BitField<can2_t, 8, 8>{}; // bit offset: 8, bit width: 8, DATA5
    constexpr auto DATA6 = BitField<can2_t, 16, 8>{}; // bit offset: 16, bit width: 8, DATA6
    constexpr auto DATA7 = BitField<can2_t, 24, 8>{}; // bit offset: 24, bit width: 8, DATA7
    static Register<std::uint32_t, CAN2_BASE_ADDRESS + 0x0000019cu, 0, READWRITE, decltype(DATA4), decltype(DATA5), decltype(DATA6), decltype(DATA7)> TDH1R; // mailbox data high register

    constexpr auto TXRQ = BitField<can2_t, 0, 1>{}; // bit offset: 0, bit width: 1, TXRQ
    constexpr auto RTR = BitField<can2_t, 1, 1>{}; // bit offset: 1, bit width: 1, RTR
    constexpr auto IDE = BitField<can2_t, 2, 1>{}; // bit offset: 2, bit width: 1, IDE
    constexpr auto EXID = BitField<can2_t, 3, 18>{}; // bit offset: 3, bit width: 18, EXID
    constexpr auto STID = BitField<can2_t, 21, 11>{}; // bit offset: 21, bit width: 11, STID
    static Register<std::uint32_t, CAN2_BASE_ADDRESS + 0x000001a0u, 0, READWRITE, decltype(TXRQ), decltype(RTR), decltype(IDE), decltype(EXID), decltype(STID)> TI2R; // mailbox identifier register

    constexpr auto DLC = BitField<can2_t, 0, 4>{}; // bit offset: 0, bit width: 4, DLC
    constexpr auto TGT = BitField<can2_t, 8, 1>{}; // bit offset: 8, bit width: 1, TGT
    constexpr auto TIME = BitField<can2_t, 16, 16>{}; // bit offset: 16, bit width: 16, TIME
    static Register<std::uint32_t, CAN2_BASE_ADDRESS + 0x000001a4u, 0, READWRITE, decltype(DLC), decltype(TGT), decltype(TIME)> TDT2R; // mailbox data length control and time stamp register

    constexpr auto DATA0 = BitField<can2_t, 0, 8>{}; // bit offset: 0, bit width: 8, DATA0
    constexpr auto DATA1 = BitField<can2_t, 8, 8>{}; // bit offset: 8, bit width: 8, DATA1
    constexpr auto DATA2 = BitField<can2_t, 16, 8>{}; // bit offset: 16, bit width: 8, DATA2
    constexpr auto DATA3 = BitField<can2_t, 24, 8>{}; // bit offset: 24, bit width: 8, DATA3
    static Register<std::uint32_t, CAN2_BASE_ADDRESS + 0x000001a8u, 0, READWRITE, decltype(DATA0), decltype(DATA1), decltype(DATA2), decltype(DATA3)> TDL2R; // mailbox data low register

    constexpr auto DATA4 = BitField<can2_t, 0, 8>{}; // bit offset: 0, bit width: 8, DATA4
    constexpr auto DATA5 = BitField<can2_t, 8, 8>{}; // bit offset: 8, bit width: 8, DATA5
    constexpr auto DATA6 = BitField<can2_t, 16, 8>{}; // bit offset: 16, bit width: 8, DATA6
    constexpr auto DATA7 = BitField<can2_t, 24, 8>{}; // bit offset: 24, bit width: 8, DATA7
    static Register<std::uint32_t, CAN2_BASE_ADDRESS + 0x000001acu, 0, READWRITE, decltype(DATA4), decltype(DATA5), decltype(DATA6), decltype(DATA7)> TDH2R; // mailbox data high register

    constexpr auto RTR = BitField<can2_t, 1, 1>{}; // bit offset: 1, bit width: 1, RTR
    constexpr auto IDE = BitField<can2_t, 2, 1>{}; // bit offset: 2, bit width: 1, IDE
    constexpr auto EXID = BitField<can2_t, 3, 18>{}; // bit offset: 3, bit width: 18, EXID
    constexpr auto STID = BitField<can2_t, 21, 11>{}; // bit offset: 21, bit width: 11, STID
    static Register<std::uint32_t, CAN2_BASE_ADDRESS + 0x000001b0u, 0, READONLY, decltype(RTR), decltype(IDE), decltype(EXID), decltype(STID)> RI0R; // receive FIFO mailbox identifier register

    constexpr auto DLC = BitField<can2_t, 0, 4>{}; // bit offset: 0, bit width: 4, DLC
    constexpr auto FMI = BitField<can2_t, 8, 8>{}; // bit offset: 8, bit width: 8, FMI
    constexpr auto TIME = BitField<can2_t, 16, 16>{}; // bit offset: 16, bit width: 16, TIME
    static Register<std::uint32_t, CAN2_BASE_ADDRESS + 0x000001b4u, 0, READONLY, decltype(DLC), decltype(FMI), decltype(TIME)> RDT0R; // mailbox data high register

    constexpr auto DATA0 = BitField<can2_t, 0, 8>{}; // bit offset: 0, bit width: 8, DATA0
    constexpr auto DATA1 = BitField<can2_t, 8, 8>{}; // bit offset: 8, bit width: 8, DATA1
    constexpr auto DATA2 = BitField<can2_t, 16, 8>{}; // bit offset: 16, bit width: 8, DATA2
    constexpr auto DATA3 = BitField<can2_t, 24, 8>{}; // bit offset: 24, bit width: 8, DATA3
    static Register<std::uint32_t, CAN2_BASE_ADDRESS + 0x000001b8u, 0, READONLY, decltype(DATA0), decltype(DATA1), decltype(DATA2), decltype(DATA3)> RDL0R; // mailbox data high register

    constexpr auto DATA4 = BitField<can2_t, 0, 8>{}; // bit offset: 0, bit width: 8, DATA4
    constexpr auto DATA5 = BitField<can2_t, 8, 8>{}; // bit offset: 8, bit width: 8, DATA5
    constexpr auto DATA6 = BitField<can2_t, 16, 8>{}; // bit offset: 16, bit width: 8, DATA6
    constexpr auto DATA7 = BitField<can2_t, 24, 8>{}; // bit offset: 24, bit width: 8, DATA7
    static Register<std::uint32_t, CAN2_BASE_ADDRESS + 0x000001bcu, 0, READONLY, decltype(DATA4), decltype(DATA5), decltype(DATA6), decltype(DATA7)> RDH0R; // receive FIFO mailbox data high register

    constexpr auto RTR = BitField<can2_t, 1, 1>{}; // bit offset: 1, bit width: 1, RTR
    constexpr auto IDE = BitField<can2_t, 2, 1>{}; // bit offset: 2, bit width: 1, IDE
    constexpr auto EXID = BitField<can2_t, 3, 18>{}; // bit offset: 3, bit width: 18, EXID
    constexpr auto STID = BitField<can2_t, 21, 11>{}; // bit offset: 21, bit width: 11, STID
    static Register<std::uint32_t, CAN2_BASE_ADDRESS + 0x000001c0u, 0, READONLY, decltype(RTR), decltype(IDE), decltype(EXID), decltype(STID)> RI1R; // mailbox data high register

    constexpr auto DLC = BitField<can2_t, 0, 4>{}; // bit offset: 0, bit width: 4, DLC
    constexpr auto FMI = BitField<can2_t, 8, 8>{}; // bit offset: 8, bit width: 8, FMI
    constexpr auto TIME = BitField<can2_t, 16, 16>{}; // bit offset: 16, bit width: 16, TIME
    static Register<std::uint32_t, CAN2_BASE_ADDRESS + 0x000001c4u, 0, READONLY, decltype(DLC), decltype(FMI), decltype(TIME)> RDT1R; // mailbox data high register

    constexpr auto DATA0 = BitField<can2_t, 0, 8>{}; // bit offset: 0, bit width: 8, DATA0
    constexpr auto DATA1 = BitField<can2_t, 8, 8>{}; // bit offset: 8, bit width: 8, DATA1
    constexpr auto DATA2 = BitField<can2_t, 16, 8>{}; // bit offset: 16, bit width: 8, DATA2
    constexpr auto DATA3 = BitField<can2_t, 24, 8>{}; // bit offset: 24, bit width: 8, DATA3
    static Register<std::uint32_t, CAN2_BASE_ADDRESS + 0x000001c8u, 0, READONLY, decltype(DATA0), decltype(DATA1), decltype(DATA2), decltype(DATA3)> RDL1R; // mailbox data high register

    constexpr auto DATA4 = BitField<can2_t, 0, 8>{}; // bit offset: 0, bit width: 8, DATA4
    constexpr auto DATA5 = BitField<can2_t, 8, 8>{}; // bit offset: 8, bit width: 8, DATA5
    constexpr auto DATA6 = BitField<can2_t, 16, 8>{}; // bit offset: 16, bit width: 8, DATA6
    constexpr auto DATA7 = BitField<can2_t, 24, 8>{}; // bit offset: 24, bit width: 8, DATA7
    static Register<std::uint32_t, CAN2_BASE_ADDRESS + 0x000001ccu, 0, READONLY, decltype(DATA4), decltype(DATA5), decltype(DATA6), decltype(DATA7)> RDH1R; // mailbox data high register

    constexpr auto FINIT = BitField<can2_t, 0, 1>{}; // bit offset: 0, bit width: 1, FINIT
    constexpr auto CAN2SB = BitField<can2_t, 8, 6>{}; // bit offset: 8, bit width: 6, CAN2SB
    static Register<std::uint32_t, CAN2_BASE_ADDRESS + 0x00000200u, 0, READWRITE, decltype(FINIT), decltype(CAN2SB)> FMR; // filter master register

    constexpr auto FBM0 = BitField<can2_t, 0, 1>{}; // bit offset: 0, bit width: 1, Filter mode
    constexpr auto FBM1 = BitField<can2_t, 1, 1>{}; // bit offset: 1, bit width: 1, Filter mode
    constexpr auto FBM2 = BitField<can2_t, 2, 1>{}; // bit offset: 2, bit width: 1, Filter mode
    constexpr auto FBM3 = BitField<can2_t, 3, 1>{}; // bit offset: 3, bit width: 1, Filter mode
    constexpr auto FBM4 = BitField<can2_t, 4, 1>{}; // bit offset: 4, bit width: 1, Filter mode
    constexpr auto FBM5 = BitField<can2_t, 5, 1>{}; // bit offset: 5, bit width: 1, Filter mode
    constexpr auto FBM6 = BitField<can2_t, 6, 1>{}; // bit offset: 6, bit width: 1, Filter mode
    constexpr auto FBM7 = BitField<can2_t, 7, 1>{}; // bit offset: 7, bit width: 1, Filter mode
    constexpr auto FBM8 = BitField<can2_t, 8, 1>{}; // bit offset: 8, bit width: 1, Filter mode
    constexpr auto FBM9 = BitField<can2_t, 9, 1>{}; // bit offset: 9, bit width: 1, Filter mode
    constexpr auto FBM10 = BitField<can2_t, 10, 1>{}; // bit offset: 10, bit width: 1, Filter mode
    constexpr auto FBM11 = BitField<can2_t, 11, 1>{}; // bit offset: 11, bit width: 1, Filter mode
    constexpr auto FBM12 = BitField<can2_t, 12, 1>{}; // bit offset: 12, bit width: 1, Filter mode
    constexpr auto FBM13 = BitField<can2_t, 13, 1>{}; // bit offset: 13, bit width: 1, Filter mode
    constexpr auto FBM14 = BitField<can2_t, 14, 1>{}; // bit offset: 14, bit width: 1, Filter mode
    constexpr auto FBM15 = BitField<can2_t, 15, 1>{}; // bit offset: 15, bit width: 1, Filter mode
    constexpr auto FBM16 = BitField<can2_t, 16, 1>{}; // bit offset: 16, bit width: 1, Filter mode
    constexpr auto FBM17 = BitField<can2_t, 17, 1>{}; // bit offset: 17, bit width: 1, Filter mode
    constexpr auto FBM18 = BitField<can2_t, 18, 1>{}; // bit offset: 18, bit width: 1, Filter mode
    constexpr auto FBM19 = BitField<can2_t, 19, 1>{}; // bit offset: 19, bit width: 1, Filter mode
    constexpr auto FBM20 = BitField<can2_t, 20, 1>{}; // bit offset: 20, bit width: 1, Filter mode
    constexpr auto FBM21 = BitField<can2_t, 21, 1>{}; // bit offset: 21, bit width: 1, Filter mode
    constexpr auto FBM22 = BitField<can2_t, 22, 1>{}; // bit offset: 22, bit width: 1, Filter mode
    constexpr auto FBM23 = BitField<can2_t, 23, 1>{}; // bit offset: 23, bit width: 1, Filter mode
    constexpr auto FBM24 = BitField<can2_t, 24, 1>{}; // bit offset: 24, bit width: 1, Filter mode
    constexpr auto FBM25 = BitField<can2_t, 25, 1>{}; // bit offset: 25, bit width: 1, Filter mode
    constexpr auto FBM26 = BitField<can2_t, 26, 1>{}; // bit offset: 26, bit width: 1, Filter mode
    constexpr auto FBM27 = BitField<can2_t, 27, 1>{}; // bit offset: 27, bit width: 1, Filter mode
    static Register<std::uint32_t, CAN2_BASE_ADDRESS + 0x00000204u, 0, READWRITE, decltype(FBM0), decltype(FBM1), decltype(FBM2), decltype(FBM3), decltype(FBM4), decltype(FBM5), decltype(FBM6), decltype(FBM7), decltype(FBM8), decltype(FBM9), decltype(FBM10), decltype(FBM11), decltype(FBM12), decltype(FBM13), decltype(FBM14), decltype(FBM15), decltype(FBM16), decltype(FBM17), decltype(FBM18), decltype(FBM19), decltype(FBM20), decltype(FBM21), decltype(FBM22), decltype(FBM23), decltype(FBM24), decltype(FBM25), decltype(FBM26), decltype(FBM27)> FM1R; // filter mode register

    constexpr auto FSC0 = BitField<can2_t, 0, 1>{}; // bit offset: 0, bit width: 1, Filter scale configuration
    constexpr auto FSC1 = BitField<can2_t, 1, 1>{}; // bit offset: 1, bit width: 1, Filter scale configuration
    constexpr auto FSC2 = BitField<can2_t, 2, 1>{}; // bit offset: 2, bit width: 1, Filter scale configuration
    constexpr auto FSC3 = BitField<can2_t, 3, 1>{}; // bit offset: 3, bit width: 1, Filter scale configuration
    constexpr auto FSC4 = BitField<can2_t, 4, 1>{}; // bit offset: 4, bit width: 1, Filter scale configuration
    constexpr auto FSC5 = BitField<can2_t, 5, 1>{}; // bit offset: 5, bit width: 1, Filter scale configuration
    constexpr auto FSC6 = BitField<can2_t, 6, 1>{}; // bit offset: 6, bit width: 1, Filter scale configuration
    constexpr auto FSC7 = BitField<can2_t, 7, 1>{}; // bit offset: 7, bit width: 1, Filter scale configuration
    constexpr auto FSC8 = BitField<can2_t, 8, 1>{}; // bit offset: 8, bit width: 1, Filter scale configuration
    constexpr auto FSC9 = BitField<can2_t, 9, 1>{}; // bit offset: 9, bit width: 1, Filter scale configuration
    constexpr auto FSC10 = BitField<can2_t, 10, 1>{}; // bit offset: 10, bit width: 1, Filter scale configuration
    constexpr auto FSC11 = BitField<can2_t, 11, 1>{}; // bit offset: 11, bit width: 1, Filter scale configuration
    constexpr auto FSC12 = BitField<can2_t, 12, 1>{}; // bit offset: 12, bit width: 1, Filter scale configuration
    constexpr auto FSC13 = BitField<can2_t, 13, 1>{}; // bit offset: 13, bit width: 1, Filter scale configuration
    constexpr auto FSC14 = BitField<can2_t, 14, 1>{}; // bit offset: 14, bit width: 1, Filter scale configuration
    constexpr auto FSC15 = BitField<can2_t, 15, 1>{}; // bit offset: 15, bit width: 1, Filter scale configuration
    constexpr auto FSC16 = BitField<can2_t, 16, 1>{}; // bit offset: 16, bit width: 1, Filter scale configuration
    constexpr auto FSC17 = BitField<can2_t, 17, 1>{}; // bit offset: 17, bit width: 1, Filter scale configuration
    constexpr auto FSC18 = BitField<can2_t, 18, 1>{}; // bit offset: 18, bit width: 1, Filter scale configuration
    constexpr auto FSC19 = BitField<can2_t, 19, 1>{}; // bit offset: 19, bit width: 1, Filter scale configuration
    constexpr auto FSC20 = BitField<can2_t, 20, 1>{}; // bit offset: 20, bit width: 1, Filter scale configuration
    constexpr auto FSC21 = BitField<can2_t, 21, 1>{}; // bit offset: 21, bit width: 1, Filter scale configuration
    constexpr auto FSC22 = BitField<can2_t, 22, 1>{}; // bit offset: 22, bit width: 1, Filter scale configuration
    constexpr auto FSC23 = BitField<can2_t, 23, 1>{}; // bit offset: 23, bit width: 1, Filter scale configuration
    constexpr auto FSC24 = BitField<can2_t, 24, 1>{}; // bit offset: 24, bit width: 1, Filter scale configuration
    constexpr auto FSC25 = BitField<can2_t, 25, 1>{}; // bit offset: 25, bit width: 1, Filter scale configuration
    constexpr auto FSC26 = BitField<can2_t, 26, 1>{}; // bit offset: 26, bit width: 1, Filter scale configuration
    constexpr auto FSC27 = BitField<can2_t, 27, 1>{}; // bit offset: 27, bit width: 1, Filter scale configuration
    static Register<std::uint32_t, CAN2_BASE_ADDRESS + 0x0000020cu, 0, READWRITE, decltype(FSC0), decltype(FSC1), decltype(FSC2), decltype(FSC3), decltype(FSC4), decltype(FSC5), decltype(FSC6), decltype(FSC7), decltype(FSC8), decltype(FSC9), decltype(FSC10), decltype(FSC11), decltype(FSC12), decltype(FSC13), decltype(FSC14), decltype(FSC15), decltype(FSC16), decltype(FSC17), decltype(FSC18), decltype(FSC19), decltype(FSC20), decltype(FSC21), decltype(FSC22), decltype(FSC23), decltype(FSC24), decltype(FSC25), decltype(FSC26), decltype(FSC27)> FS1R; // filter scale register

    constexpr auto FFA0 = BitField<can2_t, 0, 1>{}; // bit offset: 0, bit width: 1, Filter FIFO assignment for filter 0
    constexpr auto FFA1 = BitField<can2_t, 1, 1>{}; // bit offset: 1, bit width: 1, Filter FIFO assignment for filter 1
    constexpr auto FFA2 = BitField<can2_t, 2, 1>{}; // bit offset: 2, bit width: 1, Filter FIFO assignment for filter 2
    constexpr auto FFA3 = BitField<can2_t, 3, 1>{}; // bit offset: 3, bit width: 1, Filter FIFO assignment for filter 3
    constexpr auto FFA4 = BitField<can2_t, 4, 1>{}; // bit offset: 4, bit width: 1, Filter FIFO assignment for filter 4
    constexpr auto FFA5 = BitField<can2_t, 5, 1>{}; // bit offset: 5, bit width: 1, Filter FIFO assignment for filter 5
    constexpr auto FFA6 = BitField<can2_t, 6, 1>{}; // bit offset: 6, bit width: 1, Filter FIFO assignment for filter 6
    constexpr auto FFA7 = BitField<can2_t, 7, 1>{}; // bit offset: 7, bit width: 1, Filter FIFO assignment for filter 7
    constexpr auto FFA8 = BitField<can2_t, 8, 1>{}; // bit offset: 8, bit width: 1, Filter FIFO assignment for filter 8
    constexpr auto FFA9 = BitField<can2_t, 9, 1>{}; // bit offset: 9, bit width: 1, Filter FIFO assignment for filter 9
    constexpr auto FFA10 = BitField<can2_t, 10, 1>{}; // bit offset: 10, bit width: 1, Filter FIFO assignment for filter 10
    constexpr auto FFA11 = BitField<can2_t, 11, 1>{}; // bit offset: 11, bit width: 1, Filter FIFO assignment for filter 11
    constexpr auto FFA12 = BitField<can2_t, 12, 1>{}; // bit offset: 12, bit width: 1, Filter FIFO assignment for filter 12
    constexpr auto FFA13 = BitField<can2_t, 13, 1>{}; // bit offset: 13, bit width: 1, Filter FIFO assignment for filter 13
    constexpr auto FFA14 = BitField<can2_t, 14, 1>{}; // bit offset: 14, bit width: 1, Filter FIFO assignment for filter 14
    constexpr auto FFA15 = BitField<can2_t, 15, 1>{}; // bit offset: 15, bit width: 1, Filter FIFO assignment for filter 15
    constexpr auto FFA16 = BitField<can2_t, 16, 1>{}; // bit offset: 16, bit width: 1, Filter FIFO assignment for filter 16
    constexpr auto FFA17 = BitField<can2_t, 17, 1>{}; // bit offset: 17, bit width: 1, Filter FIFO assignment for filter 17
    constexpr auto FFA18 = BitField<can2_t, 18, 1>{}; // bit offset: 18, bit width: 1, Filter FIFO assignment for filter 18
    constexpr auto FFA19 = BitField<can2_t, 19, 1>{}; // bit offset: 19, bit width: 1, Filter FIFO assignment for filter 19
    constexpr auto FFA20 = BitField<can2_t, 20, 1>{}; // bit offset: 20, bit width: 1, Filter FIFO assignment for filter 20
    constexpr auto FFA21 = BitField<can2_t, 21, 1>{}; // bit offset: 21, bit width: 1, Filter FIFO assignment for filter 21
    constexpr auto FFA22 = BitField<can2_t, 22, 1>{}; // bit offset: 22, bit width: 1, Filter FIFO assignment for filter 22
    constexpr auto FFA23 = BitField<can2_t, 23, 1>{}; // bit offset: 23, bit width: 1, Filter FIFO assignment for filter 23
    constexpr auto FFA24 = BitField<can2_t, 24, 1>{}; // bit offset: 24, bit width: 1, Filter FIFO assignment for filter 24
    constexpr auto FFA25 = BitField<can2_t, 25, 1>{}; // bit offset: 25, bit width: 1, Filter FIFO assignment for filter 25
    constexpr auto FFA26 = BitField<can2_t, 26, 1>{}; // bit offset: 26, bit width: 1, Filter FIFO assignment for filter 26
    constexpr auto FFA27 = BitField<can2_t, 27, 1>{}; // bit offset: 27, bit width: 1, Filter FIFO assignment for filter 27
    static Register<std::uint32_t, CAN2_BASE_ADDRESS + 0x00000214u, 0, READWRITE, decltype(FFA0), decltype(FFA1), decltype(FFA2), decltype(FFA3), decltype(FFA4), decltype(FFA5), decltype(FFA6), decltype(FFA7), decltype(FFA8), decltype(FFA9), decltype(FFA10), decltype(FFA11), decltype(FFA12), decltype(FFA13), decltype(FFA14), decltype(FFA15), decltype(FFA16), decltype(FFA17), decltype(FFA18), decltype(FFA19), decltype(FFA20), decltype(FFA21), decltype(FFA22), decltype(FFA23), decltype(FFA24), decltype(FFA25), decltype(FFA26), decltype(FFA27)> FFA1R; // filter FIFO assignment register

    constexpr auto FACT0 = BitField<can2_t, 0, 1>{}; // bit offset: 0, bit width: 1, Filter active
    constexpr auto FACT1 = BitField<can2_t, 1, 1>{}; // bit offset: 1, bit width: 1, Filter active
    constexpr auto FACT2 = BitField<can2_t, 2, 1>{}; // bit offset: 2, bit width: 1, Filter active
    constexpr auto FACT3 = BitField<can2_t, 3, 1>{}; // bit offset: 3, bit width: 1, Filter active
    constexpr auto FACT4 = BitField<can2_t, 4, 1>{}; // bit offset: 4, bit width: 1, Filter active
    constexpr auto FACT5 = BitField<can2_t, 5, 1>{}; // bit offset: 5, bit width: 1, Filter active
    constexpr auto FACT6 = BitField<can2_t, 6, 1>{}; // bit offset: 6, bit width: 1, Filter active
    constexpr auto FACT7 = BitField<can2_t, 7, 1>{}; // bit offset: 7, bit width: 1, Filter active
    constexpr auto FACT8 = BitField<can2_t, 8, 1>{}; // bit offset: 8, bit width: 1, Filter active
    constexpr auto FACT9 = BitField<can2_t, 9, 1>{}; // bit offset: 9, bit width: 1, Filter active
    constexpr auto FACT10 = BitField<can2_t, 10, 1>{}; // bit offset: 10, bit width: 1, Filter active
    constexpr auto FACT11 = BitField<can2_t, 11, 1>{}; // bit offset: 11, bit width: 1, Filter active
    constexpr auto FACT12 = BitField<can2_t, 12, 1>{}; // bit offset: 12, bit width: 1, Filter active
    constexpr auto FACT13 = BitField<can2_t, 13, 1>{}; // bit offset: 13, bit width: 1, Filter active
    constexpr auto FACT14 = BitField<can2_t, 14, 1>{}; // bit offset: 14, bit width: 1, Filter active
    constexpr auto FACT15 = BitField<can2_t, 15, 1>{}; // bit offset: 15, bit width: 1, Filter active
    constexpr auto FACT16 = BitField<can2_t, 16, 1>{}; // bit offset: 16, bit width: 1, Filter active
    constexpr auto FACT17 = BitField<can2_t, 17, 1>{}; // bit offset: 17, bit width: 1, Filter active
    constexpr auto FACT18 = BitField<can2_t, 18, 1>{}; // bit offset: 18, bit width: 1, Filter active
    constexpr auto FACT19 = BitField<can2_t, 19, 1>{}; // bit offset: 19, bit width: 1, Filter active
    constexpr auto FACT20 = BitField<can2_t, 20, 1>{}; // bit offset: 20, bit width: 1, Filter active
    constexpr auto FACT21 = BitField<can2_t, 21, 1>{}; // bit offset: 21, bit width: 1, Filter active
    constexpr auto FACT22 = BitField<can2_t, 22, 1>{}; // bit offset: 22, bit width: 1, Filter active
    constexpr auto FACT23 = BitField<can2_t, 23, 1>{}; // bit offset: 23, bit width: 1, Filter active
    constexpr auto FACT24 = BitField<can2_t, 24, 1>{}; // bit offset: 24, bit width: 1, Filter active
    constexpr auto FACT25 = BitField<can2_t, 25, 1>{}; // bit offset: 25, bit width: 1, Filter active
    constexpr auto FACT26 = BitField<can2_t, 26, 1>{}; // bit offset: 26, bit width: 1, Filter active
    constexpr auto FACT27 = BitField<can2_t, 27, 1>{}; // bit offset: 27, bit width: 1, Filter active
    static Register<std::uint32_t, CAN2_BASE_ADDRESS + 0x0000021cu, 0, READWRITE, decltype(FACT0), decltype(FACT1), decltype(FACT2), decltype(FACT3), decltype(FACT4), decltype(FACT5), decltype(FACT6), decltype(FACT7), decltype(FACT8), decltype(FACT9), decltype(FACT10), decltype(FACT11), decltype(FACT12), decltype(FACT13), decltype(FACT14), decltype(FACT15), decltype(FACT16), decltype(FACT17), decltype(FACT18), decltype(FACT19), decltype(FACT20), decltype(FACT21), decltype(FACT22), decltype(FACT23), decltype(FACT24), decltype(FACT25), decltype(FACT26), decltype(FACT27)> FA1R; // filter activation register

    constexpr auto FB0 = BitField<can2_t, 0, 1>{}; // bit offset: 0, bit width: 1, Filter bits
    constexpr auto FB1 = BitField<can2_t, 1, 1>{}; // bit offset: 1, bit width: 1, Filter bits
    constexpr auto FB2 = BitField<can2_t, 2, 1>{}; // bit offset: 2, bit width: 1, Filter bits
    constexpr auto FB3 = BitField<can2_t, 3, 1>{}; // bit offset: 3, bit width: 1, Filter bits
    constexpr auto FB4 = BitField<can2_t, 4, 1>{}; // bit offset: 4, bit width: 1, Filter bits
    constexpr auto FB5 = BitField<can2_t, 5, 1>{}; // bit offset: 5, bit width: 1, Filter bits
    constexpr auto FB6 = BitField<can2_t, 6, 1>{}; // bit offset: 6, bit width: 1, Filter bits
    constexpr auto FB7 = BitField<can2_t, 7, 1>{}; // bit offset: 7, bit width: 1, Filter bits
    constexpr auto FB8 = BitField<can2_t, 8, 1>{}; // bit offset: 8, bit width: 1, Filter bits
    constexpr auto FB9 = BitField<can2_t, 9, 1>{}; // bit offset: 9, bit width: 1, Filter bits
    constexpr auto FB10 = BitField<can2_t, 10, 1>{}; // bit offset: 10, bit width: 1, Filter bits
    constexpr auto FB11 = BitField<can2_t, 11, 1>{}; // bit offset: 11, bit width: 1, Filter bits
    constexpr auto FB12 = BitField<can2_t, 12, 1>{}; // bit offset: 12, bit width: 1, Filter bits
    constexpr auto FB13 = BitField<can2_t, 13, 1>{}; // bit offset: 13, bit width: 1, Filter bits
    constexpr auto FB14 = BitField<can2_t, 14, 1>{}; // bit offset: 14, bit width: 1, Filter bits
    constexpr auto FB15 = BitField<can2_t, 15, 1>{}; // bit offset: 15, bit width: 1, Filter bits
    constexpr auto FB16 = BitField<can2_t, 16, 1>{}; // bit offset: 16, bit width: 1, Filter bits
    constexpr auto FB17 = BitField<can2_t, 17, 1>{}; // bit offset: 17, bit width: 1, Filter bits
    constexpr auto FB18 = BitField<can2_t, 18, 1>{}; // bit offset: 18, bit width: 1, Filter bits
    constexpr auto FB19 = BitField<can2_t, 19, 1>{}; // bit offset: 19, bit width: 1, Filter bits
    constexpr auto FB20 = BitField<can2_t, 20, 1>{}; // bit offset: 20, bit width: 1, Filter bits
    constexpr auto FB21 = BitField<can2_t, 21, 1>{}; // bit offset: 21, bit width: 1, Filter bits
    constexpr auto FB22 = BitField<can2_t, 22, 1>{}; // bit offset: 22, bit width: 1, Filter bits
    constexpr auto FB23 = BitField<can2_t, 23, 1>{}; // bit offset: 23, bit width: 1, Filter bits
    constexpr auto FB24 = BitField<can2_t, 24, 1>{}; // bit offset: 24, bit width: 1, Filter bits
    constexpr auto FB25 = BitField<can2_t, 25, 1>{}; // bit offset: 25, bit width: 1, Filter bits
    constexpr auto FB26 = BitField<can2_t, 26, 1>{}; // bit offset: 26, bit width: 1, Filter bits
    constexpr auto FB27 = BitField<can2_t, 27, 1>{}; // bit offset: 27, bit width: 1, Filter bits
    constexpr auto FB28 = BitField<can2_t, 28, 1>{}; // bit offset: 28, bit width: 1, Filter bits
    constexpr auto FB29 = BitField<can2_t, 29, 1>{}; // bit offset: 29, bit width: 1, Filter bits
    constexpr auto FB30 = BitField<can2_t, 30, 1>{}; // bit offset: 30, bit width: 1, Filter bits
    constexpr auto FB31 = BitField<can2_t, 31, 1>{}; // bit offset: 31, bit width: 1, Filter bits
    static Register<std::uint32_t, CAN2_BASE_ADDRESS + 0x00000240u, 0, READWRITE, decltype(FB0), decltype(FB1), decltype(FB2), decltype(FB3), decltype(FB4), decltype(FB5), decltype(FB6), decltype(FB7), decltype(FB8), decltype(FB9), decltype(FB10), decltype(FB11), decltype(FB12), decltype(FB13), decltype(FB14), decltype(FB15), decltype(FB16), decltype(FB17), decltype(FB18), decltype(FB19), decltype(FB20), decltype(FB21), decltype(FB22), decltype(FB23), decltype(FB24), decltype(FB25), decltype(FB26), decltype(FB27), decltype(FB28), decltype(FB29), decltype(FB30), decltype(FB31)> F0R1; // Filter bank 0 register 1

    constexpr auto FB0 = BitField<can2_t, 0, 1>{}; // bit offset: 0, bit width: 1, Filter bits
    constexpr auto FB1 = BitField<can2_t, 1, 1>{}; // bit offset: 1, bit width: 1, Filter bits
    constexpr auto FB2 = BitField<can2_t, 2, 1>{}; // bit offset: 2, bit width: 1, Filter bits
    constexpr auto FB3 = BitField<can2_t, 3, 1>{}; // bit offset: 3, bit width: 1, Filter bits
    constexpr auto FB4 = BitField<can2_t, 4, 1>{}; // bit offset: 4, bit width: 1, Filter bits
    constexpr auto FB5 = BitField<can2_t, 5, 1>{}; // bit offset: 5, bit width: 1, Filter bits
    constexpr auto FB6 = BitField<can2_t, 6, 1>{}; // bit offset: 6, bit width: 1, Filter bits
    constexpr auto FB7 = BitField<can2_t, 7, 1>{}; // bit offset: 7, bit width: 1, Filter bits
    constexpr auto FB8 = BitField<can2_t, 8, 1>{}; // bit offset: 8, bit width: 1, Filter bits
    constexpr auto FB9 = BitField<can2_t, 9, 1>{}; // bit offset: 9, bit width: 1, Filter bits
    constexpr auto FB10 = BitField<can2_t, 10, 1>{}; // bit offset: 10, bit width: 1, Filter bits
    constexpr auto FB11 = BitField<can2_t, 11, 1>{}; // bit offset: 11, bit width: 1, Filter bits
    constexpr auto FB12 = BitField<can2_t, 12, 1>{}; // bit offset: 12, bit width: 1, Filter bits
    constexpr auto FB13 = BitField<can2_t, 13, 1>{}; // bit offset: 13, bit width: 1, Filter bits
    constexpr auto FB14 = BitField<can2_t, 14, 1>{}; // bit offset: 14, bit width: 1, Filter bits
    constexpr auto FB15 = BitField<can2_t, 15, 1>{}; // bit offset: 15, bit width: 1, Filter bits
    constexpr auto FB16 = BitField<can2_t, 16, 1>{}; // bit offset: 16, bit width: 1, Filter bits
    constexpr auto FB17 = BitField<can2_t, 17, 1>{}; // bit offset: 17, bit width: 1, Filter bits
    constexpr auto FB18 = BitField<can2_t, 18, 1>{}; // bit offset: 18, bit width: 1, Filter bits
    constexpr auto FB19 = BitField<can2_t, 19, 1>{}; // bit offset: 19, bit width: 1, Filter bits
    constexpr auto FB20 = BitField<can2_t, 20, 1>{}; // bit offset: 20, bit width: 1, Filter bits
    constexpr auto FB21 = BitField<can2_t, 21, 1>{}; // bit offset: 21, bit width: 1, Filter bits
    constexpr auto FB22 = BitField<can2_t, 22, 1>{}; // bit offset: 22, bit width: 1, Filter bits
    constexpr auto FB23 = BitField<can2_t, 23, 1>{}; // bit offset: 23, bit width: 1, Filter bits
    constexpr auto FB24 = BitField<can2_t, 24, 1>{}; // bit offset: 24, bit width: 1, Filter bits
    constexpr auto FB25 = BitField<can2_t, 25, 1>{}; // bit offset: 25, bit width: 1, Filter bits
    constexpr auto FB26 = BitField<can2_t, 26, 1>{}; // bit offset: 26, bit width: 1, Filter bits
    constexpr auto FB27 = BitField<can2_t, 27, 1>{}; // bit offset: 27, bit width: 1, Filter bits
    constexpr auto FB28 = BitField<can2_t, 28, 1>{}; // bit offset: 28, bit width: 1, Filter bits
    constexpr auto FB29 = BitField<can2_t, 29, 1>{}; // bit offset: 29, bit width: 1, Filter bits
    constexpr auto FB30 = BitField<can2_t, 30, 1>{}; // bit offset: 30, bit width: 1, Filter bits
    constexpr auto FB31 = BitField<can2_t, 31, 1>{}; // bit offset: 31, bit width: 1, Filter bits
    static Register<std::uint32_t, CAN2_BASE_ADDRESS + 0x00000244u, 0, READWRITE, decltype(FB0), decltype(FB1), decltype(FB2), decltype(FB3), decltype(FB4), decltype(FB5), decltype(FB6), decltype(FB7), decltype(FB8), decltype(FB9), decltype(FB10), decltype(FB11), decltype(FB12), decltype(FB13), decltype(FB14), decltype(FB15), decltype(FB16), decltype(FB17), decltype(FB18), decltype(FB19), decltype(FB20), decltype(FB21), decltype(FB22), decltype(FB23), decltype(FB24), decltype(FB25), decltype(FB26), decltype(FB27), decltype(FB28), decltype(FB29), decltype(FB30), decltype(FB31)> F0R2; // Filter bank 0 register 2

    constexpr auto FB0 = BitField<can2_t, 0, 1>{}; // bit offset: 0, bit width: 1, Filter bits
    constexpr auto FB1 = BitField<can2_t, 1, 1>{}; // bit offset: 1, bit width: 1, Filter bits
    constexpr auto FB2 = BitField<can2_t, 2, 1>{}; // bit offset: 2, bit width: 1, Filter bits
    constexpr auto FB3 = BitField<can2_t, 3, 1>{}; // bit offset: 3, bit width: 1, Filter bits
    constexpr auto FB4 = BitField<can2_t, 4, 1>{}; // bit offset: 4, bit width: 1, Filter bits
    constexpr auto FB5 = BitField<can2_t, 5, 1>{}; // bit offset: 5, bit width: 1, Filter bits
    constexpr auto FB6 = BitField<can2_t, 6, 1>{}; // bit offset: 6, bit width: 1, Filter bits
    constexpr auto FB7 = BitField<can2_t, 7, 1>{}; // bit offset: 7, bit width: 1, Filter bits
    constexpr auto FB8 = BitField<can2_t, 8, 1>{}; // bit offset: 8, bit width: 1, Filter bits
    constexpr auto FB9 = BitField<can2_t, 9, 1>{}; // bit offset: 9, bit width: 1, Filter bits
    constexpr auto FB10 = BitField<can2_t, 10, 1>{}; // bit offset: 10, bit width: 1, Filter bits
    constexpr auto FB11 = BitField<can2_t, 11, 1>{}; // bit offset: 11, bit width: 1, Filter bits
    constexpr auto FB12 = BitField<can2_t, 12, 1>{}; // bit offset: 12, bit width: 1, Filter bits
    constexpr auto FB13 = BitField<can2_t, 13, 1>{}; // bit offset: 13, bit width: 1, Filter bits
    constexpr auto FB14 = BitField<can2_t, 14, 1>{}; // bit offset: 14, bit width: 1, Filter bits
    constexpr auto FB15 = BitField<can2_t, 15, 1>{}; // bit offset: 15, bit width: 1, Filter bits
    constexpr auto FB16 = BitField<can2_t, 16, 1>{}; // bit offset: 16, bit width: 1, Filter bits
    constexpr auto FB17 = BitField<can2_t, 17, 1>{}; // bit offset: 17, bit width: 1, Filter bits
    constexpr auto FB18 = BitField<can2_t, 18, 1>{}; // bit offset: 18, bit width: 1, Filter bits
    constexpr auto FB19 = BitField<can2_t, 19, 1>{}; // bit offset: 19, bit width: 1, Filter bits
    constexpr auto FB20 = BitField<can2_t, 20, 1>{}; // bit offset: 20, bit width: 1, Filter bits
    constexpr auto FB21 = BitField<can2_t, 21, 1>{}; // bit offset: 21, bit width: 1, Filter bits
    constexpr auto FB22 = BitField<can2_t, 22, 1>{}; // bit offset: 22, bit width: 1, Filter bits
    constexpr auto FB23 = BitField<can2_t, 23, 1>{}; // bit offset: 23, bit width: 1, Filter bits
    constexpr auto FB24 = BitField<can2_t, 24, 1>{}; // bit offset: 24, bit width: 1, Filter bits
    constexpr auto FB25 = BitField<can2_t, 25, 1>{}; // bit offset: 25, bit width: 1, Filter bits
    constexpr auto FB26 = BitField<can2_t, 26, 1>{}; // bit offset: 26, bit width: 1, Filter bits
    constexpr auto FB27 = BitField<can2_t, 27, 1>{}; // bit offset: 27, bit width: 1, Filter bits
    constexpr auto FB28 = BitField<can2_t, 28, 1>{}; // bit offset: 28, bit width: 1, Filter bits
    constexpr auto FB29 = BitField<can2_t, 29, 1>{}; // bit offset: 29, bit width: 1, Filter bits
    constexpr auto FB30 = BitField<can2_t, 30, 1>{}; // bit offset: 30, bit width: 1, Filter bits
    constexpr auto FB31 = BitField<can2_t, 31, 1>{}; // bit offset: 31, bit width: 1, Filter bits
    static Register<std::uint32_t, CAN2_BASE_ADDRESS + 0x00000248u, 0, READWRITE, decltype(FB0), decltype(FB1), decltype(FB2), decltype(FB3), decltype(FB4), decltype(FB5), decltype(FB6), decltype(FB7), decltype(FB8), decltype(FB9), decltype(FB10), decltype(FB11), decltype(FB12), decltype(FB13), decltype(FB14), decltype(FB15), decltype(FB16), decltype(FB17), decltype(FB18), decltype(FB19), decltype(FB20), decltype(FB21), decltype(FB22), decltype(FB23), decltype(FB24), decltype(FB25), decltype(FB26), decltype(FB27), decltype(FB28), decltype(FB29), decltype(FB30), decltype(FB31)> F1R1; // Filter bank 1 register 1

    constexpr auto FB0 = BitField<can2_t, 0, 1>{}; // bit offset: 0, bit width: 1, Filter bits
    constexpr auto FB1 = BitField<can2_t, 1, 1>{}; // bit offset: 1, bit width: 1, Filter bits
    constexpr auto FB2 = BitField<can2_t, 2, 1>{}; // bit offset: 2, bit width: 1, Filter bits
    constexpr auto FB3 = BitField<can2_t, 3, 1>{}; // bit offset: 3, bit width: 1, Filter bits
    constexpr auto FB4 = BitField<can2_t, 4, 1>{}; // bit offset: 4, bit width: 1, Filter bits
    constexpr auto FB5 = BitField<can2_t, 5, 1>{}; // bit offset: 5, bit width: 1, Filter bits
    constexpr auto FB6 = BitField<can2_t, 6, 1>{}; // bit offset: 6, bit width: 1, Filter bits
    constexpr auto FB7 = BitField<can2_t, 7, 1>{}; // bit offset: 7, bit width: 1, Filter bits
    constexpr auto FB8 = BitField<can2_t, 8, 1>{}; // bit offset: 8, bit width: 1, Filter bits
    constexpr auto FB9 = BitField<can2_t, 9, 1>{}; // bit offset: 9, bit width: 1, Filter bits
    constexpr auto FB10 = BitField<can2_t, 10, 1>{}; // bit offset: 10, bit width: 1, Filter bits
    constexpr auto FB11 = BitField<can2_t, 11, 1>{}; // bit offset: 11, bit width: 1, Filter bits
    constexpr auto FB12 = BitField<can2_t, 12, 1>{}; // bit offset: 12, bit width: 1, Filter bits
    constexpr auto FB13 = BitField<can2_t, 13, 1>{}; // bit offset: 13, bit width: 1, Filter bits
    constexpr auto FB14 = BitField<can2_t, 14, 1>{}; // bit offset: 14, bit width: 1, Filter bits
    constexpr auto FB15 = BitField<can2_t, 15, 1>{}; // bit offset: 15, bit width: 1, Filter bits
    constexpr auto FB16 = BitField<can2_t, 16, 1>{}; // bit offset: 16, bit width: 1, Filter bits
    constexpr auto FB17 = BitField<can2_t, 17, 1>{}; // bit offset: 17, bit width: 1, Filter bits
    constexpr auto FB18 = BitField<can2_t, 18, 1>{}; // bit offset: 18, bit width: 1, Filter bits
    constexpr auto FB19 = BitField<can2_t, 19, 1>{}; // bit offset: 19, bit width: 1, Filter bits
    constexpr auto FB20 = BitField<can2_t, 20, 1>{}; // bit offset: 20, bit width: 1, Filter bits
    constexpr auto FB21 = BitField<can2_t, 21, 1>{}; // bit offset: 21, bit width: 1, Filter bits
    constexpr auto FB22 = BitField<can2_t, 22, 1>{}; // bit offset: 22, bit width: 1, Filter bits
    constexpr auto FB23 = BitField<can2_t, 23, 1>{}; // bit offset: 23, bit width: 1, Filter bits
    constexpr auto FB24 = BitField<can2_t, 24, 1>{}; // bit offset: 24, bit width: 1, Filter bits
    constexpr auto FB25 = BitField<can2_t, 25, 1>{}; // bit offset: 25, bit width: 1, Filter bits
    constexpr auto FB26 = BitField<can2_t, 26, 1>{}; // bit offset: 26, bit width: 1, Filter bits
    constexpr auto FB27 = BitField<can2_t, 27, 1>{}; // bit offset: 27, bit width: 1, Filter bits
    constexpr auto FB28 = BitField<can2_t, 28, 1>{}; // bit offset: 28, bit width: 1, Filter bits
    constexpr auto FB29 = BitField<can2_t, 29, 1>{}; // bit offset: 29, bit width: 1, Filter bits
    constexpr auto FB30 = BitField<can2_t, 30, 1>{}; // bit offset: 30, bit width: 1, Filter bits
    constexpr auto FB31 = BitField<can2_t, 31, 1>{}; // bit offset: 31, bit width: 1, Filter bits
    static Register<std::uint32_t, CAN2_BASE_ADDRESS + 0x0000024cu, 0, READWRITE, decltype(FB0), decltype(FB1), decltype(FB2), decltype(FB3), decltype(FB4), decltype(FB5), decltype(FB6), decltype(FB7), decltype(FB8), decltype(FB9), decltype(FB10), decltype(FB11), decltype(FB12), decltype(FB13), decltype(FB14), decltype(FB15), decltype(FB16), decltype(FB17), decltype(FB18), decltype(FB19), decltype(FB20), decltype(FB21), decltype(FB22), decltype(FB23), decltype(FB24), decltype(FB25), decltype(FB26), decltype(FB27), decltype(FB28), decltype(FB29), decltype(FB30), decltype(FB31)> F1R2; // Filter bank 1 register 2

    constexpr auto FB0 = BitField<can2_t, 0, 1>{}; // bit offset: 0, bit width: 1, Filter bits
    constexpr auto FB1 = BitField<can2_t, 1, 1>{}; // bit offset: 1, bit width: 1, Filter bits
    constexpr auto FB2 = BitField<can2_t, 2, 1>{}; // bit offset: 2, bit width: 1, Filter bits
    constexpr auto FB3 = BitField<can2_t, 3, 1>{}; // bit offset: 3, bit width: 1, Filter bits
    constexpr auto FB4 = BitField<can2_t, 4, 1>{}; // bit offset: 4, bit width: 1, Filter bits
    constexpr auto FB5 = BitField<can2_t, 5, 1>{}; // bit offset: 5, bit width: 1, Filter bits
    constexpr auto FB6 = BitField<can2_t, 6, 1>{}; // bit offset: 6, bit width: 1, Filter bits
    constexpr auto FB7 = BitField<can2_t, 7, 1>{}; // bit offset: 7, bit width: 1, Filter bits
    constexpr auto FB8 = BitField<can2_t, 8, 1>{}; // bit offset: 8, bit width: 1, Filter bits
    constexpr auto FB9 = BitField<can2_t, 9, 1>{}; // bit offset: 9, bit width: 1, Filter bits
    constexpr auto FB10 = BitField<can2_t, 10, 1>{}; // bit offset: 10, bit width: 1, Filter bits
    constexpr auto FB11 = BitField<can2_t, 11, 1>{}; // bit offset: 11, bit width: 1, Filter bits
    constexpr auto FB12 = BitField<can2_t, 12, 1>{}; // bit offset: 12, bit width: 1, Filter bits
    constexpr auto FB13 = BitField<can2_t, 13, 1>{}; // bit offset: 13, bit width: 1, Filter bits
    constexpr auto FB14 = BitField<can2_t, 14, 1>{}; // bit offset: 14, bit width: 1, Filter bits
    constexpr auto FB15 = BitField<can2_t, 15, 1>{}; // bit offset: 15, bit width: 1, Filter bits
    constexpr auto FB16 = BitField<can2_t, 16, 1>{}; // bit offset: 16, bit width: 1, Filter bits
    constexpr auto FB17 = BitField<can2_t, 17, 1>{}; // bit offset: 17, bit width: 1, Filter bits
    constexpr auto FB18 = BitField<can2_t, 18, 1>{}; // bit offset: 18, bit width: 1, Filter bits
    constexpr auto FB19 = BitField<can2_t, 19, 1>{}; // bit offset: 19, bit width: 1, Filter bits
    constexpr auto FB20 = BitField<can2_t, 20, 1>{}; // bit offset: 20, bit width: 1, Filter bits
    constexpr auto FB21 = BitField<can2_t, 21, 1>{}; // bit offset: 21, bit width: 1, Filter bits
    constexpr auto FB22 = BitField<can2_t, 22, 1>{}; // bit offset: 22, bit width: 1, Filter bits
    constexpr auto FB23 = BitField<can2_t, 23, 1>{}; // bit offset: 23, bit width: 1, Filter bits
    constexpr auto FB24 = BitField<can2_t, 24, 1>{}; // bit offset: 24, bit width: 1, Filter bits
    constexpr auto FB25 = BitField<can2_t, 25, 1>{}; // bit offset: 25, bit width: 1, Filter bits
    constexpr auto FB26 = BitField<can2_t, 26, 1>{}; // bit offset: 26, bit width: 1, Filter bits
    constexpr auto FB27 = BitField<can2_t, 27, 1>{}; // bit offset: 27, bit width: 1, Filter bits
    constexpr auto FB28 = BitField<can2_t, 28, 1>{}; // bit offset: 28, bit width: 1, Filter bits
    constexpr auto FB29 = BitField<can2_t, 29, 1>{}; // bit offset: 29, bit width: 1, Filter bits
    constexpr auto FB30 = BitField<can2_t, 30, 1>{}; // bit offset: 30, bit width: 1, Filter bits
    constexpr auto FB31 = BitField<can2_t, 31, 1>{}; // bit offset: 31, bit width: 1, Filter bits
    static Register<std::uint32_t, CAN2_BASE_ADDRESS + 0x00000250u, 0, READWRITE, decltype(FB0), decltype(FB1), decltype(FB2), decltype(FB3), decltype(FB4), decltype(FB5), decltype(FB6), decltype(FB7), decltype(FB8), decltype(FB9), decltype(FB10), decltype(FB11), decltype(FB12), decltype(FB13), decltype(FB14), decltype(FB15), decltype(FB16), decltype(FB17), decltype(FB18), decltype(FB19), decltype(FB20), decltype(FB21), decltype(FB22), decltype(FB23), decltype(FB24), decltype(FB25), decltype(FB26), decltype(FB27), decltype(FB28), decltype(FB29), decltype(FB30), decltype(FB31)> F2R1; // Filter bank 2 register 1

    constexpr auto FB0 = BitField<can2_t, 0, 1>{}; // bit offset: 0, bit width: 1, Filter bits
    constexpr auto FB1 = BitField<can2_t, 1, 1>{}; // bit offset: 1, bit width: 1, Filter bits
    constexpr auto FB2 = BitField<can2_t, 2, 1>{}; // bit offset: 2, bit width: 1, Filter bits
    constexpr auto FB3 = BitField<can2_t, 3, 1>{}; // bit offset: 3, bit width: 1, Filter bits
    constexpr auto FB4 = BitField<can2_t, 4, 1>{}; // bit offset: 4, bit width: 1, Filter bits
    constexpr auto FB5 = BitField<can2_t, 5, 1>{}; // bit offset: 5, bit width: 1, Filter bits
    constexpr auto FB6 = BitField<can2_t, 6, 1>{}; // bit offset: 6, bit width: 1, Filter bits
    constexpr auto FB7 = BitField<can2_t, 7, 1>{}; // bit offset: 7, bit width: 1, Filter bits
    constexpr auto FB8 = BitField<can2_t, 8, 1>{}; // bit offset: 8, bit width: 1, Filter bits
    constexpr auto FB9 = BitField<can2_t, 9, 1>{}; // bit offset: 9, bit width: 1, Filter bits
    constexpr auto FB10 = BitField<can2_t, 10, 1>{}; // bit offset: 10, bit width: 1, Filter bits
    constexpr auto FB11 = BitField<can2_t, 11, 1>{}; // bit offset: 11, bit width: 1, Filter bits
    constexpr auto FB12 = BitField<can2_t, 12, 1>{}; // bit offset: 12, bit width: 1, Filter bits
    constexpr auto FB13 = BitField<can2_t, 13, 1>{}; // bit offset: 13, bit width: 1, Filter bits
    constexpr auto FB14 = BitField<can2_t, 14, 1>{}; // bit offset: 14, bit width: 1, Filter bits
    constexpr auto FB15 = BitField<can2_t, 15, 1>{}; // bit offset: 15, bit width: 1, Filter bits
    constexpr auto FB16 = BitField<can2_t, 16, 1>{}; // bit offset: 16, bit width: 1, Filter bits
    constexpr auto FB17 = BitField<can2_t, 17, 1>{}; // bit offset: 17, bit width: 1, Filter bits
    constexpr auto FB18 = BitField<can2_t, 18, 1>{}; // bit offset: 18, bit width: 1, Filter bits
    constexpr auto FB19 = BitField<can2_t, 19, 1>{}; // bit offset: 19, bit width: 1, Filter bits
    constexpr auto FB20 = BitField<can2_t, 20, 1>{}; // bit offset: 20, bit width: 1, Filter bits
    constexpr auto FB21 = BitField<can2_t, 21, 1>{}; // bit offset: 21, bit width: 1, Filter bits
    constexpr auto FB22 = BitField<can2_t, 22, 1>{}; // bit offset: 22, bit width: 1, Filter bits
    constexpr auto FB23 = BitField<can2_t, 23, 1>{}; // bit offset: 23, bit width: 1, Filter bits
    constexpr auto FB24 = BitField<can2_t, 24, 1>{}; // bit offset: 24, bit width: 1, Filter bits
    constexpr auto FB25 = BitField<can2_t, 25, 1>{}; // bit offset: 25, bit width: 1, Filter bits
    constexpr auto FB26 = BitField<can2_t, 26, 1>{}; // bit offset: 26, bit width: 1, Filter bits
    constexpr auto FB27 = BitField<can2_t, 27, 1>{}; // bit offset: 27, bit width: 1, Filter bits
    constexpr auto FB28 = BitField<can2_t, 28, 1>{}; // bit offset: 28, bit width: 1, Filter bits
    constexpr auto FB29 = BitField<can2_t, 29, 1>{}; // bit offset: 29, bit width: 1, Filter bits
    constexpr auto FB30 = BitField<can2_t, 30, 1>{}; // bit offset: 30, bit width: 1, Filter bits
    constexpr auto FB31 = BitField<can2_t, 31, 1>{}; // bit offset: 31, bit width: 1, Filter bits
    static Register<std::uint32_t, CAN2_BASE_ADDRESS + 0x00000254u, 0, READWRITE, decltype(FB0), decltype(FB1), decltype(FB2), decltype(FB3), decltype(FB4), decltype(FB5), decltype(FB6), decltype(FB7), decltype(FB8), decltype(FB9), decltype(FB10), decltype(FB11), decltype(FB12), decltype(FB13), decltype(FB14), decltype(FB15), decltype(FB16), decltype(FB17), decltype(FB18), decltype(FB19), decltype(FB20), decltype(FB21), decltype(FB22), decltype(FB23), decltype(FB24), decltype(FB25), decltype(FB26), decltype(FB27), decltype(FB28), decltype(FB29), decltype(FB30), decltype(FB31)> F2R2; // Filter bank 2 register 2

    constexpr auto FB0 = BitField<can2_t, 0, 1>{}; // bit offset: 0, bit width: 1, Filter bits
    constexpr auto FB1 = BitField<can2_t, 1, 1>{}; // bit offset: 1, bit width: 1, Filter bits
    constexpr auto FB2 = BitField<can2_t, 2, 1>{}; // bit offset: 2, bit width: 1, Filter bits
    constexpr auto FB3 = BitField<can2_t, 3, 1>{}; // bit offset: 3, bit width: 1, Filter bits
    constexpr auto FB4 = BitField<can2_t, 4, 1>{}; // bit offset: 4, bit width: 1, Filter bits
    constexpr auto FB5 = BitField<can2_t, 5, 1>{}; // bit offset: 5, bit width: 1, Filter bits
    constexpr auto FB6 = BitField<can2_t, 6, 1>{}; // bit offset: 6, bit width: 1, Filter bits
    constexpr auto FB7 = BitField<can2_t, 7, 1>{}; // bit offset: 7, bit width: 1, Filter bits
    constexpr auto FB8 = BitField<can2_t, 8, 1>{}; // bit offset: 8, bit width: 1, Filter bits
    constexpr auto FB9 = BitField<can2_t, 9, 1>{}; // bit offset: 9, bit width: 1, Filter bits
    constexpr auto FB10 = BitField<can2_t, 10, 1>{}; // bit offset: 10, bit width: 1, Filter bits
    constexpr auto FB11 = BitField<can2_t, 11, 1>{}; // bit offset: 11, bit width: 1, Filter bits
    constexpr auto FB12 = BitField<can2_t, 12, 1>{}; // bit offset: 12, bit width: 1, Filter bits
    constexpr auto FB13 = BitField<can2_t, 13, 1>{}; // bit offset: 13, bit width: 1, Filter bits
    constexpr auto FB14 = BitField<can2_t, 14, 1>{}; // bit offset: 14, bit width: 1, Filter bits
    constexpr auto FB15 = BitField<can2_t, 15, 1>{}; // bit offset: 15, bit width: 1, Filter bits
    constexpr auto FB16 = BitField<can2_t, 16, 1>{}; // bit offset: 16, bit width: 1, Filter bits
    constexpr auto FB17 = BitField<can2_t, 17, 1>{}; // bit offset: 17, bit width: 1, Filter bits
    constexpr auto FB18 = BitField<can2_t, 18, 1>{}; // bit offset: 18, bit width: 1, Filter bits
    constexpr auto FB19 = BitField<can2_t, 19, 1>{}; // bit offset: 19, bit width: 1, Filter bits
    constexpr auto FB20 = BitField<can2_t, 20, 1>{}; // bit offset: 20, bit width: 1, Filter bits
    constexpr auto FB21 = BitField<can2_t, 21, 1>{}; // bit offset: 21, bit width: 1, Filter bits
    constexpr auto FB22 = BitField<can2_t, 22, 1>{}; // bit offset: 22, bit width: 1, Filter bits
    constexpr auto FB23 = BitField<can2_t, 23, 1>{}; // bit offset: 23, bit width: 1, Filter bits
    constexpr auto FB24 = BitField<can2_t, 24, 1>{}; // bit offset: 24, bit width: 1, Filter bits
    constexpr auto FB25 = BitField<can2_t, 25, 1>{}; // bit offset: 25, bit width: 1, Filter bits
    constexpr auto FB26 = BitField<can2_t, 26, 1>{}; // bit offset: 26, bit width: 1, Filter bits
    constexpr auto FB27 = BitField<can2_t, 27, 1>{}; // bit offset: 27, bit width: 1, Filter bits
    constexpr auto FB28 = BitField<can2_t, 28, 1>{}; // bit offset: 28, bit width: 1, Filter bits
    constexpr auto FB29 = BitField<can2_t, 29, 1>{}; // bit offset: 29, bit width: 1, Filter bits
    constexpr auto FB30 = BitField<can2_t, 30, 1>{}; // bit offset: 30, bit width: 1, Filter bits
    constexpr auto FB31 = BitField<can2_t, 31, 1>{}; // bit offset: 31, bit width: 1, Filter bits
    static Register<std::uint32_t, CAN2_BASE_ADDRESS + 0x00000258u, 0, READWRITE, decltype(FB0), decltype(FB1), decltype(FB2), decltype(FB3), decltype(FB4), decltype(FB5), decltype(FB6), decltype(FB7), decltype(FB8), decltype(FB9), decltype(FB10), decltype(FB11), decltype(FB12), decltype(FB13), decltype(FB14), decltype(FB15), decltype(FB16), decltype(FB17), decltype(FB18), decltype(FB19), decltype(FB20), decltype(FB21), decltype(FB22), decltype(FB23), decltype(FB24), decltype(FB25), decltype(FB26), decltype(FB27), decltype(FB28), decltype(FB29), decltype(FB30), decltype(FB31)> F3R1; // Filter bank 3 register 1

    constexpr auto FB0 = BitField<can2_t, 0, 1>{}; // bit offset: 0, bit width: 1, Filter bits
    constexpr auto FB1 = BitField<can2_t, 1, 1>{}; // bit offset: 1, bit width: 1, Filter bits
    constexpr auto FB2 = BitField<can2_t, 2, 1>{}; // bit offset: 2, bit width: 1, Filter bits
    constexpr auto FB3 = BitField<can2_t, 3, 1>{}; // bit offset: 3, bit width: 1, Filter bits
    constexpr auto FB4 = BitField<can2_t, 4, 1>{}; // bit offset: 4, bit width: 1, Filter bits
    constexpr auto FB5 = BitField<can2_t, 5, 1>{}; // bit offset: 5, bit width: 1, Filter bits
    constexpr auto FB6 = BitField<can2_t, 6, 1>{}; // bit offset: 6, bit width: 1, Filter bits
    constexpr auto FB7 = BitField<can2_t, 7, 1>{}; // bit offset: 7, bit width: 1, Filter bits
    constexpr auto FB8 = BitField<can2_t, 8, 1>{}; // bit offset: 8, bit width: 1, Filter bits
    constexpr auto FB9 = BitField<can2_t, 9, 1>{}; // bit offset: 9, bit width: 1, Filter bits
    constexpr auto FB10 = BitField<can2_t, 10, 1>{}; // bit offset: 10, bit width: 1, Filter bits
    constexpr auto FB11 = BitField<can2_t, 11, 1>{}; // bit offset: 11, bit width: 1, Filter bits
    constexpr auto FB12 = BitField<can2_t, 12, 1>{}; // bit offset: 12, bit width: 1, Filter bits
    constexpr auto FB13 = BitField<can2_t, 13, 1>{}; // bit offset: 13, bit width: 1, Filter bits
    constexpr auto FB14 = BitField<can2_t, 14, 1>{}; // bit offset: 14, bit width: 1, Filter bits
    constexpr auto FB15 = BitField<can2_t, 15, 1>{}; // bit offset: 15, bit width: 1, Filter bits
    constexpr auto FB16 = BitField<can2_t, 16, 1>{}; // bit offset: 16, bit width: 1, Filter bits
    constexpr auto FB17 = BitField<can2_t, 17, 1>{}; // bit offset: 17, bit width: 1, Filter bits
    constexpr auto FB18 = BitField<can2_t, 18, 1>{}; // bit offset: 18, bit width: 1, Filter bits
    constexpr auto FB19 = BitField<can2_t, 19, 1>{}; // bit offset: 19, bit width: 1, Filter bits
    constexpr auto FB20 = BitField<can2_t, 20, 1>{}; // bit offset: 20, bit width: 1, Filter bits
    constexpr auto FB21 = BitField<can2_t, 21, 1>{}; // bit offset: 21, bit width: 1, Filter bits
    constexpr auto FB22 = BitField<can2_t, 22, 1>{}; // bit offset: 22, bit width: 1, Filter bits
    constexpr auto FB23 = BitField<can2_t, 23, 1>{}; // bit offset: 23, bit width: 1, Filter bits
    constexpr auto FB24 = BitField<can2_t, 24, 1>{}; // bit offset: 24, bit width: 1, Filter bits
    constexpr auto FB25 = BitField<can2_t, 25, 1>{}; // bit offset: 25, bit width: 1, Filter bits
    constexpr auto FB26 = BitField<can2_t, 26, 1>{}; // bit offset: 26, bit width: 1, Filter bits
    constexpr auto FB27 = BitField<can2_t, 27, 1>{}; // bit offset: 27, bit width: 1, Filter bits
    constexpr auto FB28 = BitField<can2_t, 28, 1>{}; // bit offset: 28, bit width: 1, Filter bits
    constexpr auto FB29 = BitField<can2_t, 29, 1>{}; // bit offset: 29, bit width: 1, Filter bits
    constexpr auto FB30 = BitField<can2_t, 30, 1>{}; // bit offset: 30, bit width: 1, Filter bits
    constexpr auto FB31 = BitField<can2_t, 31, 1>{}; // bit offset: 31, bit width: 1, Filter bits
    static Register<std::uint32_t, CAN2_BASE_ADDRESS + 0x0000025cu, 0, READWRITE, decltype(FB0), decltype(FB1), decltype(FB2), decltype(FB3), decltype(FB4), decltype(FB5), decltype(FB6), decltype(FB7), decltype(FB8), decltype(FB9), decltype(FB10), decltype(FB11), decltype(FB12), decltype(FB13), decltype(FB14), decltype(FB15), decltype(FB16), decltype(FB17), decltype(FB18), decltype(FB19), decltype(FB20), decltype(FB21), decltype(FB22), decltype(FB23), decltype(FB24), decltype(FB25), decltype(FB26), decltype(FB27), decltype(FB28), decltype(FB29), decltype(FB30), decltype(FB31)> F3R2; // Filter bank 3 register 2

    constexpr auto FB0 = BitField<can2_t, 0, 1>{}; // bit offset: 0, bit width: 1, Filter bits
    constexpr auto FB1 = BitField<can2_t, 1, 1>{}; // bit offset: 1, bit width: 1, Filter bits
    constexpr auto FB2 = BitField<can2_t, 2, 1>{}; // bit offset: 2, bit width: 1, Filter bits
    constexpr auto FB3 = BitField<can2_t, 3, 1>{}; // bit offset: 3, bit width: 1, Filter bits
    constexpr auto FB4 = BitField<can2_t, 4, 1>{}; // bit offset: 4, bit width: 1, Filter bits
    constexpr auto FB5 = BitField<can2_t, 5, 1>{}; // bit offset: 5, bit width: 1, Filter bits
    constexpr auto FB6 = BitField<can2_t, 6, 1>{}; // bit offset: 6, bit width: 1, Filter bits
    constexpr auto FB7 = BitField<can2_t, 7, 1>{}; // bit offset: 7, bit width: 1, Filter bits
    constexpr auto FB8 = BitField<can2_t, 8, 1>{}; // bit offset: 8, bit width: 1, Filter bits
    constexpr auto FB9 = BitField<can2_t, 9, 1>{}; // bit offset: 9, bit width: 1, Filter bits
    constexpr auto FB10 = BitField<can2_t, 10, 1>{}; // bit offset: 10, bit width: 1, Filter bits
    constexpr auto FB11 = BitField<can2_t, 11, 1>{}; // bit offset: 11, bit width: 1, Filter bits
    constexpr auto FB12 = BitField<can2_t, 12, 1>{}; // bit offset: 12, bit width: 1, Filter bits
    constexpr auto FB13 = BitField<can2_t, 13, 1>{}; // bit offset: 13, bit width: 1, Filter bits
    constexpr auto FB14 = BitField<can2_t, 14, 1>{}; // bit offset: 14, bit width: 1, Filter bits
    constexpr auto FB15 = BitField<can2_t, 15, 1>{}; // bit offset: 15, bit width: 1, Filter bits
    constexpr auto FB16 = BitField<can2_t, 16, 1>{}; // bit offset: 16, bit width: 1, Filter bits
    constexpr auto FB17 = BitField<can2_t, 17, 1>{}; // bit offset: 17, bit width: 1, Filter bits
    constexpr auto FB18 = BitField<can2_t, 18, 1>{}; // bit offset: 18, bit width: 1, Filter bits
    constexpr auto FB19 = BitField<can2_t, 19, 1>{}; // bit offset: 19, bit width: 1, Filter bits
    constexpr auto FB20 = BitField<can2_t, 20, 1>{}; // bit offset: 20, bit width: 1, Filter bits
    constexpr auto FB21 = BitField<can2_t, 21, 1>{}; // bit offset: 21, bit width: 1, Filter bits
    constexpr auto FB22 = BitField<can2_t, 22, 1>{}; // bit offset: 22, bit width: 1, Filter bits
    constexpr auto FB23 = BitField<can2_t, 23, 1>{}; // bit offset: 23, bit width: 1, Filter bits
    constexpr auto FB24 = BitField<can2_t, 24, 1>{}; // bit offset: 24, bit width: 1, Filter bits
    constexpr auto FB25 = BitField<can2_t, 25, 1>{}; // bit offset: 25, bit width: 1, Filter bits
    constexpr auto FB26 = BitField<can2_t, 26, 1>{}; // bit offset: 26, bit width: 1, Filter bits
    constexpr auto FB27 = BitField<can2_t, 27, 1>{}; // bit offset: 27, bit width: 1, Filter bits
    constexpr auto FB28 = BitField<can2_t, 28, 1>{}; // bit offset: 28, bit width: 1, Filter bits
    constexpr auto FB29 = BitField<can2_t, 29, 1>{}; // bit offset: 29, bit width: 1, Filter bits
    constexpr auto FB30 = BitField<can2_t, 30, 1>{}; // bit offset: 30, bit width: 1, Filter bits
    constexpr auto FB31 = BitField<can2_t, 31, 1>{}; // bit offset: 31, bit width: 1, Filter bits
    static Register<std::uint32_t, CAN2_BASE_ADDRESS + 0x00000260u, 0, READWRITE, decltype(FB0), decltype(FB1), decltype(FB2), decltype(FB3), decltype(FB4), decltype(FB5), decltype(FB6), decltype(FB7), decltype(FB8), decltype(FB9), decltype(FB10), decltype(FB11), decltype(FB12), decltype(FB13), decltype(FB14), decltype(FB15), decltype(FB16), decltype(FB17), decltype(FB18), decltype(FB19), decltype(FB20), decltype(FB21), decltype(FB22), decltype(FB23), decltype(FB24), decltype(FB25), decltype(FB26), decltype(FB27), decltype(FB28), decltype(FB29), decltype(FB30), decltype(FB31)> F4R1; // Filter bank 4 register 1

    constexpr auto FB0 = BitField<can2_t, 0, 1>{}; // bit offset: 0, bit width: 1, Filter bits
    constexpr auto FB1 = BitField<can2_t, 1, 1>{}; // bit offset: 1, bit width: 1, Filter bits
    constexpr auto FB2 = BitField<can2_t, 2, 1>{}; // bit offset: 2, bit width: 1, Filter bits
    constexpr auto FB3 = BitField<can2_t, 3, 1>{}; // bit offset: 3, bit width: 1, Filter bits
    constexpr auto FB4 = BitField<can2_t, 4, 1>{}; // bit offset: 4, bit width: 1, Filter bits
    constexpr auto FB5 = BitField<can2_t, 5, 1>{}; // bit offset: 5, bit width: 1, Filter bits
    constexpr auto FB6 = BitField<can2_t, 6, 1>{}; // bit offset: 6, bit width: 1, Filter bits
    constexpr auto FB7 = BitField<can2_t, 7, 1>{}; // bit offset: 7, bit width: 1, Filter bits
    constexpr auto FB8 = BitField<can2_t, 8, 1>{}; // bit offset: 8, bit width: 1, Filter bits
    constexpr auto FB9 = BitField<can2_t, 9, 1>{}; // bit offset: 9, bit width: 1, Filter bits
    constexpr auto FB10 = BitField<can2_t, 10, 1>{}; // bit offset: 10, bit width: 1, Filter bits
    constexpr auto FB11 = BitField<can2_t, 11, 1>{}; // bit offset: 11, bit width: 1, Filter bits
    constexpr auto FB12 = BitField<can2_t, 12, 1>{}; // bit offset: 12, bit width: 1, Filter bits
    constexpr auto FB13 = BitField<can2_t, 13, 1>{}; // bit offset: 13, bit width: 1, Filter bits
    constexpr auto FB14 = BitField<can2_t, 14, 1>{}; // bit offset: 14, bit width: 1, Filter bits
    constexpr auto FB15 = BitField<can2_t, 15, 1>{}; // bit offset: 15, bit width: 1, Filter bits
    constexpr auto FB16 = BitField<can2_t, 16, 1>{}; // bit offset: 16, bit width: 1, Filter bits
    constexpr auto FB17 = BitField<can2_t, 17, 1>{}; // bit offset: 17, bit width: 1, Filter bits
    constexpr auto FB18 = BitField<can2_t, 18, 1>{}; // bit offset: 18, bit width: 1, Filter bits
    constexpr auto FB19 = BitField<can2_t, 19, 1>{}; // bit offset: 19, bit width: 1, Filter bits
    constexpr auto FB20 = BitField<can2_t, 20, 1>{}; // bit offset: 20, bit width: 1, Filter bits
    constexpr auto FB21 = BitField<can2_t, 21, 1>{}; // bit offset: 21, bit width: 1, Filter bits
    constexpr auto FB22 = BitField<can2_t, 22, 1>{}; // bit offset: 22, bit width: 1, Filter bits
    constexpr auto FB23 = BitField<can2_t, 23, 1>{}; // bit offset: 23, bit width: 1, Filter bits
    constexpr auto FB24 = BitField<can2_t, 24, 1>{}; // bit offset: 24, bit width: 1, Filter bits
    constexpr auto FB25 = BitField<can2_t, 25, 1>{}; // bit offset: 25, bit width: 1, Filter bits
    constexpr auto FB26 = BitField<can2_t, 26, 1>{}; // bit offset: 26, bit width: 1, Filter bits
    constexpr auto FB27 = BitField<can2_t, 27, 1>{}; // bit offset: 27, bit width: 1, Filter bits
    constexpr auto FB28 = BitField<can2_t, 28, 1>{}; // bit offset: 28, bit width: 1, Filter bits
    constexpr auto FB29 = BitField<can2_t, 29, 1>{}; // bit offset: 29, bit width: 1, Filter bits
    constexpr auto FB30 = BitField<can2_t, 30, 1>{}; // bit offset: 30, bit width: 1, Filter bits
    constexpr auto FB31 = BitField<can2_t, 31, 1>{}; // bit offset: 31, bit width: 1, Filter bits
    static Register<std::uint32_t, CAN2_BASE_ADDRESS + 0x00000264u, 0, READWRITE, decltype(FB0), decltype(FB1), decltype(FB2), decltype(FB3), decltype(FB4), decltype(FB5), decltype(FB6), decltype(FB7), decltype(FB8), decltype(FB9), decltype(FB10), decltype(FB11), decltype(FB12), decltype(FB13), decltype(FB14), decltype(FB15), decltype(FB16), decltype(FB17), decltype(FB18), decltype(FB19), decltype(FB20), decltype(FB21), decltype(FB22), decltype(FB23), decltype(FB24), decltype(FB25), decltype(FB26), decltype(FB27), decltype(FB28), decltype(FB29), decltype(FB30), decltype(FB31)> F4R2; // Filter bank 4 register 2

    constexpr auto FB0 = BitField<can2_t, 0, 1>{}; // bit offset: 0, bit width: 1, Filter bits
    constexpr auto FB1 = BitField<can2_t, 1, 1>{}; // bit offset: 1, bit width: 1, Filter bits
    constexpr auto FB2 = BitField<can2_t, 2, 1>{}; // bit offset: 2, bit width: 1, Filter bits
    constexpr auto FB3 = BitField<can2_t, 3, 1>{}; // bit offset: 3, bit width: 1, Filter bits
    constexpr auto FB4 = BitField<can2_t, 4, 1>{}; // bit offset: 4, bit width: 1, Filter bits
    constexpr auto FB5 = BitField<can2_t, 5, 1>{}; // bit offset: 5, bit width: 1, Filter bits
    constexpr auto FB6 = BitField<can2_t, 6, 1>{}; // bit offset: 6, bit width: 1, Filter bits
    constexpr auto FB7 = BitField<can2_t, 7, 1>{}; // bit offset: 7, bit width: 1, Filter bits
    constexpr auto FB8 = BitField<can2_t, 8, 1>{}; // bit offset: 8, bit width: 1, Filter bits
    constexpr auto FB9 = BitField<can2_t, 9, 1>{}; // bit offset: 9, bit width: 1, Filter bits
    constexpr auto FB10 = BitField<can2_t, 10, 1>{}; // bit offset: 10, bit width: 1, Filter bits
    constexpr auto FB11 = BitField<can2_t, 11, 1>{}; // bit offset: 11, bit width: 1, Filter bits
    constexpr auto FB12 = BitField<can2_t, 12, 1>{}; // bit offset: 12, bit width: 1, Filter bits
    constexpr auto FB13 = BitField<can2_t, 13, 1>{}; // bit offset: 13, bit width: 1, Filter bits
    constexpr auto FB14 = BitField<can2_t, 14, 1>{}; // bit offset: 14, bit width: 1, Filter bits
    constexpr auto FB15 = BitField<can2_t, 15, 1>{}; // bit offset: 15, bit width: 1, Filter bits
    constexpr auto FB16 = BitField<can2_t, 16, 1>{}; // bit offset: 16, bit width: 1, Filter bits
    constexpr auto FB17 = BitField<can2_t, 17, 1>{}; // bit offset: 17, bit width: 1, Filter bits
    constexpr auto FB18 = BitField<can2_t, 18, 1>{}; // bit offset: 18, bit width: 1, Filter bits
    constexpr auto FB19 = BitField<can2_t, 19, 1>{}; // bit offset: 19, bit width: 1, Filter bits
    constexpr auto FB20 = BitField<can2_t, 20, 1>{}; // bit offset: 20, bit width: 1, Filter bits
    constexpr auto FB21 = BitField<can2_t, 21, 1>{}; // bit offset: 21, bit width: 1, Filter bits
    constexpr auto FB22 = BitField<can2_t, 22, 1>{}; // bit offset: 22, bit width: 1, Filter bits
    constexpr auto FB23 = BitField<can2_t, 23, 1>{}; // bit offset: 23, bit width: 1, Filter bits
    constexpr auto FB24 = BitField<can2_t, 24, 1>{}; // bit offset: 24, bit width: 1, Filter bits
    constexpr auto FB25 = BitField<can2_t, 25, 1>{}; // bit offset: 25, bit width: 1, Filter bits
    constexpr auto FB26 = BitField<can2_t, 26, 1>{}; // bit offset: 26, bit width: 1, Filter bits
    constexpr auto FB27 = BitField<can2_t, 27, 1>{}; // bit offset: 27, bit width: 1, Filter bits
    constexpr auto FB28 = BitField<can2_t, 28, 1>{}; // bit offset: 28, bit width: 1, Filter bits
    constexpr auto FB29 = BitField<can2_t, 29, 1>{}; // bit offset: 29, bit width: 1, Filter bits
    constexpr auto FB30 = BitField<can2_t, 30, 1>{}; // bit offset: 30, bit width: 1, Filter bits
    constexpr auto FB31 = BitField<can2_t, 31, 1>{}; // bit offset: 31, bit width: 1, Filter bits
    static Register<std::uint32_t, CAN2_BASE_ADDRESS + 0x00000268u, 0, READWRITE, decltype(FB0), decltype(FB1), decltype(FB2), decltype(FB3), decltype(FB4), decltype(FB5), decltype(FB6), decltype(FB7), decltype(FB8), decltype(FB9), decltype(FB10), decltype(FB11), decltype(FB12), decltype(FB13), decltype(FB14), decltype(FB15), decltype(FB16), decltype(FB17), decltype(FB18), decltype(FB19), decltype(FB20), decltype(FB21), decltype(FB22), decltype(FB23), decltype(FB24), decltype(FB25), decltype(FB26), decltype(FB27), decltype(FB28), decltype(FB29), decltype(FB30), decltype(FB31)> F5R1; // Filter bank 5 register 1

    constexpr auto FB0 = BitField<can2_t, 0, 1>{}; // bit offset: 0, bit width: 1, Filter bits
    constexpr auto FB1 = BitField<can2_t, 1, 1>{}; // bit offset: 1, bit width: 1, Filter bits
    constexpr auto FB2 = BitField<can2_t, 2, 1>{}; // bit offset: 2, bit width: 1, Filter bits
    constexpr auto FB3 = BitField<can2_t, 3, 1>{}; // bit offset: 3, bit width: 1, Filter bits
    constexpr auto FB4 = BitField<can2_t, 4, 1>{}; // bit offset: 4, bit width: 1, Filter bits
    constexpr auto FB5 = BitField<can2_t, 5, 1>{}; // bit offset: 5, bit width: 1, Filter bits
    constexpr auto FB6 = BitField<can2_t, 6, 1>{}; // bit offset: 6, bit width: 1, Filter bits
    constexpr auto FB7 = BitField<can2_t, 7, 1>{}; // bit offset: 7, bit width: 1, Filter bits
    constexpr auto FB8 = BitField<can2_t, 8, 1>{}; // bit offset: 8, bit width: 1, Filter bits
    constexpr auto FB9 = BitField<can2_t, 9, 1>{}; // bit offset: 9, bit width: 1, Filter bits
    constexpr auto FB10 = BitField<can2_t, 10, 1>{}; // bit offset: 10, bit width: 1, Filter bits
    constexpr auto FB11 = BitField<can2_t, 11, 1>{}; // bit offset: 11, bit width: 1, Filter bits
    constexpr auto FB12 = BitField<can2_t, 12, 1>{}; // bit offset: 12, bit width: 1, Filter bits
    constexpr auto FB13 = BitField<can2_t, 13, 1>{}; // bit offset: 13, bit width: 1, Filter bits
    constexpr auto FB14 = BitField<can2_t, 14, 1>{}; // bit offset: 14, bit width: 1, Filter bits
    constexpr auto FB15 = BitField<can2_t, 15, 1>{}; // bit offset: 15, bit width: 1, Filter bits
    constexpr auto FB16 = BitField<can2_t, 16, 1>{}; // bit offset: 16, bit width: 1, Filter bits
    constexpr auto FB17 = BitField<can2_t, 17, 1>{}; // bit offset: 17, bit width: 1, Filter bits
    constexpr auto FB18 = BitField<can2_t, 18, 1>{}; // bit offset: 18, bit width: 1, Filter bits
    constexpr auto FB19 = BitField<can2_t, 19, 1>{}; // bit offset: 19, bit width: 1, Filter bits
    constexpr auto FB20 = BitField<can2_t, 20, 1>{}; // bit offset: 20, bit width: 1, Filter bits
    constexpr auto FB21 = BitField<can2_t, 21, 1>{}; // bit offset: 21, bit width: 1, Filter bits
    constexpr auto FB22 = BitField<can2_t, 22, 1>{}; // bit offset: 22, bit width: 1, Filter bits
    constexpr auto FB23 = BitField<can2_t, 23, 1>{}; // bit offset: 23, bit width: 1, Filter bits
    constexpr auto FB24 = BitField<can2_t, 24, 1>{}; // bit offset: 24, bit width: 1, Filter bits
    constexpr auto FB25 = BitField<can2_t, 25, 1>{}; // bit offset: 25, bit width: 1, Filter bits
    constexpr auto FB26 = BitField<can2_t, 26, 1>{}; // bit offset: 26, bit width: 1, Filter bits
    constexpr auto FB27 = BitField<can2_t, 27, 1>{}; // bit offset: 27, bit width: 1, Filter bits
    constexpr auto FB28 = BitField<can2_t, 28, 1>{}; // bit offset: 28, bit width: 1, Filter bits
    constexpr auto FB29 = BitField<can2_t, 29, 1>{}; // bit offset: 29, bit width: 1, Filter bits
    constexpr auto FB30 = BitField<can2_t, 30, 1>{}; // bit offset: 30, bit width: 1, Filter bits
    constexpr auto FB31 = BitField<can2_t, 31, 1>{}; // bit offset: 31, bit width: 1, Filter bits
    static Register<std::uint32_t, CAN2_BASE_ADDRESS + 0x0000026cu, 0, READWRITE, decltype(FB0), decltype(FB1), decltype(FB2), decltype(FB3), decltype(FB4), decltype(FB5), decltype(FB6), decltype(FB7), decltype(FB8), decltype(FB9), decltype(FB10), decltype(FB11), decltype(FB12), decltype(FB13), decltype(FB14), decltype(FB15), decltype(FB16), decltype(FB17), decltype(FB18), decltype(FB19), decltype(FB20), decltype(FB21), decltype(FB22), decltype(FB23), decltype(FB24), decltype(FB25), decltype(FB26), decltype(FB27), decltype(FB28), decltype(FB29), decltype(FB30), decltype(FB31)> F5R2; // Filter bank 5 register 2

    constexpr auto FB0 = BitField<can2_t, 0, 1>{}; // bit offset: 0, bit width: 1, Filter bits
    constexpr auto FB1 = BitField<can2_t, 1, 1>{}; // bit offset: 1, bit width: 1, Filter bits
    constexpr auto FB2 = BitField<can2_t, 2, 1>{}; // bit offset: 2, bit width: 1, Filter bits
    constexpr auto FB3 = BitField<can2_t, 3, 1>{}; // bit offset: 3, bit width: 1, Filter bits
    constexpr auto FB4 = BitField<can2_t, 4, 1>{}; // bit offset: 4, bit width: 1, Filter bits
    constexpr auto FB5 = BitField<can2_t, 5, 1>{}; // bit offset: 5, bit width: 1, Filter bits
    constexpr auto FB6 = BitField<can2_t, 6, 1>{}; // bit offset: 6, bit width: 1, Filter bits
    constexpr auto FB7 = BitField<can2_t, 7, 1>{}; // bit offset: 7, bit width: 1, Filter bits
    constexpr auto FB8 = BitField<can2_t, 8, 1>{}; // bit offset: 8, bit width: 1, Filter bits
    constexpr auto FB9 = BitField<can2_t, 9, 1>{}; // bit offset: 9, bit width: 1, Filter bits
    constexpr auto FB10 = BitField<can2_t, 10, 1>{}; // bit offset: 10, bit width: 1, Filter bits
    constexpr auto FB11 = BitField<can2_t, 11, 1>{}; // bit offset: 11, bit width: 1, Filter bits
    constexpr auto FB12 = BitField<can2_t, 12, 1>{}; // bit offset: 12, bit width: 1, Filter bits
    constexpr auto FB13 = BitField<can2_t, 13, 1>{}; // bit offset: 13, bit width: 1, Filter bits
    constexpr auto FB14 = BitField<can2_t, 14, 1>{}; // bit offset: 14, bit width: 1, Filter bits
    constexpr auto FB15 = BitField<can2_t, 15, 1>{}; // bit offset: 15, bit width: 1, Filter bits
    constexpr auto FB16 = BitField<can2_t, 16, 1>{}; // bit offset: 16, bit width: 1, Filter bits
    constexpr auto FB17 = BitField<can2_t, 17, 1>{}; // bit offset: 17, bit width: 1, Filter bits
    constexpr auto FB18 = BitField<can2_t, 18, 1>{}; // bit offset: 18, bit width: 1, Filter bits
    constexpr auto FB19 = BitField<can2_t, 19, 1>{}; // bit offset: 19, bit width: 1, Filter bits
    constexpr auto FB20 = BitField<can2_t, 20, 1>{}; // bit offset: 20, bit width: 1, Filter bits
    constexpr auto FB21 = BitField<can2_t, 21, 1>{}; // bit offset: 21, bit width: 1, Filter bits
    constexpr auto FB22 = BitField<can2_t, 22, 1>{}; // bit offset: 22, bit width: 1, Filter bits
    constexpr auto FB23 = BitField<can2_t, 23, 1>{}; // bit offset: 23, bit width: 1, Filter bits
    constexpr auto FB24 = BitField<can2_t, 24, 1>{}; // bit offset: 24, bit width: 1, Filter bits
    constexpr auto FB25 = BitField<can2_t, 25, 1>{}; // bit offset: 25, bit width: 1, Filter bits
    constexpr auto FB26 = BitField<can2_t, 26, 1>{}; // bit offset: 26, bit width: 1, Filter bits
    constexpr auto FB27 = BitField<can2_t, 27, 1>{}; // bit offset: 27, bit width: 1, Filter bits
    constexpr auto FB28 = BitField<can2_t, 28, 1>{}; // bit offset: 28, bit width: 1, Filter bits
    constexpr auto FB29 = BitField<can2_t, 29, 1>{}; // bit offset: 29, bit width: 1, Filter bits
    constexpr auto FB30 = BitField<can2_t, 30, 1>{}; // bit offset: 30, bit width: 1, Filter bits
    constexpr auto FB31 = BitField<can2_t, 31, 1>{}; // bit offset: 31, bit width: 1, Filter bits
    static Register<std::uint32_t, CAN2_BASE_ADDRESS + 0x00000270u, 0, READWRITE, decltype(FB0), decltype(FB1), decltype(FB2), decltype(FB3), decltype(FB4), decltype(FB5), decltype(FB6), decltype(FB7), decltype(FB8), decltype(FB9), decltype(FB10), decltype(FB11), decltype(FB12), decltype(FB13), decltype(FB14), decltype(FB15), decltype(FB16), decltype(FB17), decltype(FB18), decltype(FB19), decltype(FB20), decltype(FB21), decltype(FB22), decltype(FB23), decltype(FB24), decltype(FB25), decltype(FB26), decltype(FB27), decltype(FB28), decltype(FB29), decltype(FB30), decltype(FB31)> F6R1; // Filter bank 6 register 1

    constexpr auto FB0 = BitField<can2_t, 0, 1>{}; // bit offset: 0, bit width: 1, Filter bits
    constexpr auto FB1 = BitField<can2_t, 1, 1>{}; // bit offset: 1, bit width: 1, Filter bits
    constexpr auto FB2 = BitField<can2_t, 2, 1>{}; // bit offset: 2, bit width: 1, Filter bits
    constexpr auto FB3 = BitField<can2_t, 3, 1>{}; // bit offset: 3, bit width: 1, Filter bits
    constexpr auto FB4 = BitField<can2_t, 4, 1>{}; // bit offset: 4, bit width: 1, Filter bits
    constexpr auto FB5 = BitField<can2_t, 5, 1>{}; // bit offset: 5, bit width: 1, Filter bits
    constexpr auto FB6 = BitField<can2_t, 6, 1>{}; // bit offset: 6, bit width: 1, Filter bits
    constexpr auto FB7 = BitField<can2_t, 7, 1>{}; // bit offset: 7, bit width: 1, Filter bits
    constexpr auto FB8 = BitField<can2_t, 8, 1>{}; // bit offset: 8, bit width: 1, Filter bits
    constexpr auto FB9 = BitField<can2_t, 9, 1>{}; // bit offset: 9, bit width: 1, Filter bits
    constexpr auto FB10 = BitField<can2_t, 10, 1>{}; // bit offset: 10, bit width: 1, Filter bits
    constexpr auto FB11 = BitField<can2_t, 11, 1>{}; // bit offset: 11, bit width: 1, Filter bits
    constexpr auto FB12 = BitField<can2_t, 12, 1>{}; // bit offset: 12, bit width: 1, Filter bits
    constexpr auto FB13 = BitField<can2_t, 13, 1>{}; // bit offset: 13, bit width: 1, Filter bits
    constexpr auto FB14 = BitField<can2_t, 14, 1>{}; // bit offset: 14, bit width: 1, Filter bits
    constexpr auto FB15 = BitField<can2_t, 15, 1>{}; // bit offset: 15, bit width: 1, Filter bits
    constexpr auto FB16 = BitField<can2_t, 16, 1>{}; // bit offset: 16, bit width: 1, Filter bits
    constexpr auto FB17 = BitField<can2_t, 17, 1>{}; // bit offset: 17, bit width: 1, Filter bits
    constexpr auto FB18 = BitField<can2_t, 18, 1>{}; // bit offset: 18, bit width: 1, Filter bits
    constexpr auto FB19 = BitField<can2_t, 19, 1>{}; // bit offset: 19, bit width: 1, Filter bits
    constexpr auto FB20 = BitField<can2_t, 20, 1>{}; // bit offset: 20, bit width: 1, Filter bits
    constexpr auto FB21 = BitField<can2_t, 21, 1>{}; // bit offset: 21, bit width: 1, Filter bits
    constexpr auto FB22 = BitField<can2_t, 22, 1>{}; // bit offset: 22, bit width: 1, Filter bits
    constexpr auto FB23 = BitField<can2_t, 23, 1>{}; // bit offset: 23, bit width: 1, Filter bits
    constexpr auto FB24 = BitField<can2_t, 24, 1>{}; // bit offset: 24, bit width: 1, Filter bits
    constexpr auto FB25 = BitField<can2_t, 25, 1>{}; // bit offset: 25, bit width: 1, Filter bits
    constexpr auto FB26 = BitField<can2_t, 26, 1>{}; // bit offset: 26, bit width: 1, Filter bits
    constexpr auto FB27 = BitField<can2_t, 27, 1>{}; // bit offset: 27, bit width: 1, Filter bits
    constexpr auto FB28 = BitField<can2_t, 28, 1>{}; // bit offset: 28, bit width: 1, Filter bits
    constexpr auto FB29 = BitField<can2_t, 29, 1>{}; // bit offset: 29, bit width: 1, Filter bits
    constexpr auto FB30 = BitField<can2_t, 30, 1>{}; // bit offset: 30, bit width: 1, Filter bits
    constexpr auto FB31 = BitField<can2_t, 31, 1>{}; // bit offset: 31, bit width: 1, Filter bits
    static Register<std::uint32_t, CAN2_BASE_ADDRESS + 0x00000274u, 0, READWRITE, decltype(FB0), decltype(FB1), decltype(FB2), decltype(FB3), decltype(FB4), decltype(FB5), decltype(FB6), decltype(FB7), decltype(FB8), decltype(FB9), decltype(FB10), decltype(FB11), decltype(FB12), decltype(FB13), decltype(FB14), decltype(FB15), decltype(FB16), decltype(FB17), decltype(FB18), decltype(FB19), decltype(FB20), decltype(FB21), decltype(FB22), decltype(FB23), decltype(FB24), decltype(FB25), decltype(FB26), decltype(FB27), decltype(FB28), decltype(FB29), decltype(FB30), decltype(FB31)> F6R2; // Filter bank 6 register 2

    constexpr auto FB0 = BitField<can2_t, 0, 1>{}; // bit offset: 0, bit width: 1, Filter bits
    constexpr auto FB1 = BitField<can2_t, 1, 1>{}; // bit offset: 1, bit width: 1, Filter bits
    constexpr auto FB2 = BitField<can2_t, 2, 1>{}; // bit offset: 2, bit width: 1, Filter bits
    constexpr auto FB3 = BitField<can2_t, 3, 1>{}; // bit offset: 3, bit width: 1, Filter bits
    constexpr auto FB4 = BitField<can2_t, 4, 1>{}; // bit offset: 4, bit width: 1, Filter bits
    constexpr auto FB5 = BitField<can2_t, 5, 1>{}; // bit offset: 5, bit width: 1, Filter bits
    constexpr auto FB6 = BitField<can2_t, 6, 1>{}; // bit offset: 6, bit width: 1, Filter bits
    constexpr auto FB7 = BitField<can2_t, 7, 1>{}; // bit offset: 7, bit width: 1, Filter bits
    constexpr auto FB8 = BitField<can2_t, 8, 1>{}; // bit offset: 8, bit width: 1, Filter bits
    constexpr auto FB9 = BitField<can2_t, 9, 1>{}; // bit offset: 9, bit width: 1, Filter bits
    constexpr auto FB10 = BitField<can2_t, 10, 1>{}; // bit offset: 10, bit width: 1, Filter bits
    constexpr auto FB11 = BitField<can2_t, 11, 1>{}; // bit offset: 11, bit width: 1, Filter bits
    constexpr auto FB12 = BitField<can2_t, 12, 1>{}; // bit offset: 12, bit width: 1, Filter bits
    constexpr auto FB13 = BitField<can2_t, 13, 1>{}; // bit offset: 13, bit width: 1, Filter bits
    constexpr auto FB14 = BitField<can2_t, 14, 1>{}; // bit offset: 14, bit width: 1, Filter bits
    constexpr auto FB15 = BitField<can2_t, 15, 1>{}; // bit offset: 15, bit width: 1, Filter bits
    constexpr auto FB16 = BitField<can2_t, 16, 1>{}; // bit offset: 16, bit width: 1, Filter bits
    constexpr auto FB17 = BitField<can2_t, 17, 1>{}; // bit offset: 17, bit width: 1, Filter bits
    constexpr auto FB18 = BitField<can2_t, 18, 1>{}; // bit offset: 18, bit width: 1, Filter bits
    constexpr auto FB19 = BitField<can2_t, 19, 1>{}; // bit offset: 19, bit width: 1, Filter bits
    constexpr auto FB20 = BitField<can2_t, 20, 1>{}; // bit offset: 20, bit width: 1, Filter bits
    constexpr auto FB21 = BitField<can2_t, 21, 1>{}; // bit offset: 21, bit width: 1, Filter bits
    constexpr auto FB22 = BitField<can2_t, 22, 1>{}; // bit offset: 22, bit width: 1, Filter bits
    constexpr auto FB23 = BitField<can2_t, 23, 1>{}; // bit offset: 23, bit width: 1, Filter bits
    constexpr auto FB24 = BitField<can2_t, 24, 1>{}; // bit offset: 24, bit width: 1, Filter bits
    constexpr auto FB25 = BitField<can2_t, 25, 1>{}; // bit offset: 25, bit width: 1, Filter bits
    constexpr auto FB26 = BitField<can2_t, 26, 1>{}; // bit offset: 26, bit width: 1, Filter bits
    constexpr auto FB27 = BitField<can2_t, 27, 1>{}; // bit offset: 27, bit width: 1, Filter bits
    constexpr auto FB28 = BitField<can2_t, 28, 1>{}; // bit offset: 28, bit width: 1, Filter bits
    constexpr auto FB29 = BitField<can2_t, 29, 1>{}; // bit offset: 29, bit width: 1, Filter bits
    constexpr auto FB30 = BitField<can2_t, 30, 1>{}; // bit offset: 30, bit width: 1, Filter bits
    constexpr auto FB31 = BitField<can2_t, 31, 1>{}; // bit offset: 31, bit width: 1, Filter bits
    static Register<std::uint32_t, CAN2_BASE_ADDRESS + 0x00000278u, 0, READWRITE, decltype(FB0), decltype(FB1), decltype(FB2), decltype(FB3), decltype(FB4), decltype(FB5), decltype(FB6), decltype(FB7), decltype(FB8), decltype(FB9), decltype(FB10), decltype(FB11), decltype(FB12), decltype(FB13), decltype(FB14), decltype(FB15), decltype(FB16), decltype(FB17), decltype(FB18), decltype(FB19), decltype(FB20), decltype(FB21), decltype(FB22), decltype(FB23), decltype(FB24), decltype(FB25), decltype(FB26), decltype(FB27), decltype(FB28), decltype(FB29), decltype(FB30), decltype(FB31)> F7R1; // Filter bank 7 register 1

    constexpr auto FB0 = BitField<can2_t, 0, 1>{}; // bit offset: 0, bit width: 1, Filter bits
    constexpr auto FB1 = BitField<can2_t, 1, 1>{}; // bit offset: 1, bit width: 1, Filter bits
    constexpr auto FB2 = BitField<can2_t, 2, 1>{}; // bit offset: 2, bit width: 1, Filter bits
    constexpr auto FB3 = BitField<can2_t, 3, 1>{}; // bit offset: 3, bit width: 1, Filter bits
    constexpr auto FB4 = BitField<can2_t, 4, 1>{}; // bit offset: 4, bit width: 1, Filter bits
    constexpr auto FB5 = BitField<can2_t, 5, 1>{}; // bit offset: 5, bit width: 1, Filter bits
    constexpr auto FB6 = BitField<can2_t, 6, 1>{}; // bit offset: 6, bit width: 1, Filter bits
    constexpr auto FB7 = BitField<can2_t, 7, 1>{}; // bit offset: 7, bit width: 1, Filter bits
    constexpr auto FB8 = BitField<can2_t, 8, 1>{}; // bit offset: 8, bit width: 1, Filter bits
    constexpr auto FB9 = BitField<can2_t, 9, 1>{}; // bit offset: 9, bit width: 1, Filter bits
    constexpr auto FB10 = BitField<can2_t, 10, 1>{}; // bit offset: 10, bit width: 1, Filter bits
    constexpr auto FB11 = BitField<can2_t, 11, 1>{}; // bit offset: 11, bit width: 1, Filter bits
    constexpr auto FB12 = BitField<can2_t, 12, 1>{}; // bit offset: 12, bit width: 1, Filter bits
    constexpr auto FB13 = BitField<can2_t, 13, 1>{}; // bit offset: 13, bit width: 1, Filter bits
    constexpr auto FB14 = BitField<can2_t, 14, 1>{}; // bit offset: 14, bit width: 1, Filter bits
    constexpr auto FB15 = BitField<can2_t, 15, 1>{}; // bit offset: 15, bit width: 1, Filter bits
    constexpr auto FB16 = BitField<can2_t, 16, 1>{}; // bit offset: 16, bit width: 1, Filter bits
    constexpr auto FB17 = BitField<can2_t, 17, 1>{}; // bit offset: 17, bit width: 1, Filter bits
    constexpr auto FB18 = BitField<can2_t, 18, 1>{}; // bit offset: 18, bit width: 1, Filter bits
    constexpr auto FB19 = BitField<can2_t, 19, 1>{}; // bit offset: 19, bit width: 1, Filter bits
    constexpr auto FB20 = BitField<can2_t, 20, 1>{}; // bit offset: 20, bit width: 1, Filter bits
    constexpr auto FB21 = BitField<can2_t, 21, 1>{}; // bit offset: 21, bit width: 1, Filter bits
    constexpr auto FB22 = BitField<can2_t, 22, 1>{}; // bit offset: 22, bit width: 1, Filter bits
    constexpr auto FB23 = BitField<can2_t, 23, 1>{}; // bit offset: 23, bit width: 1, Filter bits
    constexpr auto FB24 = BitField<can2_t, 24, 1>{}; // bit offset: 24, bit width: 1, Filter bits
    constexpr auto FB25 = BitField<can2_t, 25, 1>{}; // bit offset: 25, bit width: 1, Filter bits
    constexpr auto FB26 = BitField<can2_t, 26, 1>{}; // bit offset: 26, bit width: 1, Filter bits
    constexpr auto FB27 = BitField<can2_t, 27, 1>{}; // bit offset: 27, bit width: 1, Filter bits
    constexpr auto FB28 = BitField<can2_t, 28, 1>{}; // bit offset: 28, bit width: 1, Filter bits
    constexpr auto FB29 = BitField<can2_t, 29, 1>{}; // bit offset: 29, bit width: 1, Filter bits
    constexpr auto FB30 = BitField<can2_t, 30, 1>{}; // bit offset: 30, bit width: 1, Filter bits
    constexpr auto FB31 = BitField<can2_t, 31, 1>{}; // bit offset: 31, bit width: 1, Filter bits
    static Register<std::uint32_t, CAN2_BASE_ADDRESS + 0x0000027cu, 0, READWRITE, decltype(FB0), decltype(FB1), decltype(FB2), decltype(FB3), decltype(FB4), decltype(FB5), decltype(FB6), decltype(FB7), decltype(FB8), decltype(FB9), decltype(FB10), decltype(FB11), decltype(FB12), decltype(FB13), decltype(FB14), decltype(FB15), decltype(FB16), decltype(FB17), decltype(FB18), decltype(FB19), decltype(FB20), decltype(FB21), decltype(FB22), decltype(FB23), decltype(FB24), decltype(FB25), decltype(FB26), decltype(FB27), decltype(FB28), decltype(FB29), decltype(FB30), decltype(FB31)> F7R2; // Filter bank 7 register 2

    constexpr auto FB0 = BitField<can2_t, 0, 1>{}; // bit offset: 0, bit width: 1, Filter bits
    constexpr auto FB1 = BitField<can2_t, 1, 1>{}; // bit offset: 1, bit width: 1, Filter bits
    constexpr auto FB2 = BitField<can2_t, 2, 1>{}; // bit offset: 2, bit width: 1, Filter bits
    constexpr auto FB3 = BitField<can2_t, 3, 1>{}; // bit offset: 3, bit width: 1, Filter bits
    constexpr auto FB4 = BitField<can2_t, 4, 1>{}; // bit offset: 4, bit width: 1, Filter bits
    constexpr auto FB5 = BitField<can2_t, 5, 1>{}; // bit offset: 5, bit width: 1, Filter bits
    constexpr auto FB6 = BitField<can2_t, 6, 1>{}; // bit offset: 6, bit width: 1, Filter bits
    constexpr auto FB7 = BitField<can2_t, 7, 1>{}; // bit offset: 7, bit width: 1, Filter bits
    constexpr auto FB8 = BitField<can2_t, 8, 1>{}; // bit offset: 8, bit width: 1, Filter bits
    constexpr auto FB9 = BitField<can2_t, 9, 1>{}; // bit offset: 9, bit width: 1, Filter bits
    constexpr auto FB10 = BitField<can2_t, 10, 1>{}; // bit offset: 10, bit width: 1, Filter bits
    constexpr auto FB11 = BitField<can2_t, 11, 1>{}; // bit offset: 11, bit width: 1, Filter bits
    constexpr auto FB12 = BitField<can2_t, 12, 1>{}; // bit offset: 12, bit width: 1, Filter bits
    constexpr auto FB13 = BitField<can2_t, 13, 1>{}; // bit offset: 13, bit width: 1, Filter bits
    constexpr auto FB14 = BitField<can2_t, 14, 1>{}; // bit offset: 14, bit width: 1, Filter bits
    constexpr auto FB15 = BitField<can2_t, 15, 1>{}; // bit offset: 15, bit width: 1, Filter bits
    constexpr auto FB16 = BitField<can2_t, 16, 1>{}; // bit offset: 16, bit width: 1, Filter bits
    constexpr auto FB17 = BitField<can2_t, 17, 1>{}; // bit offset: 17, bit width: 1, Filter bits
    constexpr auto FB18 = BitField<can2_t, 18, 1>{}; // bit offset: 18, bit width: 1, Filter bits
    constexpr auto FB19 = BitField<can2_t, 19, 1>{}; // bit offset: 19, bit width: 1, Filter bits
    constexpr auto FB20 = BitField<can2_t, 20, 1>{}; // bit offset: 20, bit width: 1, Filter bits
    constexpr auto FB21 = BitField<can2_t, 21, 1>{}; // bit offset: 21, bit width: 1, Filter bits
    constexpr auto FB22 = BitField<can2_t, 22, 1>{}; // bit offset: 22, bit width: 1, Filter bits
    constexpr auto FB23 = BitField<can2_t, 23, 1>{}; // bit offset: 23, bit width: 1, Filter bits
    constexpr auto FB24 = BitField<can2_t, 24, 1>{}; // bit offset: 24, bit width: 1, Filter bits
    constexpr auto FB25 = BitField<can2_t, 25, 1>{}; // bit offset: 25, bit width: 1, Filter bits
    constexpr auto FB26 = BitField<can2_t, 26, 1>{}; // bit offset: 26, bit width: 1, Filter bits
    constexpr auto FB27 = BitField<can2_t, 27, 1>{}; // bit offset: 27, bit width: 1, Filter bits
    constexpr auto FB28 = BitField<can2_t, 28, 1>{}; // bit offset: 28, bit width: 1, Filter bits
    constexpr auto FB29 = BitField<can2_t, 29, 1>{}; // bit offset: 29, bit width: 1, Filter bits
    constexpr auto FB30 = BitField<can2_t, 30, 1>{}; // bit offset: 30, bit width: 1, Filter bits
    constexpr auto FB31 = BitField<can2_t, 31, 1>{}; // bit offset: 31, bit width: 1, Filter bits
    static Register<std::uint32_t, CAN2_BASE_ADDRESS + 0x00000280u, 0, READWRITE, decltype(FB0), decltype(FB1), decltype(FB2), decltype(FB3), decltype(FB4), decltype(FB5), decltype(FB6), decltype(FB7), decltype(FB8), decltype(FB9), decltype(FB10), decltype(FB11), decltype(FB12), decltype(FB13), decltype(FB14), decltype(FB15), decltype(FB16), decltype(FB17), decltype(FB18), decltype(FB19), decltype(FB20), decltype(FB21), decltype(FB22), decltype(FB23), decltype(FB24), decltype(FB25), decltype(FB26), decltype(FB27), decltype(FB28), decltype(FB29), decltype(FB30), decltype(FB31)> F8R1; // Filter bank 8 register 1

    constexpr auto FB0 = BitField<can2_t, 0, 1>{}; // bit offset: 0, bit width: 1, Filter bits
    constexpr auto FB1 = BitField<can2_t, 1, 1>{}; // bit offset: 1, bit width: 1, Filter bits
    constexpr auto FB2 = BitField<can2_t, 2, 1>{}; // bit offset: 2, bit width: 1, Filter bits
    constexpr auto FB3 = BitField<can2_t, 3, 1>{}; // bit offset: 3, bit width: 1, Filter bits
    constexpr auto FB4 = BitField<can2_t, 4, 1>{}; // bit offset: 4, bit width: 1, Filter bits
    constexpr auto FB5 = BitField<can2_t, 5, 1>{}; // bit offset: 5, bit width: 1, Filter bits
    constexpr auto FB6 = BitField<can2_t, 6, 1>{}; // bit offset: 6, bit width: 1, Filter bits
    constexpr auto FB7 = BitField<can2_t, 7, 1>{}; // bit offset: 7, bit width: 1, Filter bits
    constexpr auto FB8 = BitField<can2_t, 8, 1>{}; // bit offset: 8, bit width: 1, Filter bits
    constexpr auto FB9 = BitField<can2_t, 9, 1>{}; // bit offset: 9, bit width: 1, Filter bits
    constexpr auto FB10 = BitField<can2_t, 10, 1>{}; // bit offset: 10, bit width: 1, Filter bits
    constexpr auto FB11 = BitField<can2_t, 11, 1>{}; // bit offset: 11, bit width: 1, Filter bits
    constexpr auto FB12 = BitField<can2_t, 12, 1>{}; // bit offset: 12, bit width: 1, Filter bits
    constexpr auto FB13 = BitField<can2_t, 13, 1>{}; // bit offset: 13, bit width: 1, Filter bits
    constexpr auto FB14 = BitField<can2_t, 14, 1>{}; // bit offset: 14, bit width: 1, Filter bits
    constexpr auto FB15 = BitField<can2_t, 15, 1>{}; // bit offset: 15, bit width: 1, Filter bits
    constexpr auto FB16 = BitField<can2_t, 16, 1>{}; // bit offset: 16, bit width: 1, Filter bits
    constexpr auto FB17 = BitField<can2_t, 17, 1>{}; // bit offset: 17, bit width: 1, Filter bits
    constexpr auto FB18 = BitField<can2_t, 18, 1>{}; // bit offset: 18, bit width: 1, Filter bits
    constexpr auto FB19 = BitField<can2_t, 19, 1>{}; // bit offset: 19, bit width: 1, Filter bits
    constexpr auto FB20 = BitField<can2_t, 20, 1>{}; // bit offset: 20, bit width: 1, Filter bits
    constexpr auto FB21 = BitField<can2_t, 21, 1>{}; // bit offset: 21, bit width: 1, Filter bits
    constexpr auto FB22 = BitField<can2_t, 22, 1>{}; // bit offset: 22, bit width: 1, Filter bits
    constexpr auto FB23 = BitField<can2_t, 23, 1>{}; // bit offset: 23, bit width: 1, Filter bits
    constexpr auto FB24 = BitField<can2_t, 24, 1>{}; // bit offset: 24, bit width: 1, Filter bits
    constexpr auto FB25 = BitField<can2_t, 25, 1>{}; // bit offset: 25, bit width: 1, Filter bits
    constexpr auto FB26 = BitField<can2_t, 26, 1>{}; // bit offset: 26, bit width: 1, Filter bits
    constexpr auto FB27 = BitField<can2_t, 27, 1>{}; // bit offset: 27, bit width: 1, Filter bits
    constexpr auto FB28 = BitField<can2_t, 28, 1>{}; // bit offset: 28, bit width: 1, Filter bits
    constexpr auto FB29 = BitField<can2_t, 29, 1>{}; // bit offset: 29, bit width: 1, Filter bits
    constexpr auto FB30 = BitField<can2_t, 30, 1>{}; // bit offset: 30, bit width: 1, Filter bits
    constexpr auto FB31 = BitField<can2_t, 31, 1>{}; // bit offset: 31, bit width: 1, Filter bits
    static Register<std::uint32_t, CAN2_BASE_ADDRESS + 0x00000284u, 0, READWRITE, decltype(FB0), decltype(FB1), decltype(FB2), decltype(FB3), decltype(FB4), decltype(FB5), decltype(FB6), decltype(FB7), decltype(FB8), decltype(FB9), decltype(FB10), decltype(FB11), decltype(FB12), decltype(FB13), decltype(FB14), decltype(FB15), decltype(FB16), decltype(FB17), decltype(FB18), decltype(FB19), decltype(FB20), decltype(FB21), decltype(FB22), decltype(FB23), decltype(FB24), decltype(FB25), decltype(FB26), decltype(FB27), decltype(FB28), decltype(FB29), decltype(FB30), decltype(FB31)> F8R2; // Filter bank 8 register 2

    constexpr auto FB0 = BitField<can2_t, 0, 1>{}; // bit offset: 0, bit width: 1, Filter bits
    constexpr auto FB1 = BitField<can2_t, 1, 1>{}; // bit offset: 1, bit width: 1, Filter bits
    constexpr auto FB2 = BitField<can2_t, 2, 1>{}; // bit offset: 2, bit width: 1, Filter bits
    constexpr auto FB3 = BitField<can2_t, 3, 1>{}; // bit offset: 3, bit width: 1, Filter bits
    constexpr auto FB4 = BitField<can2_t, 4, 1>{}; // bit offset: 4, bit width: 1, Filter bits
    constexpr auto FB5 = BitField<can2_t, 5, 1>{}; // bit offset: 5, bit width: 1, Filter bits
    constexpr auto FB6 = BitField<can2_t, 6, 1>{}; // bit offset: 6, bit width: 1, Filter bits
    constexpr auto FB7 = BitField<can2_t, 7, 1>{}; // bit offset: 7, bit width: 1, Filter bits
    constexpr auto FB8 = BitField<can2_t, 8, 1>{}; // bit offset: 8, bit width: 1, Filter bits
    constexpr auto FB9 = BitField<can2_t, 9, 1>{}; // bit offset: 9, bit width: 1, Filter bits
    constexpr auto FB10 = BitField<can2_t, 10, 1>{}; // bit offset: 10, bit width: 1, Filter bits
    constexpr auto FB11 = BitField<can2_t, 11, 1>{}; // bit offset: 11, bit width: 1, Filter bits
    constexpr auto FB12 = BitField<can2_t, 12, 1>{}; // bit offset: 12, bit width: 1, Filter bits
    constexpr auto FB13 = BitField<can2_t, 13, 1>{}; // bit offset: 13, bit width: 1, Filter bits
    constexpr auto FB14 = BitField<can2_t, 14, 1>{}; // bit offset: 14, bit width: 1, Filter bits
    constexpr auto FB15 = BitField<can2_t, 15, 1>{}; // bit offset: 15, bit width: 1, Filter bits
    constexpr auto FB16 = BitField<can2_t, 16, 1>{}; // bit offset: 16, bit width: 1, Filter bits
    constexpr auto FB17 = BitField<can2_t, 17, 1>{}; // bit offset: 17, bit width: 1, Filter bits
    constexpr auto FB18 = BitField<can2_t, 18, 1>{}; // bit offset: 18, bit width: 1, Filter bits
    constexpr auto FB19 = BitField<can2_t, 19, 1>{}; // bit offset: 19, bit width: 1, Filter bits
    constexpr auto FB20 = BitField<can2_t, 20, 1>{}; // bit offset: 20, bit width: 1, Filter bits
    constexpr auto FB21 = BitField<can2_t, 21, 1>{}; // bit offset: 21, bit width: 1, Filter bits
    constexpr auto FB22 = BitField<can2_t, 22, 1>{}; // bit offset: 22, bit width: 1, Filter bits
    constexpr auto FB23 = BitField<can2_t, 23, 1>{}; // bit offset: 23, bit width: 1, Filter bits
    constexpr auto FB24 = BitField<can2_t, 24, 1>{}; // bit offset: 24, bit width: 1, Filter bits
    constexpr auto FB25 = BitField<can2_t, 25, 1>{}; // bit offset: 25, bit width: 1, Filter bits
    constexpr auto FB26 = BitField<can2_t, 26, 1>{}; // bit offset: 26, bit width: 1, Filter bits
    constexpr auto FB27 = BitField<can2_t, 27, 1>{}; // bit offset: 27, bit width: 1, Filter bits
    constexpr auto FB28 = BitField<can2_t, 28, 1>{}; // bit offset: 28, bit width: 1, Filter bits
    constexpr auto FB29 = BitField<can2_t, 29, 1>{}; // bit offset: 29, bit width: 1, Filter bits
    constexpr auto FB30 = BitField<can2_t, 30, 1>{}; // bit offset: 30, bit width: 1, Filter bits
    constexpr auto FB31 = BitField<can2_t, 31, 1>{}; // bit offset: 31, bit width: 1, Filter bits
    static Register<std::uint32_t, CAN2_BASE_ADDRESS + 0x00000288u, 0, READWRITE, decltype(FB0), decltype(FB1), decltype(FB2), decltype(FB3), decltype(FB4), decltype(FB5), decltype(FB6), decltype(FB7), decltype(FB8), decltype(FB9), decltype(FB10), decltype(FB11), decltype(FB12), decltype(FB13), decltype(FB14), decltype(FB15), decltype(FB16), decltype(FB17), decltype(FB18), decltype(FB19), decltype(FB20), decltype(FB21), decltype(FB22), decltype(FB23), decltype(FB24), decltype(FB25), decltype(FB26), decltype(FB27), decltype(FB28), decltype(FB29), decltype(FB30), decltype(FB31)> F9R1; // Filter bank 9 register 1

    constexpr auto FB0 = BitField<can2_t, 0, 1>{}; // bit offset: 0, bit width: 1, Filter bits
    constexpr auto FB1 = BitField<can2_t, 1, 1>{}; // bit offset: 1, bit width: 1, Filter bits
    constexpr auto FB2 = BitField<can2_t, 2, 1>{}; // bit offset: 2, bit width: 1, Filter bits
    constexpr auto FB3 = BitField<can2_t, 3, 1>{}; // bit offset: 3, bit width: 1, Filter bits
    constexpr auto FB4 = BitField<can2_t, 4, 1>{}; // bit offset: 4, bit width: 1, Filter bits
    constexpr auto FB5 = BitField<can2_t, 5, 1>{}; // bit offset: 5, bit width: 1, Filter bits
    constexpr auto FB6 = BitField<can2_t, 6, 1>{}; // bit offset: 6, bit width: 1, Filter bits
    constexpr auto FB7 = BitField<can2_t, 7, 1>{}; // bit offset: 7, bit width: 1, Filter bits
    constexpr auto FB8 = BitField<can2_t, 8, 1>{}; // bit offset: 8, bit width: 1, Filter bits
    constexpr auto FB9 = BitField<can2_t, 9, 1>{}; // bit offset: 9, bit width: 1, Filter bits
    constexpr auto FB10 = BitField<can2_t, 10, 1>{}; // bit offset: 10, bit width: 1, Filter bits
    constexpr auto FB11 = BitField<can2_t, 11, 1>{}; // bit offset: 11, bit width: 1, Filter bits
    constexpr auto FB12 = BitField<can2_t, 12, 1>{}; // bit offset: 12, bit width: 1, Filter bits
    constexpr auto FB13 = BitField<can2_t, 13, 1>{}; // bit offset: 13, bit width: 1, Filter bits
    constexpr auto FB14 = BitField<can2_t, 14, 1>{}; // bit offset: 14, bit width: 1, Filter bits
    constexpr auto FB15 = BitField<can2_t, 15, 1>{}; // bit offset: 15, bit width: 1, Filter bits
    constexpr auto FB16 = BitField<can2_t, 16, 1>{}; // bit offset: 16, bit width: 1, Filter bits
    constexpr auto FB17 = BitField<can2_t, 17, 1>{}; // bit offset: 17, bit width: 1, Filter bits
    constexpr auto FB18 = BitField<can2_t, 18, 1>{}; // bit offset: 18, bit width: 1, Filter bits
    constexpr auto FB19 = BitField<can2_t, 19, 1>{}; // bit offset: 19, bit width: 1, Filter bits
    constexpr auto FB20 = BitField<can2_t, 20, 1>{}; // bit offset: 20, bit width: 1, Filter bits
    constexpr auto FB21 = BitField<can2_t, 21, 1>{}; // bit offset: 21, bit width: 1, Filter bits
    constexpr auto FB22 = BitField<can2_t, 22, 1>{}; // bit offset: 22, bit width: 1, Filter bits
    constexpr auto FB23 = BitField<can2_t, 23, 1>{}; // bit offset: 23, bit width: 1, Filter bits
    constexpr auto FB24 = BitField<can2_t, 24, 1>{}; // bit offset: 24, bit width: 1, Filter bits
    constexpr auto FB25 = BitField<can2_t, 25, 1>{}; // bit offset: 25, bit width: 1, Filter bits
    constexpr auto FB26 = BitField<can2_t, 26, 1>{}; // bit offset: 26, bit width: 1, Filter bits
    constexpr auto FB27 = BitField<can2_t, 27, 1>{}; // bit offset: 27, bit width: 1, Filter bits
    constexpr auto FB28 = BitField<can2_t, 28, 1>{}; // bit offset: 28, bit width: 1, Filter bits
    constexpr auto FB29 = BitField<can2_t, 29, 1>{}; // bit offset: 29, bit width: 1, Filter bits
    constexpr auto FB30 = BitField<can2_t, 30, 1>{}; // bit offset: 30, bit width: 1, Filter bits
    constexpr auto FB31 = BitField<can2_t, 31, 1>{}; // bit offset: 31, bit width: 1, Filter bits
    static Register<std::uint32_t, CAN2_BASE_ADDRESS + 0x0000028cu, 0, READWRITE, decltype(FB0), decltype(FB1), decltype(FB2), decltype(FB3), decltype(FB4), decltype(FB5), decltype(FB6), decltype(FB7), decltype(FB8), decltype(FB9), decltype(FB10), decltype(FB11), decltype(FB12), decltype(FB13), decltype(FB14), decltype(FB15), decltype(FB16), decltype(FB17), decltype(FB18), decltype(FB19), decltype(FB20), decltype(FB21), decltype(FB22), decltype(FB23), decltype(FB24), decltype(FB25), decltype(FB26), decltype(FB27), decltype(FB28), decltype(FB29), decltype(FB30), decltype(FB31)> F9R2; // Filter bank 9 register 2

    constexpr auto FB0 = BitField<can2_t, 0, 1>{}; // bit offset: 0, bit width: 1, Filter bits
    constexpr auto FB1 = BitField<can2_t, 1, 1>{}; // bit offset: 1, bit width: 1, Filter bits
    constexpr auto FB2 = BitField<can2_t, 2, 1>{}; // bit offset: 2, bit width: 1, Filter bits
    constexpr auto FB3 = BitField<can2_t, 3, 1>{}; // bit offset: 3, bit width: 1, Filter bits
    constexpr auto FB4 = BitField<can2_t, 4, 1>{}; // bit offset: 4, bit width: 1, Filter bits
    constexpr auto FB5 = BitField<can2_t, 5, 1>{}; // bit offset: 5, bit width: 1, Filter bits
    constexpr auto FB6 = BitField<can2_t, 6, 1>{}; // bit offset: 6, bit width: 1, Filter bits
    constexpr auto FB7 = BitField<can2_t, 7, 1>{}; // bit offset: 7, bit width: 1, Filter bits
    constexpr auto FB8 = BitField<can2_t, 8, 1>{}; // bit offset: 8, bit width: 1, Filter bits
    constexpr auto FB9 = BitField<can2_t, 9, 1>{}; // bit offset: 9, bit width: 1, Filter bits
    constexpr auto FB10 = BitField<can2_t, 10, 1>{}; // bit offset: 10, bit width: 1, Filter bits
    constexpr auto FB11 = BitField<can2_t, 11, 1>{}; // bit offset: 11, bit width: 1, Filter bits
    constexpr auto FB12 = BitField<can2_t, 12, 1>{}; // bit offset: 12, bit width: 1, Filter bits
    constexpr auto FB13 = BitField<can2_t, 13, 1>{}; // bit offset: 13, bit width: 1, Filter bits
    constexpr auto FB14 = BitField<can2_t, 14, 1>{}; // bit offset: 14, bit width: 1, Filter bits
    constexpr auto FB15 = BitField<can2_t, 15, 1>{}; // bit offset: 15, bit width: 1, Filter bits
    constexpr auto FB16 = BitField<can2_t, 16, 1>{}; // bit offset: 16, bit width: 1, Filter bits
    constexpr auto FB17 = BitField<can2_t, 17, 1>{}; // bit offset: 17, bit width: 1, Filter bits
    constexpr auto FB18 = BitField<can2_t, 18, 1>{}; // bit offset: 18, bit width: 1, Filter bits
    constexpr auto FB19 = BitField<can2_t, 19, 1>{}; // bit offset: 19, bit width: 1, Filter bits
    constexpr auto FB20 = BitField<can2_t, 20, 1>{}; // bit offset: 20, bit width: 1, Filter bits
    constexpr auto FB21 = BitField<can2_t, 21, 1>{}; // bit offset: 21, bit width: 1, Filter bits
    constexpr auto FB22 = BitField<can2_t, 22, 1>{}; // bit offset: 22, bit width: 1, Filter bits
    constexpr auto FB23 = BitField<can2_t, 23, 1>{}; // bit offset: 23, bit width: 1, Filter bits
    constexpr auto FB24 = BitField<can2_t, 24, 1>{}; // bit offset: 24, bit width: 1, Filter bits
    constexpr auto FB25 = BitField<can2_t, 25, 1>{}; // bit offset: 25, bit width: 1, Filter bits
    constexpr auto FB26 = BitField<can2_t, 26, 1>{}; // bit offset: 26, bit width: 1, Filter bits
    constexpr auto FB27 = BitField<can2_t, 27, 1>{}; // bit offset: 27, bit width: 1, Filter bits
    constexpr auto FB28 = BitField<can2_t, 28, 1>{}; // bit offset: 28, bit width: 1, Filter bits
    constexpr auto FB29 = BitField<can2_t, 29, 1>{}; // bit offset: 29, bit width: 1, Filter bits
    constexpr auto FB30 = BitField<can2_t, 30, 1>{}; // bit offset: 30, bit width: 1, Filter bits
    constexpr auto FB31 = BitField<can2_t, 31, 1>{}; // bit offset: 31, bit width: 1, Filter bits
    static Register<std::uint32_t, CAN2_BASE_ADDRESS + 0x00000290u, 0, READWRITE, decltype(FB0), decltype(FB1), decltype(FB2), decltype(FB3), decltype(FB4), decltype(FB5), decltype(FB6), decltype(FB7), decltype(FB8), decltype(FB9), decltype(FB10), decltype(FB11), decltype(FB12), decltype(FB13), decltype(FB14), decltype(FB15), decltype(FB16), decltype(FB17), decltype(FB18), decltype(FB19), decltype(FB20), decltype(FB21), decltype(FB22), decltype(FB23), decltype(FB24), decltype(FB25), decltype(FB26), decltype(FB27), decltype(FB28), decltype(FB29), decltype(FB30), decltype(FB31)> F10R1; // Filter bank 10 register 1

    constexpr auto FB0 = BitField<can2_t, 0, 1>{}; // bit offset: 0, bit width: 1, Filter bits
    constexpr auto FB1 = BitField<can2_t, 1, 1>{}; // bit offset: 1, bit width: 1, Filter bits
    constexpr auto FB2 = BitField<can2_t, 2, 1>{}; // bit offset: 2, bit width: 1, Filter bits
    constexpr auto FB3 = BitField<can2_t, 3, 1>{}; // bit offset: 3, bit width: 1, Filter bits
    constexpr auto FB4 = BitField<can2_t, 4, 1>{}; // bit offset: 4, bit width: 1, Filter bits
    constexpr auto FB5 = BitField<can2_t, 5, 1>{}; // bit offset: 5, bit width: 1, Filter bits
    constexpr auto FB6 = BitField<can2_t, 6, 1>{}; // bit offset: 6, bit width: 1, Filter bits
    constexpr auto FB7 = BitField<can2_t, 7, 1>{}; // bit offset: 7, bit width: 1, Filter bits
    constexpr auto FB8 = BitField<can2_t, 8, 1>{}; // bit offset: 8, bit width: 1, Filter bits
    constexpr auto FB9 = BitField<can2_t, 9, 1>{}; // bit offset: 9, bit width: 1, Filter bits
    constexpr auto FB10 = BitField<can2_t, 10, 1>{}; // bit offset: 10, bit width: 1, Filter bits
    constexpr auto FB11 = BitField<can2_t, 11, 1>{}; // bit offset: 11, bit width: 1, Filter bits
    constexpr auto FB12 = BitField<can2_t, 12, 1>{}; // bit offset: 12, bit width: 1, Filter bits
    constexpr auto FB13 = BitField<can2_t, 13, 1>{}; // bit offset: 13, bit width: 1, Filter bits
    constexpr auto FB14 = BitField<can2_t, 14, 1>{}; // bit offset: 14, bit width: 1, Filter bits
    constexpr auto FB15 = BitField<can2_t, 15, 1>{}; // bit offset: 15, bit width: 1, Filter bits
    constexpr auto FB16 = BitField<can2_t, 16, 1>{}; // bit offset: 16, bit width: 1, Filter bits
    constexpr auto FB17 = BitField<can2_t, 17, 1>{}; // bit offset: 17, bit width: 1, Filter bits
    constexpr auto FB18 = BitField<can2_t, 18, 1>{}; // bit offset: 18, bit width: 1, Filter bits
    constexpr auto FB19 = BitField<can2_t, 19, 1>{}; // bit offset: 19, bit width: 1, Filter bits
    constexpr auto FB20 = BitField<can2_t, 20, 1>{}; // bit offset: 20, bit width: 1, Filter bits
    constexpr auto FB21 = BitField<can2_t, 21, 1>{}; // bit offset: 21, bit width: 1, Filter bits
    constexpr auto FB22 = BitField<can2_t, 22, 1>{}; // bit offset: 22, bit width: 1, Filter bits
    constexpr auto FB23 = BitField<can2_t, 23, 1>{}; // bit offset: 23, bit width: 1, Filter bits
    constexpr auto FB24 = BitField<can2_t, 24, 1>{}; // bit offset: 24, bit width: 1, Filter bits
    constexpr auto FB25 = BitField<can2_t, 25, 1>{}; // bit offset: 25, bit width: 1, Filter bits
    constexpr auto FB26 = BitField<can2_t, 26, 1>{}; // bit offset: 26, bit width: 1, Filter bits
    constexpr auto FB27 = BitField<can2_t, 27, 1>{}; // bit offset: 27, bit width: 1, Filter bits
    constexpr auto FB28 = BitField<can2_t, 28, 1>{}; // bit offset: 28, bit width: 1, Filter bits
    constexpr auto FB29 = BitField<can2_t, 29, 1>{}; // bit offset: 29, bit width: 1, Filter bits
    constexpr auto FB30 = BitField<can2_t, 30, 1>{}; // bit offset: 30, bit width: 1, Filter bits
    constexpr auto FB31 = BitField<can2_t, 31, 1>{}; // bit offset: 31, bit width: 1, Filter bits
    static Register<std::uint32_t, CAN2_BASE_ADDRESS + 0x00000294u, 0, READWRITE, decltype(FB0), decltype(FB1), decltype(FB2), decltype(FB3), decltype(FB4), decltype(FB5), decltype(FB6), decltype(FB7), decltype(FB8), decltype(FB9), decltype(FB10), decltype(FB11), decltype(FB12), decltype(FB13), decltype(FB14), decltype(FB15), decltype(FB16), decltype(FB17), decltype(FB18), decltype(FB19), decltype(FB20), decltype(FB21), decltype(FB22), decltype(FB23), decltype(FB24), decltype(FB25), decltype(FB26), decltype(FB27), decltype(FB28), decltype(FB29), decltype(FB30), decltype(FB31)> F10R2; // Filter bank 10 register 2

    constexpr auto FB0 = BitField<can2_t, 0, 1>{}; // bit offset: 0, bit width: 1, Filter bits
    constexpr auto FB1 = BitField<can2_t, 1, 1>{}; // bit offset: 1, bit width: 1, Filter bits
    constexpr auto FB2 = BitField<can2_t, 2, 1>{}; // bit offset: 2, bit width: 1, Filter bits
    constexpr auto FB3 = BitField<can2_t, 3, 1>{}; // bit offset: 3, bit width: 1, Filter bits
    constexpr auto FB4 = BitField<can2_t, 4, 1>{}; // bit offset: 4, bit width: 1, Filter bits
    constexpr auto FB5 = BitField<can2_t, 5, 1>{}; // bit offset: 5, bit width: 1, Filter bits
    constexpr auto FB6 = BitField<can2_t, 6, 1>{}; // bit offset: 6, bit width: 1, Filter bits
    constexpr auto FB7 = BitField<can2_t, 7, 1>{}; // bit offset: 7, bit width: 1, Filter bits
    constexpr auto FB8 = BitField<can2_t, 8, 1>{}; // bit offset: 8, bit width: 1, Filter bits
    constexpr auto FB9 = BitField<can2_t, 9, 1>{}; // bit offset: 9, bit width: 1, Filter bits
    constexpr auto FB10 = BitField<can2_t, 10, 1>{}; // bit offset: 10, bit width: 1, Filter bits
    constexpr auto FB11 = BitField<can2_t, 11, 1>{}; // bit offset: 11, bit width: 1, Filter bits
    constexpr auto FB12 = BitField<can2_t, 12, 1>{}; // bit offset: 12, bit width: 1, Filter bits
    constexpr auto FB13 = BitField<can2_t, 13, 1>{}; // bit offset: 13, bit width: 1, Filter bits
    constexpr auto FB14 = BitField<can2_t, 14, 1>{}; // bit offset: 14, bit width: 1, Filter bits
    constexpr auto FB15 = BitField<can2_t, 15, 1>{}; // bit offset: 15, bit width: 1, Filter bits
    constexpr auto FB16 = BitField<can2_t, 16, 1>{}; // bit offset: 16, bit width: 1, Filter bits
    constexpr auto FB17 = BitField<can2_t, 17, 1>{}; // bit offset: 17, bit width: 1, Filter bits
    constexpr auto FB18 = BitField<can2_t, 18, 1>{}; // bit offset: 18, bit width: 1, Filter bits
    constexpr auto FB19 = BitField<can2_t, 19, 1>{}; // bit offset: 19, bit width: 1, Filter bits
    constexpr auto FB20 = BitField<can2_t, 20, 1>{}; // bit offset: 20, bit width: 1, Filter bits
    constexpr auto FB21 = BitField<can2_t, 21, 1>{}; // bit offset: 21, bit width: 1, Filter bits
    constexpr auto FB22 = BitField<can2_t, 22, 1>{}; // bit offset: 22, bit width: 1, Filter bits
    constexpr auto FB23 = BitField<can2_t, 23, 1>{}; // bit offset: 23, bit width: 1, Filter bits
    constexpr auto FB24 = BitField<can2_t, 24, 1>{}; // bit offset: 24, bit width: 1, Filter bits
    constexpr auto FB25 = BitField<can2_t, 25, 1>{}; // bit offset: 25, bit width: 1, Filter bits
    constexpr auto FB26 = BitField<can2_t, 26, 1>{}; // bit offset: 26, bit width: 1, Filter bits
    constexpr auto FB27 = BitField<can2_t, 27, 1>{}; // bit offset: 27, bit width: 1, Filter bits
    constexpr auto FB28 = BitField<can2_t, 28, 1>{}; // bit offset: 28, bit width: 1, Filter bits
    constexpr auto FB29 = BitField<can2_t, 29, 1>{}; // bit offset: 29, bit width: 1, Filter bits
    constexpr auto FB30 = BitField<can2_t, 30, 1>{}; // bit offset: 30, bit width: 1, Filter bits
    constexpr auto FB31 = BitField<can2_t, 31, 1>{}; // bit offset: 31, bit width: 1, Filter bits
    static Register<std::uint32_t, CAN2_BASE_ADDRESS + 0x00000298u, 0, READWRITE, decltype(FB0), decltype(FB1), decltype(FB2), decltype(FB3), decltype(FB4), decltype(FB5), decltype(FB6), decltype(FB7), decltype(FB8), decltype(FB9), decltype(FB10), decltype(FB11), decltype(FB12), decltype(FB13), decltype(FB14), decltype(FB15), decltype(FB16), decltype(FB17), decltype(FB18), decltype(FB19), decltype(FB20), decltype(FB21), decltype(FB22), decltype(FB23), decltype(FB24), decltype(FB25), decltype(FB26), decltype(FB27), decltype(FB28), decltype(FB29), decltype(FB30), decltype(FB31)> F11R1; // Filter bank 11 register 1

    constexpr auto FB0 = BitField<can2_t, 0, 1>{}; // bit offset: 0, bit width: 1, Filter bits
    constexpr auto FB1 = BitField<can2_t, 1, 1>{}; // bit offset: 1, bit width: 1, Filter bits
    constexpr auto FB2 = BitField<can2_t, 2, 1>{}; // bit offset: 2, bit width: 1, Filter bits
    constexpr auto FB3 = BitField<can2_t, 3, 1>{}; // bit offset: 3, bit width: 1, Filter bits
    constexpr auto FB4 = BitField<can2_t, 4, 1>{}; // bit offset: 4, bit width: 1, Filter bits
    constexpr auto FB5 = BitField<can2_t, 5, 1>{}; // bit offset: 5, bit width: 1, Filter bits
    constexpr auto FB6 = BitField<can2_t, 6, 1>{}; // bit offset: 6, bit width: 1, Filter bits
    constexpr auto FB7 = BitField<can2_t, 7, 1>{}; // bit offset: 7, bit width: 1, Filter bits
    constexpr auto FB8 = BitField<can2_t, 8, 1>{}; // bit offset: 8, bit width: 1, Filter bits
    constexpr auto FB9 = BitField<can2_t, 9, 1>{}; // bit offset: 9, bit width: 1, Filter bits
    constexpr auto FB10 = BitField<can2_t, 10, 1>{}; // bit offset: 10, bit width: 1, Filter bits
    constexpr auto FB11 = BitField<can2_t, 11, 1>{}; // bit offset: 11, bit width: 1, Filter bits
    constexpr auto FB12 = BitField<can2_t, 12, 1>{}; // bit offset: 12, bit width: 1, Filter bits
    constexpr auto FB13 = BitField<can2_t, 13, 1>{}; // bit offset: 13, bit width: 1, Filter bits
    constexpr auto FB14 = BitField<can2_t, 14, 1>{}; // bit offset: 14, bit width: 1, Filter bits
    constexpr auto FB15 = BitField<can2_t, 15, 1>{}; // bit offset: 15, bit width: 1, Filter bits
    constexpr auto FB16 = BitField<can2_t, 16, 1>{}; // bit offset: 16, bit width: 1, Filter bits
    constexpr auto FB17 = BitField<can2_t, 17, 1>{}; // bit offset: 17, bit width: 1, Filter bits
    constexpr auto FB18 = BitField<can2_t, 18, 1>{}; // bit offset: 18, bit width: 1, Filter bits
    constexpr auto FB19 = BitField<can2_t, 19, 1>{}; // bit offset: 19, bit width: 1, Filter bits
    constexpr auto FB20 = BitField<can2_t, 20, 1>{}; // bit offset: 20, bit width: 1, Filter bits
    constexpr auto FB21 = BitField<can2_t, 21, 1>{}; // bit offset: 21, bit width: 1, Filter bits
    constexpr auto FB22 = BitField<can2_t, 22, 1>{}; // bit offset: 22, bit width: 1, Filter bits
    constexpr auto FB23 = BitField<can2_t, 23, 1>{}; // bit offset: 23, bit width: 1, Filter bits
    constexpr auto FB24 = BitField<can2_t, 24, 1>{}; // bit offset: 24, bit width: 1, Filter bits
    constexpr auto FB25 = BitField<can2_t, 25, 1>{}; // bit offset: 25, bit width: 1, Filter bits
    constexpr auto FB26 = BitField<can2_t, 26, 1>{}; // bit offset: 26, bit width: 1, Filter bits
    constexpr auto FB27 = BitField<can2_t, 27, 1>{}; // bit offset: 27, bit width: 1, Filter bits
    constexpr auto FB28 = BitField<can2_t, 28, 1>{}; // bit offset: 28, bit width: 1, Filter bits
    constexpr auto FB29 = BitField<can2_t, 29, 1>{}; // bit offset: 29, bit width: 1, Filter bits
    constexpr auto FB30 = BitField<can2_t, 30, 1>{}; // bit offset: 30, bit width: 1, Filter bits
    constexpr auto FB31 = BitField<can2_t, 31, 1>{}; // bit offset: 31, bit width: 1, Filter bits
    static Register<std::uint32_t, CAN2_BASE_ADDRESS + 0x0000029cu, 0, READWRITE, decltype(FB0), decltype(FB1), decltype(FB2), decltype(FB3), decltype(FB4), decltype(FB5), decltype(FB6), decltype(FB7), decltype(FB8), decltype(FB9), decltype(FB10), decltype(FB11), decltype(FB12), decltype(FB13), decltype(FB14), decltype(FB15), decltype(FB16), decltype(FB17), decltype(FB18), decltype(FB19), decltype(FB20), decltype(FB21), decltype(FB22), decltype(FB23), decltype(FB24), decltype(FB25), decltype(FB26), decltype(FB27), decltype(FB28), decltype(FB29), decltype(FB30), decltype(FB31)> F11R2; // Filter bank 11 register 2

    constexpr auto FB0 = BitField<can2_t, 0, 1>{}; // bit offset: 0, bit width: 1, Filter bits
    constexpr auto FB1 = BitField<can2_t, 1, 1>{}; // bit offset: 1, bit width: 1, Filter bits
    constexpr auto FB2 = BitField<can2_t, 2, 1>{}; // bit offset: 2, bit width: 1, Filter bits
    constexpr auto FB3 = BitField<can2_t, 3, 1>{}; // bit offset: 3, bit width: 1, Filter bits
    constexpr auto FB4 = BitField<can2_t, 4, 1>{}; // bit offset: 4, bit width: 1, Filter bits
    constexpr auto FB5 = BitField<can2_t, 5, 1>{}; // bit offset: 5, bit width: 1, Filter bits
    constexpr auto FB6 = BitField<can2_t, 6, 1>{}; // bit offset: 6, bit width: 1, Filter bits
    constexpr auto FB7 = BitField<can2_t, 7, 1>{}; // bit offset: 7, bit width: 1, Filter bits
    constexpr auto FB8 = BitField<can2_t, 8, 1>{}; // bit offset: 8, bit width: 1, Filter bits
    constexpr auto FB9 = BitField<can2_t, 9, 1>{}; // bit offset: 9, bit width: 1, Filter bits
    constexpr auto FB10 = BitField<can2_t, 10, 1>{}; // bit offset: 10, bit width: 1, Filter bits
    constexpr auto FB11 = BitField<can2_t, 11, 1>{}; // bit offset: 11, bit width: 1, Filter bits
    constexpr auto FB12 = BitField<can2_t, 12, 1>{}; // bit offset: 12, bit width: 1, Filter bits
    constexpr auto FB13 = BitField<can2_t, 13, 1>{}; // bit offset: 13, bit width: 1, Filter bits
    constexpr auto FB14 = BitField<can2_t, 14, 1>{}; // bit offset: 14, bit width: 1, Filter bits
    constexpr auto FB15 = BitField<can2_t, 15, 1>{}; // bit offset: 15, bit width: 1, Filter bits
    constexpr auto FB16 = BitField<can2_t, 16, 1>{}; // bit offset: 16, bit width: 1, Filter bits
    constexpr auto FB17 = BitField<can2_t, 17, 1>{}; // bit offset: 17, bit width: 1, Filter bits
    constexpr auto FB18 = BitField<can2_t, 18, 1>{}; // bit offset: 18, bit width: 1, Filter bits
    constexpr auto FB19 = BitField<can2_t, 19, 1>{}; // bit offset: 19, bit width: 1, Filter bits
    constexpr auto FB20 = BitField<can2_t, 20, 1>{}; // bit offset: 20, bit width: 1, Filter bits
    constexpr auto FB21 = BitField<can2_t, 21, 1>{}; // bit offset: 21, bit width: 1, Filter bits
    constexpr auto FB22 = BitField<can2_t, 22, 1>{}; // bit offset: 22, bit width: 1, Filter bits
    constexpr auto FB23 = BitField<can2_t, 23, 1>{}; // bit offset: 23, bit width: 1, Filter bits
    constexpr auto FB24 = BitField<can2_t, 24, 1>{}; // bit offset: 24, bit width: 1, Filter bits
    constexpr auto FB25 = BitField<can2_t, 25, 1>{}; // bit offset: 25, bit width: 1, Filter bits
    constexpr auto FB26 = BitField<can2_t, 26, 1>{}; // bit offset: 26, bit width: 1, Filter bits
    constexpr auto FB27 = BitField<can2_t, 27, 1>{}; // bit offset: 27, bit width: 1, Filter bits
    constexpr auto FB28 = BitField<can2_t, 28, 1>{}; // bit offset: 28, bit width: 1, Filter bits
    constexpr auto FB29 = BitField<can2_t, 29, 1>{}; // bit offset: 29, bit width: 1, Filter bits
    constexpr auto FB30 = BitField<can2_t, 30, 1>{}; // bit offset: 30, bit width: 1, Filter bits
    constexpr auto FB31 = BitField<can2_t, 31, 1>{}; // bit offset: 31, bit width: 1, Filter bits
    static Register<std::uint32_t, CAN2_BASE_ADDRESS + 0x000002a0u, 0, READWRITE, decltype(FB0), decltype(FB1), decltype(FB2), decltype(FB3), decltype(FB4), decltype(FB5), decltype(FB6), decltype(FB7), decltype(FB8), decltype(FB9), decltype(FB10), decltype(FB11), decltype(FB12), decltype(FB13), decltype(FB14), decltype(FB15), decltype(FB16), decltype(FB17), decltype(FB18), decltype(FB19), decltype(FB20), decltype(FB21), decltype(FB22), decltype(FB23), decltype(FB24), decltype(FB25), decltype(FB26), decltype(FB27), decltype(FB28), decltype(FB29), decltype(FB30), decltype(FB31)> F12R1; // Filter bank 4 register 1

    constexpr auto FB0 = BitField<can2_t, 0, 1>{}; // bit offset: 0, bit width: 1, Filter bits
    constexpr auto FB1 = BitField<can2_t, 1, 1>{}; // bit offset: 1, bit width: 1, Filter bits
    constexpr auto FB2 = BitField<can2_t, 2, 1>{}; // bit offset: 2, bit width: 1, Filter bits
    constexpr auto FB3 = BitField<can2_t, 3, 1>{}; // bit offset: 3, bit width: 1, Filter bits
    constexpr auto FB4 = BitField<can2_t, 4, 1>{}; // bit offset: 4, bit width: 1, Filter bits
    constexpr auto FB5 = BitField<can2_t, 5, 1>{}; // bit offset: 5, bit width: 1, Filter bits
    constexpr auto FB6 = BitField<can2_t, 6, 1>{}; // bit offset: 6, bit width: 1, Filter bits
    constexpr auto FB7 = BitField<can2_t, 7, 1>{}; // bit offset: 7, bit width: 1, Filter bits
    constexpr auto FB8 = BitField<can2_t, 8, 1>{}; // bit offset: 8, bit width: 1, Filter bits
    constexpr auto FB9 = BitField<can2_t, 9, 1>{}; // bit offset: 9, bit width: 1, Filter bits
    constexpr auto FB10 = BitField<can2_t, 10, 1>{}; // bit offset: 10, bit width: 1, Filter bits
    constexpr auto FB11 = BitField<can2_t, 11, 1>{}; // bit offset: 11, bit width: 1, Filter bits
    constexpr auto FB12 = BitField<can2_t, 12, 1>{}; // bit offset: 12, bit width: 1, Filter bits
    constexpr auto FB13 = BitField<can2_t, 13, 1>{}; // bit offset: 13, bit width: 1, Filter bits
    constexpr auto FB14 = BitField<can2_t, 14, 1>{}; // bit offset: 14, bit width: 1, Filter bits
    constexpr auto FB15 = BitField<can2_t, 15, 1>{}; // bit offset: 15, bit width: 1, Filter bits
    constexpr auto FB16 = BitField<can2_t, 16, 1>{}; // bit offset: 16, bit width: 1, Filter bits
    constexpr auto FB17 = BitField<can2_t, 17, 1>{}; // bit offset: 17, bit width: 1, Filter bits
    constexpr auto FB18 = BitField<can2_t, 18, 1>{}; // bit offset: 18, bit width: 1, Filter bits
    constexpr auto FB19 = BitField<can2_t, 19, 1>{}; // bit offset: 19, bit width: 1, Filter bits
    constexpr auto FB20 = BitField<can2_t, 20, 1>{}; // bit offset: 20, bit width: 1, Filter bits
    constexpr auto FB21 = BitField<can2_t, 21, 1>{}; // bit offset: 21, bit width: 1, Filter bits
    constexpr auto FB22 = BitField<can2_t, 22, 1>{}; // bit offset: 22, bit width: 1, Filter bits
    constexpr auto FB23 = BitField<can2_t, 23, 1>{}; // bit offset: 23, bit width: 1, Filter bits
    constexpr auto FB24 = BitField<can2_t, 24, 1>{}; // bit offset: 24, bit width: 1, Filter bits
    constexpr auto FB25 = BitField<can2_t, 25, 1>{}; // bit offset: 25, bit width: 1, Filter bits
    constexpr auto FB26 = BitField<can2_t, 26, 1>{}; // bit offset: 26, bit width: 1, Filter bits
    constexpr auto FB27 = BitField<can2_t, 27, 1>{}; // bit offset: 27, bit width: 1, Filter bits
    constexpr auto FB28 = BitField<can2_t, 28, 1>{}; // bit offset: 28, bit width: 1, Filter bits
    constexpr auto FB29 = BitField<can2_t, 29, 1>{}; // bit offset: 29, bit width: 1, Filter bits
    constexpr auto FB30 = BitField<can2_t, 30, 1>{}; // bit offset: 30, bit width: 1, Filter bits
    constexpr auto FB31 = BitField<can2_t, 31, 1>{}; // bit offset: 31, bit width: 1, Filter bits
    static Register<std::uint32_t, CAN2_BASE_ADDRESS + 0x000002a4u, 0, READWRITE, decltype(FB0), decltype(FB1), decltype(FB2), decltype(FB3), decltype(FB4), decltype(FB5), decltype(FB6), decltype(FB7), decltype(FB8), decltype(FB9), decltype(FB10), decltype(FB11), decltype(FB12), decltype(FB13), decltype(FB14), decltype(FB15), decltype(FB16), decltype(FB17), decltype(FB18), decltype(FB19), decltype(FB20), decltype(FB21), decltype(FB22), decltype(FB23), decltype(FB24), decltype(FB25), decltype(FB26), decltype(FB27), decltype(FB28), decltype(FB29), decltype(FB30), decltype(FB31)> F12R2; // Filter bank 12 register 2

    constexpr auto FB0 = BitField<can2_t, 0, 1>{}; // bit offset: 0, bit width: 1, Filter bits
    constexpr auto FB1 = BitField<can2_t, 1, 1>{}; // bit offset: 1, bit width: 1, Filter bits
    constexpr auto FB2 = BitField<can2_t, 2, 1>{}; // bit offset: 2, bit width: 1, Filter bits
    constexpr auto FB3 = BitField<can2_t, 3, 1>{}; // bit offset: 3, bit width: 1, Filter bits
    constexpr auto FB4 = BitField<can2_t, 4, 1>{}; // bit offset: 4, bit width: 1, Filter bits
    constexpr auto FB5 = BitField<can2_t, 5, 1>{}; // bit offset: 5, bit width: 1, Filter bits
    constexpr auto FB6 = BitField<can2_t, 6, 1>{}; // bit offset: 6, bit width: 1, Filter bits
    constexpr auto FB7 = BitField<can2_t, 7, 1>{}; // bit offset: 7, bit width: 1, Filter bits
    constexpr auto FB8 = BitField<can2_t, 8, 1>{}; // bit offset: 8, bit width: 1, Filter bits
    constexpr auto FB9 = BitField<can2_t, 9, 1>{}; // bit offset: 9, bit width: 1, Filter bits
    constexpr auto FB10 = BitField<can2_t, 10, 1>{}; // bit offset: 10, bit width: 1, Filter bits
    constexpr auto FB11 = BitField<can2_t, 11, 1>{}; // bit offset: 11, bit width: 1, Filter bits
    constexpr auto FB12 = BitField<can2_t, 12, 1>{}; // bit offset: 12, bit width: 1, Filter bits
    constexpr auto FB13 = BitField<can2_t, 13, 1>{}; // bit offset: 13, bit width: 1, Filter bits
    constexpr auto FB14 = BitField<can2_t, 14, 1>{}; // bit offset: 14, bit width: 1, Filter bits
    constexpr auto FB15 = BitField<can2_t, 15, 1>{}; // bit offset: 15, bit width: 1, Filter bits
    constexpr auto FB16 = BitField<can2_t, 16, 1>{}; // bit offset: 16, bit width: 1, Filter bits
    constexpr auto FB17 = BitField<can2_t, 17, 1>{}; // bit offset: 17, bit width: 1, Filter bits
    constexpr auto FB18 = BitField<can2_t, 18, 1>{}; // bit offset: 18, bit width: 1, Filter bits
    constexpr auto FB19 = BitField<can2_t, 19, 1>{}; // bit offset: 19, bit width: 1, Filter bits
    constexpr auto FB20 = BitField<can2_t, 20, 1>{}; // bit offset: 20, bit width: 1, Filter bits
    constexpr auto FB21 = BitField<can2_t, 21, 1>{}; // bit offset: 21, bit width: 1, Filter bits
    constexpr auto FB22 = BitField<can2_t, 22, 1>{}; // bit offset: 22, bit width: 1, Filter bits
    constexpr auto FB23 = BitField<can2_t, 23, 1>{}; // bit offset: 23, bit width: 1, Filter bits
    constexpr auto FB24 = BitField<can2_t, 24, 1>{}; // bit offset: 24, bit width: 1, Filter bits
    constexpr auto FB25 = BitField<can2_t, 25, 1>{}; // bit offset: 25, bit width: 1, Filter bits
    constexpr auto FB26 = BitField<can2_t, 26, 1>{}; // bit offset: 26, bit width: 1, Filter bits
    constexpr auto FB27 = BitField<can2_t, 27, 1>{}; // bit offset: 27, bit width: 1, Filter bits
    constexpr auto FB28 = BitField<can2_t, 28, 1>{}; // bit offset: 28, bit width: 1, Filter bits
    constexpr auto FB29 = BitField<can2_t, 29, 1>{}; // bit offset: 29, bit width: 1, Filter bits
    constexpr auto FB30 = BitField<can2_t, 30, 1>{}; // bit offset: 30, bit width: 1, Filter bits
    constexpr auto FB31 = BitField<can2_t, 31, 1>{}; // bit offset: 31, bit width: 1, Filter bits
    static Register<std::uint32_t, CAN2_BASE_ADDRESS + 0x000002a8u, 0, READWRITE, decltype(FB0), decltype(FB1), decltype(FB2), decltype(FB3), decltype(FB4), decltype(FB5), decltype(FB6), decltype(FB7), decltype(FB8), decltype(FB9), decltype(FB10), decltype(FB11), decltype(FB12), decltype(FB13), decltype(FB14), decltype(FB15), decltype(FB16), decltype(FB17), decltype(FB18), decltype(FB19), decltype(FB20), decltype(FB21), decltype(FB22), decltype(FB23), decltype(FB24), decltype(FB25), decltype(FB26), decltype(FB27), decltype(FB28), decltype(FB29), decltype(FB30), decltype(FB31)> F13R1; // Filter bank 13 register 1

    constexpr auto FB0 = BitField<can2_t, 0, 1>{}; // bit offset: 0, bit width: 1, Filter bits
    constexpr auto FB1 = BitField<can2_t, 1, 1>{}; // bit offset: 1, bit width: 1, Filter bits
    constexpr auto FB2 = BitField<can2_t, 2, 1>{}; // bit offset: 2, bit width: 1, Filter bits
    constexpr auto FB3 = BitField<can2_t, 3, 1>{}; // bit offset: 3, bit width: 1, Filter bits
    constexpr auto FB4 = BitField<can2_t, 4, 1>{}; // bit offset: 4, bit width: 1, Filter bits
    constexpr auto FB5 = BitField<can2_t, 5, 1>{}; // bit offset: 5, bit width: 1, Filter bits
    constexpr auto FB6 = BitField<can2_t, 6, 1>{}; // bit offset: 6, bit width: 1, Filter bits
    constexpr auto FB7 = BitField<can2_t, 7, 1>{}; // bit offset: 7, bit width: 1, Filter bits
    constexpr auto FB8 = BitField<can2_t, 8, 1>{}; // bit offset: 8, bit width: 1, Filter bits
    constexpr auto FB9 = BitField<can2_t, 9, 1>{}; // bit offset: 9, bit width: 1, Filter bits
    constexpr auto FB10 = BitField<can2_t, 10, 1>{}; // bit offset: 10, bit width: 1, Filter bits
    constexpr auto FB11 = BitField<can2_t, 11, 1>{}; // bit offset: 11, bit width: 1, Filter bits
    constexpr auto FB12 = BitField<can2_t, 12, 1>{}; // bit offset: 12, bit width: 1, Filter bits
    constexpr auto FB13 = BitField<can2_t, 13, 1>{}; // bit offset: 13, bit width: 1, Filter bits
    constexpr auto FB14 = BitField<can2_t, 14, 1>{}; // bit offset: 14, bit width: 1, Filter bits
    constexpr auto FB15 = BitField<can2_t, 15, 1>{}; // bit offset: 15, bit width: 1, Filter bits
    constexpr auto FB16 = BitField<can2_t, 16, 1>{}; // bit offset: 16, bit width: 1, Filter bits
    constexpr auto FB17 = BitField<can2_t, 17, 1>{}; // bit offset: 17, bit width: 1, Filter bits
    constexpr auto FB18 = BitField<can2_t, 18, 1>{}; // bit offset: 18, bit width: 1, Filter bits
    constexpr auto FB19 = BitField<can2_t, 19, 1>{}; // bit offset: 19, bit width: 1, Filter bits
    constexpr auto FB20 = BitField<can2_t, 20, 1>{}; // bit offset: 20, bit width: 1, Filter bits
    constexpr auto FB21 = BitField<can2_t, 21, 1>{}; // bit offset: 21, bit width: 1, Filter bits
    constexpr auto FB22 = BitField<can2_t, 22, 1>{}; // bit offset: 22, bit width: 1, Filter bits
    constexpr auto FB23 = BitField<can2_t, 23, 1>{}; // bit offset: 23, bit width: 1, Filter bits
    constexpr auto FB24 = BitField<can2_t, 24, 1>{}; // bit offset: 24, bit width: 1, Filter bits
    constexpr auto FB25 = BitField<can2_t, 25, 1>{}; // bit offset: 25, bit width: 1, Filter bits
    constexpr auto FB26 = BitField<can2_t, 26, 1>{}; // bit offset: 26, bit width: 1, Filter bits
    constexpr auto FB27 = BitField<can2_t, 27, 1>{}; // bit offset: 27, bit width: 1, Filter bits
    constexpr auto FB28 = BitField<can2_t, 28, 1>{}; // bit offset: 28, bit width: 1, Filter bits
    constexpr auto FB29 = BitField<can2_t, 29, 1>{}; // bit offset: 29, bit width: 1, Filter bits
    constexpr auto FB30 = BitField<can2_t, 30, 1>{}; // bit offset: 30, bit width: 1, Filter bits
    constexpr auto FB31 = BitField<can2_t, 31, 1>{}; // bit offset: 31, bit width: 1, Filter bits
    static Register<std::uint32_t, CAN2_BASE_ADDRESS + 0x000002acu, 0, READWRITE, decltype(FB0), decltype(FB1), decltype(FB2), decltype(FB3), decltype(FB4), decltype(FB5), decltype(FB6), decltype(FB7), decltype(FB8), decltype(FB9), decltype(FB10), decltype(FB11), decltype(FB12), decltype(FB13), decltype(FB14), decltype(FB15), decltype(FB16), decltype(FB17), decltype(FB18), decltype(FB19), decltype(FB20), decltype(FB21), decltype(FB22), decltype(FB23), decltype(FB24), decltype(FB25), decltype(FB26), decltype(FB27), decltype(FB28), decltype(FB29), decltype(FB30), decltype(FB31)> F13R2; // Filter bank 13 register 2

    constexpr auto FB0 = BitField<can2_t, 0, 1>{}; // bit offset: 0, bit width: 1, Filter bits
    constexpr auto FB1 = BitField<can2_t, 1, 1>{}; // bit offset: 1, bit width: 1, Filter bits
    constexpr auto FB2 = BitField<can2_t, 2, 1>{}; // bit offset: 2, bit width: 1, Filter bits
    constexpr auto FB3 = BitField<can2_t, 3, 1>{}; // bit offset: 3, bit width: 1, Filter bits
    constexpr auto FB4 = BitField<can2_t, 4, 1>{}; // bit offset: 4, bit width: 1, Filter bits
    constexpr auto FB5 = BitField<can2_t, 5, 1>{}; // bit offset: 5, bit width: 1, Filter bits
    constexpr auto FB6 = BitField<can2_t, 6, 1>{}; // bit offset: 6, bit width: 1, Filter bits
    constexpr auto FB7 = BitField<can2_t, 7, 1>{}; // bit offset: 7, bit width: 1, Filter bits
    constexpr auto FB8 = BitField<can2_t, 8, 1>{}; // bit offset: 8, bit width: 1, Filter bits
    constexpr auto FB9 = BitField<can2_t, 9, 1>{}; // bit offset: 9, bit width: 1, Filter bits
    constexpr auto FB10 = BitField<can2_t, 10, 1>{}; // bit offset: 10, bit width: 1, Filter bits
    constexpr auto FB11 = BitField<can2_t, 11, 1>{}; // bit offset: 11, bit width: 1, Filter bits
    constexpr auto FB12 = BitField<can2_t, 12, 1>{}; // bit offset: 12, bit width: 1, Filter bits
    constexpr auto FB13 = BitField<can2_t, 13, 1>{}; // bit offset: 13, bit width: 1, Filter bits
    constexpr auto FB14 = BitField<can2_t, 14, 1>{}; // bit offset: 14, bit width: 1, Filter bits
    constexpr auto FB15 = BitField<can2_t, 15, 1>{}; // bit offset: 15, bit width: 1, Filter bits
    constexpr auto FB16 = BitField<can2_t, 16, 1>{}; // bit offset: 16, bit width: 1, Filter bits
    constexpr auto FB17 = BitField<can2_t, 17, 1>{}; // bit offset: 17, bit width: 1, Filter bits
    constexpr auto FB18 = BitField<can2_t, 18, 1>{}; // bit offset: 18, bit width: 1, Filter bits
    constexpr auto FB19 = BitField<can2_t, 19, 1>{}; // bit offset: 19, bit width: 1, Filter bits
    constexpr auto FB20 = BitField<can2_t, 20, 1>{}; // bit offset: 20, bit width: 1, Filter bits
    constexpr auto FB21 = BitField<can2_t, 21, 1>{}; // bit offset: 21, bit width: 1, Filter bits
    constexpr auto FB22 = BitField<can2_t, 22, 1>{}; // bit offset: 22, bit width: 1, Filter bits
    constexpr auto FB23 = BitField<can2_t, 23, 1>{}; // bit offset: 23, bit width: 1, Filter bits
    constexpr auto FB24 = BitField<can2_t, 24, 1>{}; // bit offset: 24, bit width: 1, Filter bits
    constexpr auto FB25 = BitField<can2_t, 25, 1>{}; // bit offset: 25, bit width: 1, Filter bits
    constexpr auto FB26 = BitField<can2_t, 26, 1>{}; // bit offset: 26, bit width: 1, Filter bits
    constexpr auto FB27 = BitField<can2_t, 27, 1>{}; // bit offset: 27, bit width: 1, Filter bits
    constexpr auto FB28 = BitField<can2_t, 28, 1>{}; // bit offset: 28, bit width: 1, Filter bits
    constexpr auto FB29 = BitField<can2_t, 29, 1>{}; // bit offset: 29, bit width: 1, Filter bits
    constexpr auto FB30 = BitField<can2_t, 30, 1>{}; // bit offset: 30, bit width: 1, Filter bits
    constexpr auto FB31 = BitField<can2_t, 31, 1>{}; // bit offset: 31, bit width: 1, Filter bits
    static Register<std::uint32_t, CAN2_BASE_ADDRESS + 0x000002b0u, 0, READWRITE, decltype(FB0), decltype(FB1), decltype(FB2), decltype(FB3), decltype(FB4), decltype(FB5), decltype(FB6), decltype(FB7), decltype(FB8), decltype(FB9), decltype(FB10), decltype(FB11), decltype(FB12), decltype(FB13), decltype(FB14), decltype(FB15), decltype(FB16), decltype(FB17), decltype(FB18), decltype(FB19), decltype(FB20), decltype(FB21), decltype(FB22), decltype(FB23), decltype(FB24), decltype(FB25), decltype(FB26), decltype(FB27), decltype(FB28), decltype(FB29), decltype(FB30), decltype(FB31)> F14R1; // Filter bank 14 register 1

    constexpr auto FB0 = BitField<can2_t, 0, 1>{}; // bit offset: 0, bit width: 1, Filter bits
    constexpr auto FB1 = BitField<can2_t, 1, 1>{}; // bit offset: 1, bit width: 1, Filter bits
    constexpr auto FB2 = BitField<can2_t, 2, 1>{}; // bit offset: 2, bit width: 1, Filter bits
    constexpr auto FB3 = BitField<can2_t, 3, 1>{}; // bit offset: 3, bit width: 1, Filter bits
    constexpr auto FB4 = BitField<can2_t, 4, 1>{}; // bit offset: 4, bit width: 1, Filter bits
    constexpr auto FB5 = BitField<can2_t, 5, 1>{}; // bit offset: 5, bit width: 1, Filter bits
    constexpr auto FB6 = BitField<can2_t, 6, 1>{}; // bit offset: 6, bit width: 1, Filter bits
    constexpr auto FB7 = BitField<can2_t, 7, 1>{}; // bit offset: 7, bit width: 1, Filter bits
    constexpr auto FB8 = BitField<can2_t, 8, 1>{}; // bit offset: 8, bit width: 1, Filter bits
    constexpr auto FB9 = BitField<can2_t, 9, 1>{}; // bit offset: 9, bit width: 1, Filter bits
    constexpr auto FB10 = BitField<can2_t, 10, 1>{}; // bit offset: 10, bit width: 1, Filter bits
    constexpr auto FB11 = BitField<can2_t, 11, 1>{}; // bit offset: 11, bit width: 1, Filter bits
    constexpr auto FB12 = BitField<can2_t, 12, 1>{}; // bit offset: 12, bit width: 1, Filter bits
    constexpr auto FB13 = BitField<can2_t, 13, 1>{}; // bit offset: 13, bit width: 1, Filter bits
    constexpr auto FB14 = BitField<can2_t, 14, 1>{}; // bit offset: 14, bit width: 1, Filter bits
    constexpr auto FB15 = BitField<can2_t, 15, 1>{}; // bit offset: 15, bit width: 1, Filter bits
    constexpr auto FB16 = BitField<can2_t, 16, 1>{}; // bit offset: 16, bit width: 1, Filter bits
    constexpr auto FB17 = BitField<can2_t, 17, 1>{}; // bit offset: 17, bit width: 1, Filter bits
    constexpr auto FB18 = BitField<can2_t, 18, 1>{}; // bit offset: 18, bit width: 1, Filter bits
    constexpr auto FB19 = BitField<can2_t, 19, 1>{}; // bit offset: 19, bit width: 1, Filter bits
    constexpr auto FB20 = BitField<can2_t, 20, 1>{}; // bit offset: 20, bit width: 1, Filter bits
    constexpr auto FB21 = BitField<can2_t, 21, 1>{}; // bit offset: 21, bit width: 1, Filter bits
    constexpr auto FB22 = BitField<can2_t, 22, 1>{}; // bit offset: 22, bit width: 1, Filter bits
    constexpr auto FB23 = BitField<can2_t, 23, 1>{}; // bit offset: 23, bit width: 1, Filter bits
    constexpr auto FB24 = BitField<can2_t, 24, 1>{}; // bit offset: 24, bit width: 1, Filter bits
    constexpr auto FB25 = BitField<can2_t, 25, 1>{}; // bit offset: 25, bit width: 1, Filter bits
    constexpr auto FB26 = BitField<can2_t, 26, 1>{}; // bit offset: 26, bit width: 1, Filter bits
    constexpr auto FB27 = BitField<can2_t, 27, 1>{}; // bit offset: 27, bit width: 1, Filter bits
    constexpr auto FB28 = BitField<can2_t, 28, 1>{}; // bit offset: 28, bit width: 1, Filter bits
    constexpr auto FB29 = BitField<can2_t, 29, 1>{}; // bit offset: 29, bit width: 1, Filter bits
    constexpr auto FB30 = BitField<can2_t, 30, 1>{}; // bit offset: 30, bit width: 1, Filter bits
    constexpr auto FB31 = BitField<can2_t, 31, 1>{}; // bit offset: 31, bit width: 1, Filter bits
    static Register<std::uint32_t, CAN2_BASE_ADDRESS + 0x000002b4u, 0, READWRITE, decltype(FB0), decltype(FB1), decltype(FB2), decltype(FB3), decltype(FB4), decltype(FB5), decltype(FB6), decltype(FB7), decltype(FB8), decltype(FB9), decltype(FB10), decltype(FB11), decltype(FB12), decltype(FB13), decltype(FB14), decltype(FB15), decltype(FB16), decltype(FB17), decltype(FB18), decltype(FB19), decltype(FB20), decltype(FB21), decltype(FB22), decltype(FB23), decltype(FB24), decltype(FB25), decltype(FB26), decltype(FB27), decltype(FB28), decltype(FB29), decltype(FB30), decltype(FB31)> F14R2; // Filter bank 14 register 2

    constexpr auto FB0 = BitField<can2_t, 0, 1>{}; // bit offset: 0, bit width: 1, Filter bits
    constexpr auto FB1 = BitField<can2_t, 1, 1>{}; // bit offset: 1, bit width: 1, Filter bits
    constexpr auto FB2 = BitField<can2_t, 2, 1>{}; // bit offset: 2, bit width: 1, Filter bits
    constexpr auto FB3 = BitField<can2_t, 3, 1>{}; // bit offset: 3, bit width: 1, Filter bits
    constexpr auto FB4 = BitField<can2_t, 4, 1>{}; // bit offset: 4, bit width: 1, Filter bits
    constexpr auto FB5 = BitField<can2_t, 5, 1>{}; // bit offset: 5, bit width: 1, Filter bits
    constexpr auto FB6 = BitField<can2_t, 6, 1>{}; // bit offset: 6, bit width: 1, Filter bits
    constexpr auto FB7 = BitField<can2_t, 7, 1>{}; // bit offset: 7, bit width: 1, Filter bits
    constexpr auto FB8 = BitField<can2_t, 8, 1>{}; // bit offset: 8, bit width: 1, Filter bits
    constexpr auto FB9 = BitField<can2_t, 9, 1>{}; // bit offset: 9, bit width: 1, Filter bits
    constexpr auto FB10 = BitField<can2_t, 10, 1>{}; // bit offset: 10, bit width: 1, Filter bits
    constexpr auto FB11 = BitField<can2_t, 11, 1>{}; // bit offset: 11, bit width: 1, Filter bits
    constexpr auto FB12 = BitField<can2_t, 12, 1>{}; // bit offset: 12, bit width: 1, Filter bits
    constexpr auto FB13 = BitField<can2_t, 13, 1>{}; // bit offset: 13, bit width: 1, Filter bits
    constexpr auto FB14 = BitField<can2_t, 14, 1>{}; // bit offset: 14, bit width: 1, Filter bits
    constexpr auto FB15 = BitField<can2_t, 15, 1>{}; // bit offset: 15, bit width: 1, Filter bits
    constexpr auto FB16 = BitField<can2_t, 16, 1>{}; // bit offset: 16, bit width: 1, Filter bits
    constexpr auto FB17 = BitField<can2_t, 17, 1>{}; // bit offset: 17, bit width: 1, Filter bits
    constexpr auto FB18 = BitField<can2_t, 18, 1>{}; // bit offset: 18, bit width: 1, Filter bits
    constexpr auto FB19 = BitField<can2_t, 19, 1>{}; // bit offset: 19, bit width: 1, Filter bits
    constexpr auto FB20 = BitField<can2_t, 20, 1>{}; // bit offset: 20, bit width: 1, Filter bits
    constexpr auto FB21 = BitField<can2_t, 21, 1>{}; // bit offset: 21, bit width: 1, Filter bits
    constexpr auto FB22 = BitField<can2_t, 22, 1>{}; // bit offset: 22, bit width: 1, Filter bits
    constexpr auto FB23 = BitField<can2_t, 23, 1>{}; // bit offset: 23, bit width: 1, Filter bits
    constexpr auto FB24 = BitField<can2_t, 24, 1>{}; // bit offset: 24, bit width: 1, Filter bits
    constexpr auto FB25 = BitField<can2_t, 25, 1>{}; // bit offset: 25, bit width: 1, Filter bits
    constexpr auto FB26 = BitField<can2_t, 26, 1>{}; // bit offset: 26, bit width: 1, Filter bits
    constexpr auto FB27 = BitField<can2_t, 27, 1>{}; // bit offset: 27, bit width: 1, Filter bits
    constexpr auto FB28 = BitField<can2_t, 28, 1>{}; // bit offset: 28, bit width: 1, Filter bits
    constexpr auto FB29 = BitField<can2_t, 29, 1>{}; // bit offset: 29, bit width: 1, Filter bits
    constexpr auto FB30 = BitField<can2_t, 30, 1>{}; // bit offset: 30, bit width: 1, Filter bits
    constexpr auto FB31 = BitField<can2_t, 31, 1>{}; // bit offset: 31, bit width: 1, Filter bits
    static Register<std::uint32_t, CAN2_BASE_ADDRESS + 0x000002b8u, 0, READWRITE, decltype(FB0), decltype(FB1), decltype(FB2), decltype(FB3), decltype(FB4), decltype(FB5), decltype(FB6), decltype(FB7), decltype(FB8), decltype(FB9), decltype(FB10), decltype(FB11), decltype(FB12), decltype(FB13), decltype(FB14), decltype(FB15), decltype(FB16), decltype(FB17), decltype(FB18), decltype(FB19), decltype(FB20), decltype(FB21), decltype(FB22), decltype(FB23), decltype(FB24), decltype(FB25), decltype(FB26), decltype(FB27), decltype(FB28), decltype(FB29), decltype(FB30), decltype(FB31)> F15R1; // Filter bank 15 register 1

    constexpr auto FB0 = BitField<can2_t, 0, 1>{}; // bit offset: 0, bit width: 1, Filter bits
    constexpr auto FB1 = BitField<can2_t, 1, 1>{}; // bit offset: 1, bit width: 1, Filter bits
    constexpr auto FB2 = BitField<can2_t, 2, 1>{}; // bit offset: 2, bit width: 1, Filter bits
    constexpr auto FB3 = BitField<can2_t, 3, 1>{}; // bit offset: 3, bit width: 1, Filter bits
    constexpr auto FB4 = BitField<can2_t, 4, 1>{}; // bit offset: 4, bit width: 1, Filter bits
    constexpr auto FB5 = BitField<can2_t, 5, 1>{}; // bit offset: 5, bit width: 1, Filter bits
    constexpr auto FB6 = BitField<can2_t, 6, 1>{}; // bit offset: 6, bit width: 1, Filter bits
    constexpr auto FB7 = BitField<can2_t, 7, 1>{}; // bit offset: 7, bit width: 1, Filter bits
    constexpr auto FB8 = BitField<can2_t, 8, 1>{}; // bit offset: 8, bit width: 1, Filter bits
    constexpr auto FB9 = BitField<can2_t, 9, 1>{}; // bit offset: 9, bit width: 1, Filter bits
    constexpr auto FB10 = BitField<can2_t, 10, 1>{}; // bit offset: 10, bit width: 1, Filter bits
    constexpr auto FB11 = BitField<can2_t, 11, 1>{}; // bit offset: 11, bit width: 1, Filter bits
    constexpr auto FB12 = BitField<can2_t, 12, 1>{}; // bit offset: 12, bit width: 1, Filter bits
    constexpr auto FB13 = BitField<can2_t, 13, 1>{}; // bit offset: 13, bit width: 1, Filter bits
    constexpr auto FB14 = BitField<can2_t, 14, 1>{}; // bit offset: 14, bit width: 1, Filter bits
    constexpr auto FB15 = BitField<can2_t, 15, 1>{}; // bit offset: 15, bit width: 1, Filter bits
    constexpr auto FB16 = BitField<can2_t, 16, 1>{}; // bit offset: 16, bit width: 1, Filter bits
    constexpr auto FB17 = BitField<can2_t, 17, 1>{}; // bit offset: 17, bit width: 1, Filter bits
    constexpr auto FB18 = BitField<can2_t, 18, 1>{}; // bit offset: 18, bit width: 1, Filter bits
    constexpr auto FB19 = BitField<can2_t, 19, 1>{}; // bit offset: 19, bit width: 1, Filter bits
    constexpr auto FB20 = BitField<can2_t, 20, 1>{}; // bit offset: 20, bit width: 1, Filter bits
    constexpr auto FB21 = BitField<can2_t, 21, 1>{}; // bit offset: 21, bit width: 1, Filter bits
    constexpr auto FB22 = BitField<can2_t, 22, 1>{}; // bit offset: 22, bit width: 1, Filter bits
    constexpr auto FB23 = BitField<can2_t, 23, 1>{}; // bit offset: 23, bit width: 1, Filter bits
    constexpr auto FB24 = BitField<can2_t, 24, 1>{}; // bit offset: 24, bit width: 1, Filter bits
    constexpr auto FB25 = BitField<can2_t, 25, 1>{}; // bit offset: 25, bit width: 1, Filter bits
    constexpr auto FB26 = BitField<can2_t, 26, 1>{}; // bit offset: 26, bit width: 1, Filter bits
    constexpr auto FB27 = BitField<can2_t, 27, 1>{}; // bit offset: 27, bit width: 1, Filter bits
    constexpr auto FB28 = BitField<can2_t, 28, 1>{}; // bit offset: 28, bit width: 1, Filter bits
    constexpr auto FB29 = BitField<can2_t, 29, 1>{}; // bit offset: 29, bit width: 1, Filter bits
    constexpr auto FB30 = BitField<can2_t, 30, 1>{}; // bit offset: 30, bit width: 1, Filter bits
    constexpr auto FB31 = BitField<can2_t, 31, 1>{}; // bit offset: 31, bit width: 1, Filter bits
    static Register<std::uint32_t, CAN2_BASE_ADDRESS + 0x000002bcu, 0, READWRITE, decltype(FB0), decltype(FB1), decltype(FB2), decltype(FB3), decltype(FB4), decltype(FB5), decltype(FB6), decltype(FB7), decltype(FB8), decltype(FB9), decltype(FB10), decltype(FB11), decltype(FB12), decltype(FB13), decltype(FB14), decltype(FB15), decltype(FB16), decltype(FB17), decltype(FB18), decltype(FB19), decltype(FB20), decltype(FB21), decltype(FB22), decltype(FB23), decltype(FB24), decltype(FB25), decltype(FB26), decltype(FB27), decltype(FB28), decltype(FB29), decltype(FB30), decltype(FB31)> F15R2; // Filter bank 15 register 2

    constexpr auto FB0 = BitField<can2_t, 0, 1>{}; // bit offset: 0, bit width: 1, Filter bits
    constexpr auto FB1 = BitField<can2_t, 1, 1>{}; // bit offset: 1, bit width: 1, Filter bits
    constexpr auto FB2 = BitField<can2_t, 2, 1>{}; // bit offset: 2, bit width: 1, Filter bits
    constexpr auto FB3 = BitField<can2_t, 3, 1>{}; // bit offset: 3, bit width: 1, Filter bits
    constexpr auto FB4 = BitField<can2_t, 4, 1>{}; // bit offset: 4, bit width: 1, Filter bits
    constexpr auto FB5 = BitField<can2_t, 5, 1>{}; // bit offset: 5, bit width: 1, Filter bits
    constexpr auto FB6 = BitField<can2_t, 6, 1>{}; // bit offset: 6, bit width: 1, Filter bits
    constexpr auto FB7 = BitField<can2_t, 7, 1>{}; // bit offset: 7, bit width: 1, Filter bits
    constexpr auto FB8 = BitField<can2_t, 8, 1>{}; // bit offset: 8, bit width: 1, Filter bits
    constexpr auto FB9 = BitField<can2_t, 9, 1>{}; // bit offset: 9, bit width: 1, Filter bits
    constexpr auto FB10 = BitField<can2_t, 10, 1>{}; // bit offset: 10, bit width: 1, Filter bits
    constexpr auto FB11 = BitField<can2_t, 11, 1>{}; // bit offset: 11, bit width: 1, Filter bits
    constexpr auto FB12 = BitField<can2_t, 12, 1>{}; // bit offset: 12, bit width: 1, Filter bits
    constexpr auto FB13 = BitField<can2_t, 13, 1>{}; // bit offset: 13, bit width: 1, Filter bits
    constexpr auto FB14 = BitField<can2_t, 14, 1>{}; // bit offset: 14, bit width: 1, Filter bits
    constexpr auto FB15 = BitField<can2_t, 15, 1>{}; // bit offset: 15, bit width: 1, Filter bits
    constexpr auto FB16 = BitField<can2_t, 16, 1>{}; // bit offset: 16, bit width: 1, Filter bits
    constexpr auto FB17 = BitField<can2_t, 17, 1>{}; // bit offset: 17, bit width: 1, Filter bits
    constexpr auto FB18 = BitField<can2_t, 18, 1>{}; // bit offset: 18, bit width: 1, Filter bits
    constexpr auto FB19 = BitField<can2_t, 19, 1>{}; // bit offset: 19, bit width: 1, Filter bits
    constexpr auto FB20 = BitField<can2_t, 20, 1>{}; // bit offset: 20, bit width: 1, Filter bits
    constexpr auto FB21 = BitField<can2_t, 21, 1>{}; // bit offset: 21, bit width: 1, Filter bits
    constexpr auto FB22 = BitField<can2_t, 22, 1>{}; // bit offset: 22, bit width: 1, Filter bits
    constexpr auto FB23 = BitField<can2_t, 23, 1>{}; // bit offset: 23, bit width: 1, Filter bits
    constexpr auto FB24 = BitField<can2_t, 24, 1>{}; // bit offset: 24, bit width: 1, Filter bits
    constexpr auto FB25 = BitField<can2_t, 25, 1>{}; // bit offset: 25, bit width: 1, Filter bits
    constexpr auto FB26 = BitField<can2_t, 26, 1>{}; // bit offset: 26, bit width: 1, Filter bits
    constexpr auto FB27 = BitField<can2_t, 27, 1>{}; // bit offset: 27, bit width: 1, Filter bits
    constexpr auto FB28 = BitField<can2_t, 28, 1>{}; // bit offset: 28, bit width: 1, Filter bits
    constexpr auto FB29 = BitField<can2_t, 29, 1>{}; // bit offset: 29, bit width: 1, Filter bits
    constexpr auto FB30 = BitField<can2_t, 30, 1>{}; // bit offset: 30, bit width: 1, Filter bits
    constexpr auto FB31 = BitField<can2_t, 31, 1>{}; // bit offset: 31, bit width: 1, Filter bits
    static Register<std::uint32_t, CAN2_BASE_ADDRESS + 0x000002c0u, 0, READWRITE, decltype(FB0), decltype(FB1), decltype(FB2), decltype(FB3), decltype(FB4), decltype(FB5), decltype(FB6), decltype(FB7), decltype(FB8), decltype(FB9), decltype(FB10), decltype(FB11), decltype(FB12), decltype(FB13), decltype(FB14), decltype(FB15), decltype(FB16), decltype(FB17), decltype(FB18), decltype(FB19), decltype(FB20), decltype(FB21), decltype(FB22), decltype(FB23), decltype(FB24), decltype(FB25), decltype(FB26), decltype(FB27), decltype(FB28), decltype(FB29), decltype(FB30), decltype(FB31)> F16R1; // Filter bank 16 register 1

    constexpr auto FB0 = BitField<can2_t, 0, 1>{}; // bit offset: 0, bit width: 1, Filter bits
    constexpr auto FB1 = BitField<can2_t, 1, 1>{}; // bit offset: 1, bit width: 1, Filter bits
    constexpr auto FB2 = BitField<can2_t, 2, 1>{}; // bit offset: 2, bit width: 1, Filter bits
    constexpr auto FB3 = BitField<can2_t, 3, 1>{}; // bit offset: 3, bit width: 1, Filter bits
    constexpr auto FB4 = BitField<can2_t, 4, 1>{}; // bit offset: 4, bit width: 1, Filter bits
    constexpr auto FB5 = BitField<can2_t, 5, 1>{}; // bit offset: 5, bit width: 1, Filter bits
    constexpr auto FB6 = BitField<can2_t, 6, 1>{}; // bit offset: 6, bit width: 1, Filter bits
    constexpr auto FB7 = BitField<can2_t, 7, 1>{}; // bit offset: 7, bit width: 1, Filter bits
    constexpr auto FB8 = BitField<can2_t, 8, 1>{}; // bit offset: 8, bit width: 1, Filter bits
    constexpr auto FB9 = BitField<can2_t, 9, 1>{}; // bit offset: 9, bit width: 1, Filter bits
    constexpr auto FB10 = BitField<can2_t, 10, 1>{}; // bit offset: 10, bit width: 1, Filter bits
    constexpr auto FB11 = BitField<can2_t, 11, 1>{}; // bit offset: 11, bit width: 1, Filter bits
    constexpr auto FB12 = BitField<can2_t, 12, 1>{}; // bit offset: 12, bit width: 1, Filter bits
    constexpr auto FB13 = BitField<can2_t, 13, 1>{}; // bit offset: 13, bit width: 1, Filter bits
    constexpr auto FB14 = BitField<can2_t, 14, 1>{}; // bit offset: 14, bit width: 1, Filter bits
    constexpr auto FB15 = BitField<can2_t, 15, 1>{}; // bit offset: 15, bit width: 1, Filter bits
    constexpr auto FB16 = BitField<can2_t, 16, 1>{}; // bit offset: 16, bit width: 1, Filter bits
    constexpr auto FB17 = BitField<can2_t, 17, 1>{}; // bit offset: 17, bit width: 1, Filter bits
    constexpr auto FB18 = BitField<can2_t, 18, 1>{}; // bit offset: 18, bit width: 1, Filter bits
    constexpr auto FB19 = BitField<can2_t, 19, 1>{}; // bit offset: 19, bit width: 1, Filter bits
    constexpr auto FB20 = BitField<can2_t, 20, 1>{}; // bit offset: 20, bit width: 1, Filter bits
    constexpr auto FB21 = BitField<can2_t, 21, 1>{}; // bit offset: 21, bit width: 1, Filter bits
    constexpr auto FB22 = BitField<can2_t, 22, 1>{}; // bit offset: 22, bit width: 1, Filter bits
    constexpr auto FB23 = BitField<can2_t, 23, 1>{}; // bit offset: 23, bit width: 1, Filter bits
    constexpr auto FB24 = BitField<can2_t, 24, 1>{}; // bit offset: 24, bit width: 1, Filter bits
    constexpr auto FB25 = BitField<can2_t, 25, 1>{}; // bit offset: 25, bit width: 1, Filter bits
    constexpr auto FB26 = BitField<can2_t, 26, 1>{}; // bit offset: 26, bit width: 1, Filter bits
    constexpr auto FB27 = BitField<can2_t, 27, 1>{}; // bit offset: 27, bit width: 1, Filter bits
    constexpr auto FB28 = BitField<can2_t, 28, 1>{}; // bit offset: 28, bit width: 1, Filter bits
    constexpr auto FB29 = BitField<can2_t, 29, 1>{}; // bit offset: 29, bit width: 1, Filter bits
    constexpr auto FB30 = BitField<can2_t, 30, 1>{}; // bit offset: 30, bit width: 1, Filter bits
    constexpr auto FB31 = BitField<can2_t, 31, 1>{}; // bit offset: 31, bit width: 1, Filter bits
    static Register<std::uint32_t, CAN2_BASE_ADDRESS + 0x000002c4u, 0, READWRITE, decltype(FB0), decltype(FB1), decltype(FB2), decltype(FB3), decltype(FB4), decltype(FB5), decltype(FB6), decltype(FB7), decltype(FB8), decltype(FB9), decltype(FB10), decltype(FB11), decltype(FB12), decltype(FB13), decltype(FB14), decltype(FB15), decltype(FB16), decltype(FB17), decltype(FB18), decltype(FB19), decltype(FB20), decltype(FB21), decltype(FB22), decltype(FB23), decltype(FB24), decltype(FB25), decltype(FB26), decltype(FB27), decltype(FB28), decltype(FB29), decltype(FB30), decltype(FB31)> F16R2; // Filter bank 16 register 2

    constexpr auto FB0 = BitField<can2_t, 0, 1>{}; // bit offset: 0, bit width: 1, Filter bits
    constexpr auto FB1 = BitField<can2_t, 1, 1>{}; // bit offset: 1, bit width: 1, Filter bits
    constexpr auto FB2 = BitField<can2_t, 2, 1>{}; // bit offset: 2, bit width: 1, Filter bits
    constexpr auto FB3 = BitField<can2_t, 3, 1>{}; // bit offset: 3, bit width: 1, Filter bits
    constexpr auto FB4 = BitField<can2_t, 4, 1>{}; // bit offset: 4, bit width: 1, Filter bits
    constexpr auto FB5 = BitField<can2_t, 5, 1>{}; // bit offset: 5, bit width: 1, Filter bits
    constexpr auto FB6 = BitField<can2_t, 6, 1>{}; // bit offset: 6, bit width: 1, Filter bits
    constexpr auto FB7 = BitField<can2_t, 7, 1>{}; // bit offset: 7, bit width: 1, Filter bits
    constexpr auto FB8 = BitField<can2_t, 8, 1>{}; // bit offset: 8, bit width: 1, Filter bits
    constexpr auto FB9 = BitField<can2_t, 9, 1>{}; // bit offset: 9, bit width: 1, Filter bits
    constexpr auto FB10 = BitField<can2_t, 10, 1>{}; // bit offset: 10, bit width: 1, Filter bits
    constexpr auto FB11 = BitField<can2_t, 11, 1>{}; // bit offset: 11, bit width: 1, Filter bits
    constexpr auto FB12 = BitField<can2_t, 12, 1>{}; // bit offset: 12, bit width: 1, Filter bits
    constexpr auto FB13 = BitField<can2_t, 13, 1>{}; // bit offset: 13, bit width: 1, Filter bits
    constexpr auto FB14 = BitField<can2_t, 14, 1>{}; // bit offset: 14, bit width: 1, Filter bits
    constexpr auto FB15 = BitField<can2_t, 15, 1>{}; // bit offset: 15, bit width: 1, Filter bits
    constexpr auto FB16 = BitField<can2_t, 16, 1>{}; // bit offset: 16, bit width: 1, Filter bits
    constexpr auto FB17 = BitField<can2_t, 17, 1>{}; // bit offset: 17, bit width: 1, Filter bits
    constexpr auto FB18 = BitField<can2_t, 18, 1>{}; // bit offset: 18, bit width: 1, Filter bits
    constexpr auto FB19 = BitField<can2_t, 19, 1>{}; // bit offset: 19, bit width: 1, Filter bits
    constexpr auto FB20 = BitField<can2_t, 20, 1>{}; // bit offset: 20, bit width: 1, Filter bits
    constexpr auto FB21 = BitField<can2_t, 21, 1>{}; // bit offset: 21, bit width: 1, Filter bits
    constexpr auto FB22 = BitField<can2_t, 22, 1>{}; // bit offset: 22, bit width: 1, Filter bits
    constexpr auto FB23 = BitField<can2_t, 23, 1>{}; // bit offset: 23, bit width: 1, Filter bits
    constexpr auto FB24 = BitField<can2_t, 24, 1>{}; // bit offset: 24, bit width: 1, Filter bits
    constexpr auto FB25 = BitField<can2_t, 25, 1>{}; // bit offset: 25, bit width: 1, Filter bits
    constexpr auto FB26 = BitField<can2_t, 26, 1>{}; // bit offset: 26, bit width: 1, Filter bits
    constexpr auto FB27 = BitField<can2_t, 27, 1>{}; // bit offset: 27, bit width: 1, Filter bits
    constexpr auto FB28 = BitField<can2_t, 28, 1>{}; // bit offset: 28, bit width: 1, Filter bits
    constexpr auto FB29 = BitField<can2_t, 29, 1>{}; // bit offset: 29, bit width: 1, Filter bits
    constexpr auto FB30 = BitField<can2_t, 30, 1>{}; // bit offset: 30, bit width: 1, Filter bits
    constexpr auto FB31 = BitField<can2_t, 31, 1>{}; // bit offset: 31, bit width: 1, Filter bits
    static Register<std::uint32_t, CAN2_BASE_ADDRESS + 0x000002c8u, 0, READWRITE, decltype(FB0), decltype(FB1), decltype(FB2), decltype(FB3), decltype(FB4), decltype(FB5), decltype(FB6), decltype(FB7), decltype(FB8), decltype(FB9), decltype(FB10), decltype(FB11), decltype(FB12), decltype(FB13), decltype(FB14), decltype(FB15), decltype(FB16), decltype(FB17), decltype(FB18), decltype(FB19), decltype(FB20), decltype(FB21), decltype(FB22), decltype(FB23), decltype(FB24), decltype(FB25), decltype(FB26), decltype(FB27), decltype(FB28), decltype(FB29), decltype(FB30), decltype(FB31)> F17R1; // Filter bank 17 register 1

    constexpr auto FB0 = BitField<can2_t, 0, 1>{}; // bit offset: 0, bit width: 1, Filter bits
    constexpr auto FB1 = BitField<can2_t, 1, 1>{}; // bit offset: 1, bit width: 1, Filter bits
    constexpr auto FB2 = BitField<can2_t, 2, 1>{}; // bit offset: 2, bit width: 1, Filter bits
    constexpr auto FB3 = BitField<can2_t, 3, 1>{}; // bit offset: 3, bit width: 1, Filter bits
    constexpr auto FB4 = BitField<can2_t, 4, 1>{}; // bit offset: 4, bit width: 1, Filter bits
    constexpr auto FB5 = BitField<can2_t, 5, 1>{}; // bit offset: 5, bit width: 1, Filter bits
    constexpr auto FB6 = BitField<can2_t, 6, 1>{}; // bit offset: 6, bit width: 1, Filter bits
    constexpr auto FB7 = BitField<can2_t, 7, 1>{}; // bit offset: 7, bit width: 1, Filter bits
    constexpr auto FB8 = BitField<can2_t, 8, 1>{}; // bit offset: 8, bit width: 1, Filter bits
    constexpr auto FB9 = BitField<can2_t, 9, 1>{}; // bit offset: 9, bit width: 1, Filter bits
    constexpr auto FB10 = BitField<can2_t, 10, 1>{}; // bit offset: 10, bit width: 1, Filter bits
    constexpr auto FB11 = BitField<can2_t, 11, 1>{}; // bit offset: 11, bit width: 1, Filter bits
    constexpr auto FB12 = BitField<can2_t, 12, 1>{}; // bit offset: 12, bit width: 1, Filter bits
    constexpr auto FB13 = BitField<can2_t, 13, 1>{}; // bit offset: 13, bit width: 1, Filter bits
    constexpr auto FB14 = BitField<can2_t, 14, 1>{}; // bit offset: 14, bit width: 1, Filter bits
    constexpr auto FB15 = BitField<can2_t, 15, 1>{}; // bit offset: 15, bit width: 1, Filter bits
    constexpr auto FB16 = BitField<can2_t, 16, 1>{}; // bit offset: 16, bit width: 1, Filter bits
    constexpr auto FB17 = BitField<can2_t, 17, 1>{}; // bit offset: 17, bit width: 1, Filter bits
    constexpr auto FB18 = BitField<can2_t, 18, 1>{}; // bit offset: 18, bit width: 1, Filter bits
    constexpr auto FB19 = BitField<can2_t, 19, 1>{}; // bit offset: 19, bit width: 1, Filter bits
    constexpr auto FB20 = BitField<can2_t, 20, 1>{}; // bit offset: 20, bit width: 1, Filter bits
    constexpr auto FB21 = BitField<can2_t, 21, 1>{}; // bit offset: 21, bit width: 1, Filter bits
    constexpr auto FB22 = BitField<can2_t, 22, 1>{}; // bit offset: 22, bit width: 1, Filter bits
    constexpr auto FB23 = BitField<can2_t, 23, 1>{}; // bit offset: 23, bit width: 1, Filter bits
    constexpr auto FB24 = BitField<can2_t, 24, 1>{}; // bit offset: 24, bit width: 1, Filter bits
    constexpr auto FB25 = BitField<can2_t, 25, 1>{}; // bit offset: 25, bit width: 1, Filter bits
    constexpr auto FB26 = BitField<can2_t, 26, 1>{}; // bit offset: 26, bit width: 1, Filter bits
    constexpr auto FB27 = BitField<can2_t, 27, 1>{}; // bit offset: 27, bit width: 1, Filter bits
    constexpr auto FB28 = BitField<can2_t, 28, 1>{}; // bit offset: 28, bit width: 1, Filter bits
    constexpr auto FB29 = BitField<can2_t, 29, 1>{}; // bit offset: 29, bit width: 1, Filter bits
    constexpr auto FB30 = BitField<can2_t, 30, 1>{}; // bit offset: 30, bit width: 1, Filter bits
    constexpr auto FB31 = BitField<can2_t, 31, 1>{}; // bit offset: 31, bit width: 1, Filter bits
    static Register<std::uint32_t, CAN2_BASE_ADDRESS + 0x000002ccu, 0, READWRITE, decltype(FB0), decltype(FB1), decltype(FB2), decltype(FB3), decltype(FB4), decltype(FB5), decltype(FB6), decltype(FB7), decltype(FB8), decltype(FB9), decltype(FB10), decltype(FB11), decltype(FB12), decltype(FB13), decltype(FB14), decltype(FB15), decltype(FB16), decltype(FB17), decltype(FB18), decltype(FB19), decltype(FB20), decltype(FB21), decltype(FB22), decltype(FB23), decltype(FB24), decltype(FB25), decltype(FB26), decltype(FB27), decltype(FB28), decltype(FB29), decltype(FB30), decltype(FB31)> F17R2; // Filter bank 17 register 2

    constexpr auto FB0 = BitField<can2_t, 0, 1>{}; // bit offset: 0, bit width: 1, Filter bits
    constexpr auto FB1 = BitField<can2_t, 1, 1>{}; // bit offset: 1, bit width: 1, Filter bits
    constexpr auto FB2 = BitField<can2_t, 2, 1>{}; // bit offset: 2, bit width: 1, Filter bits
    constexpr auto FB3 = BitField<can2_t, 3, 1>{}; // bit offset: 3, bit width: 1, Filter bits
    constexpr auto FB4 = BitField<can2_t, 4, 1>{}; // bit offset: 4, bit width: 1, Filter bits
    constexpr auto FB5 = BitField<can2_t, 5, 1>{}; // bit offset: 5, bit width: 1, Filter bits
    constexpr auto FB6 = BitField<can2_t, 6, 1>{}; // bit offset: 6, bit width: 1, Filter bits
    constexpr auto FB7 = BitField<can2_t, 7, 1>{}; // bit offset: 7, bit width: 1, Filter bits
    constexpr auto FB8 = BitField<can2_t, 8, 1>{}; // bit offset: 8, bit width: 1, Filter bits
    constexpr auto FB9 = BitField<can2_t, 9, 1>{}; // bit offset: 9, bit width: 1, Filter bits
    constexpr auto FB10 = BitField<can2_t, 10, 1>{}; // bit offset: 10, bit width: 1, Filter bits
    constexpr auto FB11 = BitField<can2_t, 11, 1>{}; // bit offset: 11, bit width: 1, Filter bits
    constexpr auto FB12 = BitField<can2_t, 12, 1>{}; // bit offset: 12, bit width: 1, Filter bits
    constexpr auto FB13 = BitField<can2_t, 13, 1>{}; // bit offset: 13, bit width: 1, Filter bits
    constexpr auto FB14 = BitField<can2_t, 14, 1>{}; // bit offset: 14, bit width: 1, Filter bits
    constexpr auto FB15 = BitField<can2_t, 15, 1>{}; // bit offset: 15, bit width: 1, Filter bits
    constexpr auto FB16 = BitField<can2_t, 16, 1>{}; // bit offset: 16, bit width: 1, Filter bits
    constexpr auto FB17 = BitField<can2_t, 17, 1>{}; // bit offset: 17, bit width: 1, Filter bits
    constexpr auto FB18 = BitField<can2_t, 18, 1>{}; // bit offset: 18, bit width: 1, Filter bits
    constexpr auto FB19 = BitField<can2_t, 19, 1>{}; // bit offset: 19, bit width: 1, Filter bits
    constexpr auto FB20 = BitField<can2_t, 20, 1>{}; // bit offset: 20, bit width: 1, Filter bits
    constexpr auto FB21 = BitField<can2_t, 21, 1>{}; // bit offset: 21, bit width: 1, Filter bits
    constexpr auto FB22 = BitField<can2_t, 22, 1>{}; // bit offset: 22, bit width: 1, Filter bits
    constexpr auto FB23 = BitField<can2_t, 23, 1>{}; // bit offset: 23, bit width: 1, Filter bits
    constexpr auto FB24 = BitField<can2_t, 24, 1>{}; // bit offset: 24, bit width: 1, Filter bits
    constexpr auto FB25 = BitField<can2_t, 25, 1>{}; // bit offset: 25, bit width: 1, Filter bits
    constexpr auto FB26 = BitField<can2_t, 26, 1>{}; // bit offset: 26, bit width: 1, Filter bits
    constexpr auto FB27 = BitField<can2_t, 27, 1>{}; // bit offset: 27, bit width: 1, Filter bits
    constexpr auto FB28 = BitField<can2_t, 28, 1>{}; // bit offset: 28, bit width: 1, Filter bits
    constexpr auto FB29 = BitField<can2_t, 29, 1>{}; // bit offset: 29, bit width: 1, Filter bits
    constexpr auto FB30 = BitField<can2_t, 30, 1>{}; // bit offset: 30, bit width: 1, Filter bits
    constexpr auto FB31 = BitField<can2_t, 31, 1>{}; // bit offset: 31, bit width: 1, Filter bits
    static Register<std::uint32_t, CAN2_BASE_ADDRESS + 0x000002d0u, 0, READWRITE, decltype(FB0), decltype(FB1), decltype(FB2), decltype(FB3), decltype(FB4), decltype(FB5), decltype(FB6), decltype(FB7), decltype(FB8), decltype(FB9), decltype(FB10), decltype(FB11), decltype(FB12), decltype(FB13), decltype(FB14), decltype(FB15), decltype(FB16), decltype(FB17), decltype(FB18), decltype(FB19), decltype(FB20), decltype(FB21), decltype(FB22), decltype(FB23), decltype(FB24), decltype(FB25), decltype(FB26), decltype(FB27), decltype(FB28), decltype(FB29), decltype(FB30), decltype(FB31)> F18R1; // Filter bank 18 register 1

    constexpr auto FB0 = BitField<can2_t, 0, 1>{}; // bit offset: 0, bit width: 1, Filter bits
    constexpr auto FB1 = BitField<can2_t, 1, 1>{}; // bit offset: 1, bit width: 1, Filter bits
    constexpr auto FB2 = BitField<can2_t, 2, 1>{}; // bit offset: 2, bit width: 1, Filter bits
    constexpr auto FB3 = BitField<can2_t, 3, 1>{}; // bit offset: 3, bit width: 1, Filter bits
    constexpr auto FB4 = BitField<can2_t, 4, 1>{}; // bit offset: 4, bit width: 1, Filter bits
    constexpr auto FB5 = BitField<can2_t, 5, 1>{}; // bit offset: 5, bit width: 1, Filter bits
    constexpr auto FB6 = BitField<can2_t, 6, 1>{}; // bit offset: 6, bit width: 1, Filter bits
    constexpr auto FB7 = BitField<can2_t, 7, 1>{}; // bit offset: 7, bit width: 1, Filter bits
    constexpr auto FB8 = BitField<can2_t, 8, 1>{}; // bit offset: 8, bit width: 1, Filter bits
    constexpr auto FB9 = BitField<can2_t, 9, 1>{}; // bit offset: 9, bit width: 1, Filter bits
    constexpr auto FB10 = BitField<can2_t, 10, 1>{}; // bit offset: 10, bit width: 1, Filter bits
    constexpr auto FB11 = BitField<can2_t, 11, 1>{}; // bit offset: 11, bit width: 1, Filter bits
    constexpr auto FB12 = BitField<can2_t, 12, 1>{}; // bit offset: 12, bit width: 1, Filter bits
    constexpr auto FB13 = BitField<can2_t, 13, 1>{}; // bit offset: 13, bit width: 1, Filter bits
    constexpr auto FB14 = BitField<can2_t, 14, 1>{}; // bit offset: 14, bit width: 1, Filter bits
    constexpr auto FB15 = BitField<can2_t, 15, 1>{}; // bit offset: 15, bit width: 1, Filter bits
    constexpr auto FB16 = BitField<can2_t, 16, 1>{}; // bit offset: 16, bit width: 1, Filter bits
    constexpr auto FB17 = BitField<can2_t, 17, 1>{}; // bit offset: 17, bit width: 1, Filter bits
    constexpr auto FB18 = BitField<can2_t, 18, 1>{}; // bit offset: 18, bit width: 1, Filter bits
    constexpr auto FB19 = BitField<can2_t, 19, 1>{}; // bit offset: 19, bit width: 1, Filter bits
    constexpr auto FB20 = BitField<can2_t, 20, 1>{}; // bit offset: 20, bit width: 1, Filter bits
    constexpr auto FB21 = BitField<can2_t, 21, 1>{}; // bit offset: 21, bit width: 1, Filter bits
    constexpr auto FB22 = BitField<can2_t, 22, 1>{}; // bit offset: 22, bit width: 1, Filter bits
    constexpr auto FB23 = BitField<can2_t, 23, 1>{}; // bit offset: 23, bit width: 1, Filter bits
    constexpr auto FB24 = BitField<can2_t, 24, 1>{}; // bit offset: 24, bit width: 1, Filter bits
    constexpr auto FB25 = BitField<can2_t, 25, 1>{}; // bit offset: 25, bit width: 1, Filter bits
    constexpr auto FB26 = BitField<can2_t, 26, 1>{}; // bit offset: 26, bit width: 1, Filter bits
    constexpr auto FB27 = BitField<can2_t, 27, 1>{}; // bit offset: 27, bit width: 1, Filter bits
    constexpr auto FB28 = BitField<can2_t, 28, 1>{}; // bit offset: 28, bit width: 1, Filter bits
    constexpr auto FB29 = BitField<can2_t, 29, 1>{}; // bit offset: 29, bit width: 1, Filter bits
    constexpr auto FB30 = BitField<can2_t, 30, 1>{}; // bit offset: 30, bit width: 1, Filter bits
    constexpr auto FB31 = BitField<can2_t, 31, 1>{}; // bit offset: 31, bit width: 1, Filter bits
    static Register<std::uint32_t, CAN2_BASE_ADDRESS + 0x000002d4u, 0, READWRITE, decltype(FB0), decltype(FB1), decltype(FB2), decltype(FB3), decltype(FB4), decltype(FB5), decltype(FB6), decltype(FB7), decltype(FB8), decltype(FB9), decltype(FB10), decltype(FB11), decltype(FB12), decltype(FB13), decltype(FB14), decltype(FB15), decltype(FB16), decltype(FB17), decltype(FB18), decltype(FB19), decltype(FB20), decltype(FB21), decltype(FB22), decltype(FB23), decltype(FB24), decltype(FB25), decltype(FB26), decltype(FB27), decltype(FB28), decltype(FB29), decltype(FB30), decltype(FB31)> F18R2; // Filter bank 18 register 2

    constexpr auto FB0 = BitField<can2_t, 0, 1>{}; // bit offset: 0, bit width: 1, Filter bits
    constexpr auto FB1 = BitField<can2_t, 1, 1>{}; // bit offset: 1, bit width: 1, Filter bits
    constexpr auto FB2 = BitField<can2_t, 2, 1>{}; // bit offset: 2, bit width: 1, Filter bits
    constexpr auto FB3 = BitField<can2_t, 3, 1>{}; // bit offset: 3, bit width: 1, Filter bits
    constexpr auto FB4 = BitField<can2_t, 4, 1>{}; // bit offset: 4, bit width: 1, Filter bits
    constexpr auto FB5 = BitField<can2_t, 5, 1>{}; // bit offset: 5, bit width: 1, Filter bits
    constexpr auto FB6 = BitField<can2_t, 6, 1>{}; // bit offset: 6, bit width: 1, Filter bits
    constexpr auto FB7 = BitField<can2_t, 7, 1>{}; // bit offset: 7, bit width: 1, Filter bits
    constexpr auto FB8 = BitField<can2_t, 8, 1>{}; // bit offset: 8, bit width: 1, Filter bits
    constexpr auto FB9 = BitField<can2_t, 9, 1>{}; // bit offset: 9, bit width: 1, Filter bits
    constexpr auto FB10 = BitField<can2_t, 10, 1>{}; // bit offset: 10, bit width: 1, Filter bits
    constexpr auto FB11 = BitField<can2_t, 11, 1>{}; // bit offset: 11, bit width: 1, Filter bits
    constexpr auto FB12 = BitField<can2_t, 12, 1>{}; // bit offset: 12, bit width: 1, Filter bits
    constexpr auto FB13 = BitField<can2_t, 13, 1>{}; // bit offset: 13, bit width: 1, Filter bits
    constexpr auto FB14 = BitField<can2_t, 14, 1>{}; // bit offset: 14, bit width: 1, Filter bits
    constexpr auto FB15 = BitField<can2_t, 15, 1>{}; // bit offset: 15, bit width: 1, Filter bits
    constexpr auto FB16 = BitField<can2_t, 16, 1>{}; // bit offset: 16, bit width: 1, Filter bits
    constexpr auto FB17 = BitField<can2_t, 17, 1>{}; // bit offset: 17, bit width: 1, Filter bits
    constexpr auto FB18 = BitField<can2_t, 18, 1>{}; // bit offset: 18, bit width: 1, Filter bits
    constexpr auto FB19 = BitField<can2_t, 19, 1>{}; // bit offset: 19, bit width: 1, Filter bits
    constexpr auto FB20 = BitField<can2_t, 20, 1>{}; // bit offset: 20, bit width: 1, Filter bits
    constexpr auto FB21 = BitField<can2_t, 21, 1>{}; // bit offset: 21, bit width: 1, Filter bits
    constexpr auto FB22 = BitField<can2_t, 22, 1>{}; // bit offset: 22, bit width: 1, Filter bits
    constexpr auto FB23 = BitField<can2_t, 23, 1>{}; // bit offset: 23, bit width: 1, Filter bits
    constexpr auto FB24 = BitField<can2_t, 24, 1>{}; // bit offset: 24, bit width: 1, Filter bits
    constexpr auto FB25 = BitField<can2_t, 25, 1>{}; // bit offset: 25, bit width: 1, Filter bits
    constexpr auto FB26 = BitField<can2_t, 26, 1>{}; // bit offset: 26, bit width: 1, Filter bits
    constexpr auto FB27 = BitField<can2_t, 27, 1>{}; // bit offset: 27, bit width: 1, Filter bits
    constexpr auto FB28 = BitField<can2_t, 28, 1>{}; // bit offset: 28, bit width: 1, Filter bits
    constexpr auto FB29 = BitField<can2_t, 29, 1>{}; // bit offset: 29, bit width: 1, Filter bits
    constexpr auto FB30 = BitField<can2_t, 30, 1>{}; // bit offset: 30, bit width: 1, Filter bits
    constexpr auto FB31 = BitField<can2_t, 31, 1>{}; // bit offset: 31, bit width: 1, Filter bits
    static Register<std::uint32_t, CAN2_BASE_ADDRESS + 0x000002d8u, 0, READWRITE, decltype(FB0), decltype(FB1), decltype(FB2), decltype(FB3), decltype(FB4), decltype(FB5), decltype(FB6), decltype(FB7), decltype(FB8), decltype(FB9), decltype(FB10), decltype(FB11), decltype(FB12), decltype(FB13), decltype(FB14), decltype(FB15), decltype(FB16), decltype(FB17), decltype(FB18), decltype(FB19), decltype(FB20), decltype(FB21), decltype(FB22), decltype(FB23), decltype(FB24), decltype(FB25), decltype(FB26), decltype(FB27), decltype(FB28), decltype(FB29), decltype(FB30), decltype(FB31)> F19R1; // Filter bank 19 register 1

    constexpr auto FB0 = BitField<can2_t, 0, 1>{}; // bit offset: 0, bit width: 1, Filter bits
    constexpr auto FB1 = BitField<can2_t, 1, 1>{}; // bit offset: 1, bit width: 1, Filter bits
    constexpr auto FB2 = BitField<can2_t, 2, 1>{}; // bit offset: 2, bit width: 1, Filter bits
    constexpr auto FB3 = BitField<can2_t, 3, 1>{}; // bit offset: 3, bit width: 1, Filter bits
    constexpr auto FB4 = BitField<can2_t, 4, 1>{}; // bit offset: 4, bit width: 1, Filter bits
    constexpr auto FB5 = BitField<can2_t, 5, 1>{}; // bit offset: 5, bit width: 1, Filter bits
    constexpr auto FB6 = BitField<can2_t, 6, 1>{}; // bit offset: 6, bit width: 1, Filter bits
    constexpr auto FB7 = BitField<can2_t, 7, 1>{}; // bit offset: 7, bit width: 1, Filter bits
    constexpr auto FB8 = BitField<can2_t, 8, 1>{}; // bit offset: 8, bit width: 1, Filter bits
    constexpr auto FB9 = BitField<can2_t, 9, 1>{}; // bit offset: 9, bit width: 1, Filter bits
    constexpr auto FB10 = BitField<can2_t, 10, 1>{}; // bit offset: 10, bit width: 1, Filter bits
    constexpr auto FB11 = BitField<can2_t, 11, 1>{}; // bit offset: 11, bit width: 1, Filter bits
    constexpr auto FB12 = BitField<can2_t, 12, 1>{}; // bit offset: 12, bit width: 1, Filter bits
    constexpr auto FB13 = BitField<can2_t, 13, 1>{}; // bit offset: 13, bit width: 1, Filter bits
    constexpr auto FB14 = BitField<can2_t, 14, 1>{}; // bit offset: 14, bit width: 1, Filter bits
    constexpr auto FB15 = BitField<can2_t, 15, 1>{}; // bit offset: 15, bit width: 1, Filter bits
    constexpr auto FB16 = BitField<can2_t, 16, 1>{}; // bit offset: 16, bit width: 1, Filter bits
    constexpr auto FB17 = BitField<can2_t, 17, 1>{}; // bit offset: 17, bit width: 1, Filter bits
    constexpr auto FB18 = BitField<can2_t, 18, 1>{}; // bit offset: 18, bit width: 1, Filter bits
    constexpr auto FB19 = BitField<can2_t, 19, 1>{}; // bit offset: 19, bit width: 1, Filter bits
    constexpr auto FB20 = BitField<can2_t, 20, 1>{}; // bit offset: 20, bit width: 1, Filter bits
    constexpr auto FB21 = BitField<can2_t, 21, 1>{}; // bit offset: 21, bit width: 1, Filter bits
    constexpr auto FB22 = BitField<can2_t, 22, 1>{}; // bit offset: 22, bit width: 1, Filter bits
    constexpr auto FB23 = BitField<can2_t, 23, 1>{}; // bit offset: 23, bit width: 1, Filter bits
    constexpr auto FB24 = BitField<can2_t, 24, 1>{}; // bit offset: 24, bit width: 1, Filter bits
    constexpr auto FB25 = BitField<can2_t, 25, 1>{}; // bit offset: 25, bit width: 1, Filter bits
    constexpr auto FB26 = BitField<can2_t, 26, 1>{}; // bit offset: 26, bit width: 1, Filter bits
    constexpr auto FB27 = BitField<can2_t, 27, 1>{}; // bit offset: 27, bit width: 1, Filter bits
    constexpr auto FB28 = BitField<can2_t, 28, 1>{}; // bit offset: 28, bit width: 1, Filter bits
    constexpr auto FB29 = BitField<can2_t, 29, 1>{}; // bit offset: 29, bit width: 1, Filter bits
    constexpr auto FB30 = BitField<can2_t, 30, 1>{}; // bit offset: 30, bit width: 1, Filter bits
    constexpr auto FB31 = BitField<can2_t, 31, 1>{}; // bit offset: 31, bit width: 1, Filter bits
    static Register<std::uint32_t, CAN2_BASE_ADDRESS + 0x000002dcu, 0, READWRITE, decltype(FB0), decltype(FB1), decltype(FB2), decltype(FB3), decltype(FB4), decltype(FB5), decltype(FB6), decltype(FB7), decltype(FB8), decltype(FB9), decltype(FB10), decltype(FB11), decltype(FB12), decltype(FB13), decltype(FB14), decltype(FB15), decltype(FB16), decltype(FB17), decltype(FB18), decltype(FB19), decltype(FB20), decltype(FB21), decltype(FB22), decltype(FB23), decltype(FB24), decltype(FB25), decltype(FB26), decltype(FB27), decltype(FB28), decltype(FB29), decltype(FB30), decltype(FB31)> F19R2; // Filter bank 19 register 2

    constexpr auto FB0 = BitField<can2_t, 0, 1>{}; // bit offset: 0, bit width: 1, Filter bits
    constexpr auto FB1 = BitField<can2_t, 1, 1>{}; // bit offset: 1, bit width: 1, Filter bits
    constexpr auto FB2 = BitField<can2_t, 2, 1>{}; // bit offset: 2, bit width: 1, Filter bits
    constexpr auto FB3 = BitField<can2_t, 3, 1>{}; // bit offset: 3, bit width: 1, Filter bits
    constexpr auto FB4 = BitField<can2_t, 4, 1>{}; // bit offset: 4, bit width: 1, Filter bits
    constexpr auto FB5 = BitField<can2_t, 5, 1>{}; // bit offset: 5, bit width: 1, Filter bits
    constexpr auto FB6 = BitField<can2_t, 6, 1>{}; // bit offset: 6, bit width: 1, Filter bits
    constexpr auto FB7 = BitField<can2_t, 7, 1>{}; // bit offset: 7, bit width: 1, Filter bits
    constexpr auto FB8 = BitField<can2_t, 8, 1>{}; // bit offset: 8, bit width: 1, Filter bits
    constexpr auto FB9 = BitField<can2_t, 9, 1>{}; // bit offset: 9, bit width: 1, Filter bits
    constexpr auto FB10 = BitField<can2_t, 10, 1>{}; // bit offset: 10, bit width: 1, Filter bits
    constexpr auto FB11 = BitField<can2_t, 11, 1>{}; // bit offset: 11, bit width: 1, Filter bits
    constexpr auto FB12 = BitField<can2_t, 12, 1>{}; // bit offset: 12, bit width: 1, Filter bits
    constexpr auto FB13 = BitField<can2_t, 13, 1>{}; // bit offset: 13, bit width: 1, Filter bits
    constexpr auto FB14 = BitField<can2_t, 14, 1>{}; // bit offset: 14, bit width: 1, Filter bits
    constexpr auto FB15 = BitField<can2_t, 15, 1>{}; // bit offset: 15, bit width: 1, Filter bits
    constexpr auto FB16 = BitField<can2_t, 16, 1>{}; // bit offset: 16, bit width: 1, Filter bits
    constexpr auto FB17 = BitField<can2_t, 17, 1>{}; // bit offset: 17, bit width: 1, Filter bits
    constexpr auto FB18 = BitField<can2_t, 18, 1>{}; // bit offset: 18, bit width: 1, Filter bits
    constexpr auto FB19 = BitField<can2_t, 19, 1>{}; // bit offset: 19, bit width: 1, Filter bits
    constexpr auto FB20 = BitField<can2_t, 20, 1>{}; // bit offset: 20, bit width: 1, Filter bits
    constexpr auto FB21 = BitField<can2_t, 21, 1>{}; // bit offset: 21, bit width: 1, Filter bits
    constexpr auto FB22 = BitField<can2_t, 22, 1>{}; // bit offset: 22, bit width: 1, Filter bits
    constexpr auto FB23 = BitField<can2_t, 23, 1>{}; // bit offset: 23, bit width: 1, Filter bits
    constexpr auto FB24 = BitField<can2_t, 24, 1>{}; // bit offset: 24, bit width: 1, Filter bits
    constexpr auto FB25 = BitField<can2_t, 25, 1>{}; // bit offset: 25, bit width: 1, Filter bits
    constexpr auto FB26 = BitField<can2_t, 26, 1>{}; // bit offset: 26, bit width: 1, Filter bits
    constexpr auto FB27 = BitField<can2_t, 27, 1>{}; // bit offset: 27, bit width: 1, Filter bits
    constexpr auto FB28 = BitField<can2_t, 28, 1>{}; // bit offset: 28, bit width: 1, Filter bits
    constexpr auto FB29 = BitField<can2_t, 29, 1>{}; // bit offset: 29, bit width: 1, Filter bits
    constexpr auto FB30 = BitField<can2_t, 30, 1>{}; // bit offset: 30, bit width: 1, Filter bits
    constexpr auto FB31 = BitField<can2_t, 31, 1>{}; // bit offset: 31, bit width: 1, Filter bits
    static Register<std::uint32_t, CAN2_BASE_ADDRESS + 0x000002e0u, 0, READWRITE, decltype(FB0), decltype(FB1), decltype(FB2), decltype(FB3), decltype(FB4), decltype(FB5), decltype(FB6), decltype(FB7), decltype(FB8), decltype(FB9), decltype(FB10), decltype(FB11), decltype(FB12), decltype(FB13), decltype(FB14), decltype(FB15), decltype(FB16), decltype(FB17), decltype(FB18), decltype(FB19), decltype(FB20), decltype(FB21), decltype(FB22), decltype(FB23), decltype(FB24), decltype(FB25), decltype(FB26), decltype(FB27), decltype(FB28), decltype(FB29), decltype(FB30), decltype(FB31)> F20R1; // Filter bank 20 register 1

    constexpr auto FB0 = BitField<can2_t, 0, 1>{}; // bit offset: 0, bit width: 1, Filter bits
    constexpr auto FB1 = BitField<can2_t, 1, 1>{}; // bit offset: 1, bit width: 1, Filter bits
    constexpr auto FB2 = BitField<can2_t, 2, 1>{}; // bit offset: 2, bit width: 1, Filter bits
    constexpr auto FB3 = BitField<can2_t, 3, 1>{}; // bit offset: 3, bit width: 1, Filter bits
    constexpr auto FB4 = BitField<can2_t, 4, 1>{}; // bit offset: 4, bit width: 1, Filter bits
    constexpr auto FB5 = BitField<can2_t, 5, 1>{}; // bit offset: 5, bit width: 1, Filter bits
    constexpr auto FB6 = BitField<can2_t, 6, 1>{}; // bit offset: 6, bit width: 1, Filter bits
    constexpr auto FB7 = BitField<can2_t, 7, 1>{}; // bit offset: 7, bit width: 1, Filter bits
    constexpr auto FB8 = BitField<can2_t, 8, 1>{}; // bit offset: 8, bit width: 1, Filter bits
    constexpr auto FB9 = BitField<can2_t, 9, 1>{}; // bit offset: 9, bit width: 1, Filter bits
    constexpr auto FB10 = BitField<can2_t, 10, 1>{}; // bit offset: 10, bit width: 1, Filter bits
    constexpr auto FB11 = BitField<can2_t, 11, 1>{}; // bit offset: 11, bit width: 1, Filter bits
    constexpr auto FB12 = BitField<can2_t, 12, 1>{}; // bit offset: 12, bit width: 1, Filter bits
    constexpr auto FB13 = BitField<can2_t, 13, 1>{}; // bit offset: 13, bit width: 1, Filter bits
    constexpr auto FB14 = BitField<can2_t, 14, 1>{}; // bit offset: 14, bit width: 1, Filter bits
    constexpr auto FB15 = BitField<can2_t, 15, 1>{}; // bit offset: 15, bit width: 1, Filter bits
    constexpr auto FB16 = BitField<can2_t, 16, 1>{}; // bit offset: 16, bit width: 1, Filter bits
    constexpr auto FB17 = BitField<can2_t, 17, 1>{}; // bit offset: 17, bit width: 1, Filter bits
    constexpr auto FB18 = BitField<can2_t, 18, 1>{}; // bit offset: 18, bit width: 1, Filter bits
    constexpr auto FB19 = BitField<can2_t, 19, 1>{}; // bit offset: 19, bit width: 1, Filter bits
    constexpr auto FB20 = BitField<can2_t, 20, 1>{}; // bit offset: 20, bit width: 1, Filter bits
    constexpr auto FB21 = BitField<can2_t, 21, 1>{}; // bit offset: 21, bit width: 1, Filter bits
    constexpr auto FB22 = BitField<can2_t, 22, 1>{}; // bit offset: 22, bit width: 1, Filter bits
    constexpr auto FB23 = BitField<can2_t, 23, 1>{}; // bit offset: 23, bit width: 1, Filter bits
    constexpr auto FB24 = BitField<can2_t, 24, 1>{}; // bit offset: 24, bit width: 1, Filter bits
    constexpr auto FB25 = BitField<can2_t, 25, 1>{}; // bit offset: 25, bit width: 1, Filter bits
    constexpr auto FB26 = BitField<can2_t, 26, 1>{}; // bit offset: 26, bit width: 1, Filter bits
    constexpr auto FB27 = BitField<can2_t, 27, 1>{}; // bit offset: 27, bit width: 1, Filter bits
    constexpr auto FB28 = BitField<can2_t, 28, 1>{}; // bit offset: 28, bit width: 1, Filter bits
    constexpr auto FB29 = BitField<can2_t, 29, 1>{}; // bit offset: 29, bit width: 1, Filter bits
    constexpr auto FB30 = BitField<can2_t, 30, 1>{}; // bit offset: 30, bit width: 1, Filter bits
    constexpr auto FB31 = BitField<can2_t, 31, 1>{}; // bit offset: 31, bit width: 1, Filter bits
    static Register<std::uint32_t, CAN2_BASE_ADDRESS + 0x000002e4u, 0, READWRITE, decltype(FB0), decltype(FB1), decltype(FB2), decltype(FB3), decltype(FB4), decltype(FB5), decltype(FB6), decltype(FB7), decltype(FB8), decltype(FB9), decltype(FB10), decltype(FB11), decltype(FB12), decltype(FB13), decltype(FB14), decltype(FB15), decltype(FB16), decltype(FB17), decltype(FB18), decltype(FB19), decltype(FB20), decltype(FB21), decltype(FB22), decltype(FB23), decltype(FB24), decltype(FB25), decltype(FB26), decltype(FB27), decltype(FB28), decltype(FB29), decltype(FB30), decltype(FB31)> F20R2; // Filter bank 20 register 2

    constexpr auto FB0 = BitField<can2_t, 0, 1>{}; // bit offset: 0, bit width: 1, Filter bits
    constexpr auto FB1 = BitField<can2_t, 1, 1>{}; // bit offset: 1, bit width: 1, Filter bits
    constexpr auto FB2 = BitField<can2_t, 2, 1>{}; // bit offset: 2, bit width: 1, Filter bits
    constexpr auto FB3 = BitField<can2_t, 3, 1>{}; // bit offset: 3, bit width: 1, Filter bits
    constexpr auto FB4 = BitField<can2_t, 4, 1>{}; // bit offset: 4, bit width: 1, Filter bits
    constexpr auto FB5 = BitField<can2_t, 5, 1>{}; // bit offset: 5, bit width: 1, Filter bits
    constexpr auto FB6 = BitField<can2_t, 6, 1>{}; // bit offset: 6, bit width: 1, Filter bits
    constexpr auto FB7 = BitField<can2_t, 7, 1>{}; // bit offset: 7, bit width: 1, Filter bits
    constexpr auto FB8 = BitField<can2_t, 8, 1>{}; // bit offset: 8, bit width: 1, Filter bits
    constexpr auto FB9 = BitField<can2_t, 9, 1>{}; // bit offset: 9, bit width: 1, Filter bits
    constexpr auto FB10 = BitField<can2_t, 10, 1>{}; // bit offset: 10, bit width: 1, Filter bits
    constexpr auto FB11 = BitField<can2_t, 11, 1>{}; // bit offset: 11, bit width: 1, Filter bits
    constexpr auto FB12 = BitField<can2_t, 12, 1>{}; // bit offset: 12, bit width: 1, Filter bits
    constexpr auto FB13 = BitField<can2_t, 13, 1>{}; // bit offset: 13, bit width: 1, Filter bits
    constexpr auto FB14 = BitField<can2_t, 14, 1>{}; // bit offset: 14, bit width: 1, Filter bits
    constexpr auto FB15 = BitField<can2_t, 15, 1>{}; // bit offset: 15, bit width: 1, Filter bits
    constexpr auto FB16 = BitField<can2_t, 16, 1>{}; // bit offset: 16, bit width: 1, Filter bits
    constexpr auto FB17 = BitField<can2_t, 17, 1>{}; // bit offset: 17, bit width: 1, Filter bits
    constexpr auto FB18 = BitField<can2_t, 18, 1>{}; // bit offset: 18, bit width: 1, Filter bits
    constexpr auto FB19 = BitField<can2_t, 19, 1>{}; // bit offset: 19, bit width: 1, Filter bits
    constexpr auto FB20 = BitField<can2_t, 20, 1>{}; // bit offset: 20, bit width: 1, Filter bits
    constexpr auto FB21 = BitField<can2_t, 21, 1>{}; // bit offset: 21, bit width: 1, Filter bits
    constexpr auto FB22 = BitField<can2_t, 22, 1>{}; // bit offset: 22, bit width: 1, Filter bits
    constexpr auto FB23 = BitField<can2_t, 23, 1>{}; // bit offset: 23, bit width: 1, Filter bits
    constexpr auto FB24 = BitField<can2_t, 24, 1>{}; // bit offset: 24, bit width: 1, Filter bits
    constexpr auto FB25 = BitField<can2_t, 25, 1>{}; // bit offset: 25, bit width: 1, Filter bits
    constexpr auto FB26 = BitField<can2_t, 26, 1>{}; // bit offset: 26, bit width: 1, Filter bits
    constexpr auto FB27 = BitField<can2_t, 27, 1>{}; // bit offset: 27, bit width: 1, Filter bits
    constexpr auto FB28 = BitField<can2_t, 28, 1>{}; // bit offset: 28, bit width: 1, Filter bits
    constexpr auto FB29 = BitField<can2_t, 29, 1>{}; // bit offset: 29, bit width: 1, Filter bits
    constexpr auto FB30 = BitField<can2_t, 30, 1>{}; // bit offset: 30, bit width: 1, Filter bits
    constexpr auto FB31 = BitField<can2_t, 31, 1>{}; // bit offset: 31, bit width: 1, Filter bits
    static Register<std::uint32_t, CAN2_BASE_ADDRESS + 0x000002e8u, 0, READWRITE, decltype(FB0), decltype(FB1), decltype(FB2), decltype(FB3), decltype(FB4), decltype(FB5), decltype(FB6), decltype(FB7), decltype(FB8), decltype(FB9), decltype(FB10), decltype(FB11), decltype(FB12), decltype(FB13), decltype(FB14), decltype(FB15), decltype(FB16), decltype(FB17), decltype(FB18), decltype(FB19), decltype(FB20), decltype(FB21), decltype(FB22), decltype(FB23), decltype(FB24), decltype(FB25), decltype(FB26), decltype(FB27), decltype(FB28), decltype(FB29), decltype(FB30), decltype(FB31)> F21R1; // Filter bank 21 register 1

    constexpr auto FB0 = BitField<can2_t, 0, 1>{}; // bit offset: 0, bit width: 1, Filter bits
    constexpr auto FB1 = BitField<can2_t, 1, 1>{}; // bit offset: 1, bit width: 1, Filter bits
    constexpr auto FB2 = BitField<can2_t, 2, 1>{}; // bit offset: 2, bit width: 1, Filter bits
    constexpr auto FB3 = BitField<can2_t, 3, 1>{}; // bit offset: 3, bit width: 1, Filter bits
    constexpr auto FB4 = BitField<can2_t, 4, 1>{}; // bit offset: 4, bit width: 1, Filter bits
    constexpr auto FB5 = BitField<can2_t, 5, 1>{}; // bit offset: 5, bit width: 1, Filter bits
    constexpr auto FB6 = BitField<can2_t, 6, 1>{}; // bit offset: 6, bit width: 1, Filter bits
    constexpr auto FB7 = BitField<can2_t, 7, 1>{}; // bit offset: 7, bit width: 1, Filter bits
    constexpr auto FB8 = BitField<can2_t, 8, 1>{}; // bit offset: 8, bit width: 1, Filter bits
    constexpr auto FB9 = BitField<can2_t, 9, 1>{}; // bit offset: 9, bit width: 1, Filter bits
    constexpr auto FB10 = BitField<can2_t, 10, 1>{}; // bit offset: 10, bit width: 1, Filter bits
    constexpr auto FB11 = BitField<can2_t, 11, 1>{}; // bit offset: 11, bit width: 1, Filter bits
    constexpr auto FB12 = BitField<can2_t, 12, 1>{}; // bit offset: 12, bit width: 1, Filter bits
    constexpr auto FB13 = BitField<can2_t, 13, 1>{}; // bit offset: 13, bit width: 1, Filter bits
    constexpr auto FB14 = BitField<can2_t, 14, 1>{}; // bit offset: 14, bit width: 1, Filter bits
    constexpr auto FB15 = BitField<can2_t, 15, 1>{}; // bit offset: 15, bit width: 1, Filter bits
    constexpr auto FB16 = BitField<can2_t, 16, 1>{}; // bit offset: 16, bit width: 1, Filter bits
    constexpr auto FB17 = BitField<can2_t, 17, 1>{}; // bit offset: 17, bit width: 1, Filter bits
    constexpr auto FB18 = BitField<can2_t, 18, 1>{}; // bit offset: 18, bit width: 1, Filter bits
    constexpr auto FB19 = BitField<can2_t, 19, 1>{}; // bit offset: 19, bit width: 1, Filter bits
    constexpr auto FB20 = BitField<can2_t, 20, 1>{}; // bit offset: 20, bit width: 1, Filter bits
    constexpr auto FB21 = BitField<can2_t, 21, 1>{}; // bit offset: 21, bit width: 1, Filter bits
    constexpr auto FB22 = BitField<can2_t, 22, 1>{}; // bit offset: 22, bit width: 1, Filter bits
    constexpr auto FB23 = BitField<can2_t, 23, 1>{}; // bit offset: 23, bit width: 1, Filter bits
    constexpr auto FB24 = BitField<can2_t, 24, 1>{}; // bit offset: 24, bit width: 1, Filter bits
    constexpr auto FB25 = BitField<can2_t, 25, 1>{}; // bit offset: 25, bit width: 1, Filter bits
    constexpr auto FB26 = BitField<can2_t, 26, 1>{}; // bit offset: 26, bit width: 1, Filter bits
    constexpr auto FB27 = BitField<can2_t, 27, 1>{}; // bit offset: 27, bit width: 1, Filter bits
    constexpr auto FB28 = BitField<can2_t, 28, 1>{}; // bit offset: 28, bit width: 1, Filter bits
    constexpr auto FB29 = BitField<can2_t, 29, 1>{}; // bit offset: 29, bit width: 1, Filter bits
    constexpr auto FB30 = BitField<can2_t, 30, 1>{}; // bit offset: 30, bit width: 1, Filter bits
    constexpr auto FB31 = BitField<can2_t, 31, 1>{}; // bit offset: 31, bit width: 1, Filter bits
    static Register<std::uint32_t, CAN2_BASE_ADDRESS + 0x000002ecu, 0, READWRITE, decltype(FB0), decltype(FB1), decltype(FB2), decltype(FB3), decltype(FB4), decltype(FB5), decltype(FB6), decltype(FB7), decltype(FB8), decltype(FB9), decltype(FB10), decltype(FB11), decltype(FB12), decltype(FB13), decltype(FB14), decltype(FB15), decltype(FB16), decltype(FB17), decltype(FB18), decltype(FB19), decltype(FB20), decltype(FB21), decltype(FB22), decltype(FB23), decltype(FB24), decltype(FB25), decltype(FB26), decltype(FB27), decltype(FB28), decltype(FB29), decltype(FB30), decltype(FB31)> F21R2; // Filter bank 21 register 2

    constexpr auto FB0 = BitField<can2_t, 0, 1>{}; // bit offset: 0, bit width: 1, Filter bits
    constexpr auto FB1 = BitField<can2_t, 1, 1>{}; // bit offset: 1, bit width: 1, Filter bits
    constexpr auto FB2 = BitField<can2_t, 2, 1>{}; // bit offset: 2, bit width: 1, Filter bits
    constexpr auto FB3 = BitField<can2_t, 3, 1>{}; // bit offset: 3, bit width: 1, Filter bits
    constexpr auto FB4 = BitField<can2_t, 4, 1>{}; // bit offset: 4, bit width: 1, Filter bits
    constexpr auto FB5 = BitField<can2_t, 5, 1>{}; // bit offset: 5, bit width: 1, Filter bits
    constexpr auto FB6 = BitField<can2_t, 6, 1>{}; // bit offset: 6, bit width: 1, Filter bits
    constexpr auto FB7 = BitField<can2_t, 7, 1>{}; // bit offset: 7, bit width: 1, Filter bits
    constexpr auto FB8 = BitField<can2_t, 8, 1>{}; // bit offset: 8, bit width: 1, Filter bits
    constexpr auto FB9 = BitField<can2_t, 9, 1>{}; // bit offset: 9, bit width: 1, Filter bits
    constexpr auto FB10 = BitField<can2_t, 10, 1>{}; // bit offset: 10, bit width: 1, Filter bits
    constexpr auto FB11 = BitField<can2_t, 11, 1>{}; // bit offset: 11, bit width: 1, Filter bits
    constexpr auto FB12 = BitField<can2_t, 12, 1>{}; // bit offset: 12, bit width: 1, Filter bits
    constexpr auto FB13 = BitField<can2_t, 13, 1>{}; // bit offset: 13, bit width: 1, Filter bits
    constexpr auto FB14 = BitField<can2_t, 14, 1>{}; // bit offset: 14, bit width: 1, Filter bits
    constexpr auto FB15 = BitField<can2_t, 15, 1>{}; // bit offset: 15, bit width: 1, Filter bits
    constexpr auto FB16 = BitField<can2_t, 16, 1>{}; // bit offset: 16, bit width: 1, Filter bits
    constexpr auto FB17 = BitField<can2_t, 17, 1>{}; // bit offset: 17, bit width: 1, Filter bits
    constexpr auto FB18 = BitField<can2_t, 18, 1>{}; // bit offset: 18, bit width: 1, Filter bits
    constexpr auto FB19 = BitField<can2_t, 19, 1>{}; // bit offset: 19, bit width: 1, Filter bits
    constexpr auto FB20 = BitField<can2_t, 20, 1>{}; // bit offset: 20, bit width: 1, Filter bits
    constexpr auto FB21 = BitField<can2_t, 21, 1>{}; // bit offset: 21, bit width: 1, Filter bits
    constexpr auto FB22 = BitField<can2_t, 22, 1>{}; // bit offset: 22, bit width: 1, Filter bits
    constexpr auto FB23 = BitField<can2_t, 23, 1>{}; // bit offset: 23, bit width: 1, Filter bits
    constexpr auto FB24 = BitField<can2_t, 24, 1>{}; // bit offset: 24, bit width: 1, Filter bits
    constexpr auto FB25 = BitField<can2_t, 25, 1>{}; // bit offset: 25, bit width: 1, Filter bits
    constexpr auto FB26 = BitField<can2_t, 26, 1>{}; // bit offset: 26, bit width: 1, Filter bits
    constexpr auto FB27 = BitField<can2_t, 27, 1>{}; // bit offset: 27, bit width: 1, Filter bits
    constexpr auto FB28 = BitField<can2_t, 28, 1>{}; // bit offset: 28, bit width: 1, Filter bits
    constexpr auto FB29 = BitField<can2_t, 29, 1>{}; // bit offset: 29, bit width: 1, Filter bits
    constexpr auto FB30 = BitField<can2_t, 30, 1>{}; // bit offset: 30, bit width: 1, Filter bits
    constexpr auto FB31 = BitField<can2_t, 31, 1>{}; // bit offset: 31, bit width: 1, Filter bits
    static Register<std::uint32_t, CAN2_BASE_ADDRESS + 0x000002f0u, 0, READWRITE, decltype(FB0), decltype(FB1), decltype(FB2), decltype(FB3), decltype(FB4), decltype(FB5), decltype(FB6), decltype(FB7), decltype(FB8), decltype(FB9), decltype(FB10), decltype(FB11), decltype(FB12), decltype(FB13), decltype(FB14), decltype(FB15), decltype(FB16), decltype(FB17), decltype(FB18), decltype(FB19), decltype(FB20), decltype(FB21), decltype(FB22), decltype(FB23), decltype(FB24), decltype(FB25), decltype(FB26), decltype(FB27), decltype(FB28), decltype(FB29), decltype(FB30), decltype(FB31)> F22R1; // Filter bank 22 register 1

    constexpr auto FB0 = BitField<can2_t, 0, 1>{}; // bit offset: 0, bit width: 1, Filter bits
    constexpr auto FB1 = BitField<can2_t, 1, 1>{}; // bit offset: 1, bit width: 1, Filter bits
    constexpr auto FB2 = BitField<can2_t, 2, 1>{}; // bit offset: 2, bit width: 1, Filter bits
    constexpr auto FB3 = BitField<can2_t, 3, 1>{}; // bit offset: 3, bit width: 1, Filter bits
    constexpr auto FB4 = BitField<can2_t, 4, 1>{}; // bit offset: 4, bit width: 1, Filter bits
    constexpr auto FB5 = BitField<can2_t, 5, 1>{}; // bit offset: 5, bit width: 1, Filter bits
    constexpr auto FB6 = BitField<can2_t, 6, 1>{}; // bit offset: 6, bit width: 1, Filter bits
    constexpr auto FB7 = BitField<can2_t, 7, 1>{}; // bit offset: 7, bit width: 1, Filter bits
    constexpr auto FB8 = BitField<can2_t, 8, 1>{}; // bit offset: 8, bit width: 1, Filter bits
    constexpr auto FB9 = BitField<can2_t, 9, 1>{}; // bit offset: 9, bit width: 1, Filter bits
    constexpr auto FB10 = BitField<can2_t, 10, 1>{}; // bit offset: 10, bit width: 1, Filter bits
    constexpr auto FB11 = BitField<can2_t, 11, 1>{}; // bit offset: 11, bit width: 1, Filter bits
    constexpr auto FB12 = BitField<can2_t, 12, 1>{}; // bit offset: 12, bit width: 1, Filter bits
    constexpr auto FB13 = BitField<can2_t, 13, 1>{}; // bit offset: 13, bit width: 1, Filter bits
    constexpr auto FB14 = BitField<can2_t, 14, 1>{}; // bit offset: 14, bit width: 1, Filter bits
    constexpr auto FB15 = BitField<can2_t, 15, 1>{}; // bit offset: 15, bit width: 1, Filter bits
    constexpr auto FB16 = BitField<can2_t, 16, 1>{}; // bit offset: 16, bit width: 1, Filter bits
    constexpr auto FB17 = BitField<can2_t, 17, 1>{}; // bit offset: 17, bit width: 1, Filter bits
    constexpr auto FB18 = BitField<can2_t, 18, 1>{}; // bit offset: 18, bit width: 1, Filter bits
    constexpr auto FB19 = BitField<can2_t, 19, 1>{}; // bit offset: 19, bit width: 1, Filter bits
    constexpr auto FB20 = BitField<can2_t, 20, 1>{}; // bit offset: 20, bit width: 1, Filter bits
    constexpr auto FB21 = BitField<can2_t, 21, 1>{}; // bit offset: 21, bit width: 1, Filter bits
    constexpr auto FB22 = BitField<can2_t, 22, 1>{}; // bit offset: 22, bit width: 1, Filter bits
    constexpr auto FB23 = BitField<can2_t, 23, 1>{}; // bit offset: 23, bit width: 1, Filter bits
    constexpr auto FB24 = BitField<can2_t, 24, 1>{}; // bit offset: 24, bit width: 1, Filter bits
    constexpr auto FB25 = BitField<can2_t, 25, 1>{}; // bit offset: 25, bit width: 1, Filter bits
    constexpr auto FB26 = BitField<can2_t, 26, 1>{}; // bit offset: 26, bit width: 1, Filter bits
    constexpr auto FB27 = BitField<can2_t, 27, 1>{}; // bit offset: 27, bit width: 1, Filter bits
    constexpr auto FB28 = BitField<can2_t, 28, 1>{}; // bit offset: 28, bit width: 1, Filter bits
    constexpr auto FB29 = BitField<can2_t, 29, 1>{}; // bit offset: 29, bit width: 1, Filter bits
    constexpr auto FB30 = BitField<can2_t, 30, 1>{}; // bit offset: 30, bit width: 1, Filter bits
    constexpr auto FB31 = BitField<can2_t, 31, 1>{}; // bit offset: 31, bit width: 1, Filter bits
    static Register<std::uint32_t, CAN2_BASE_ADDRESS + 0x000002f4u, 0, READWRITE, decltype(FB0), decltype(FB1), decltype(FB2), decltype(FB3), decltype(FB4), decltype(FB5), decltype(FB6), decltype(FB7), decltype(FB8), decltype(FB9), decltype(FB10), decltype(FB11), decltype(FB12), decltype(FB13), decltype(FB14), decltype(FB15), decltype(FB16), decltype(FB17), decltype(FB18), decltype(FB19), decltype(FB20), decltype(FB21), decltype(FB22), decltype(FB23), decltype(FB24), decltype(FB25), decltype(FB26), decltype(FB27), decltype(FB28), decltype(FB29), decltype(FB30), decltype(FB31)> F22R2; // Filter bank 22 register 2

    constexpr auto FB0 = BitField<can2_t, 0, 1>{}; // bit offset: 0, bit width: 1, Filter bits
    constexpr auto FB1 = BitField<can2_t, 1, 1>{}; // bit offset: 1, bit width: 1, Filter bits
    constexpr auto FB2 = BitField<can2_t, 2, 1>{}; // bit offset: 2, bit width: 1, Filter bits
    constexpr auto FB3 = BitField<can2_t, 3, 1>{}; // bit offset: 3, bit width: 1, Filter bits
    constexpr auto FB4 = BitField<can2_t, 4, 1>{}; // bit offset: 4, bit width: 1, Filter bits
    constexpr auto FB5 = BitField<can2_t, 5, 1>{}; // bit offset: 5, bit width: 1, Filter bits
    constexpr auto FB6 = BitField<can2_t, 6, 1>{}; // bit offset: 6, bit width: 1, Filter bits
    constexpr auto FB7 = BitField<can2_t, 7, 1>{}; // bit offset: 7, bit width: 1, Filter bits
    constexpr auto FB8 = BitField<can2_t, 8, 1>{}; // bit offset: 8, bit width: 1, Filter bits
    constexpr auto FB9 = BitField<can2_t, 9, 1>{}; // bit offset: 9, bit width: 1, Filter bits
    constexpr auto FB10 = BitField<can2_t, 10, 1>{}; // bit offset: 10, bit width: 1, Filter bits
    constexpr auto FB11 = BitField<can2_t, 11, 1>{}; // bit offset: 11, bit width: 1, Filter bits
    constexpr auto FB12 = BitField<can2_t, 12, 1>{}; // bit offset: 12, bit width: 1, Filter bits
    constexpr auto FB13 = BitField<can2_t, 13, 1>{}; // bit offset: 13, bit width: 1, Filter bits
    constexpr auto FB14 = BitField<can2_t, 14, 1>{}; // bit offset: 14, bit width: 1, Filter bits
    constexpr auto FB15 = BitField<can2_t, 15, 1>{}; // bit offset: 15, bit width: 1, Filter bits
    constexpr auto FB16 = BitField<can2_t, 16, 1>{}; // bit offset: 16, bit width: 1, Filter bits
    constexpr auto FB17 = BitField<can2_t, 17, 1>{}; // bit offset: 17, bit width: 1, Filter bits
    constexpr auto FB18 = BitField<can2_t, 18, 1>{}; // bit offset: 18, bit width: 1, Filter bits
    constexpr auto FB19 = BitField<can2_t, 19, 1>{}; // bit offset: 19, bit width: 1, Filter bits
    constexpr auto FB20 = BitField<can2_t, 20, 1>{}; // bit offset: 20, bit width: 1, Filter bits
    constexpr auto FB21 = BitField<can2_t, 21, 1>{}; // bit offset: 21, bit width: 1, Filter bits
    constexpr auto FB22 = BitField<can2_t, 22, 1>{}; // bit offset: 22, bit width: 1, Filter bits
    constexpr auto FB23 = BitField<can2_t, 23, 1>{}; // bit offset: 23, bit width: 1, Filter bits
    constexpr auto FB24 = BitField<can2_t, 24, 1>{}; // bit offset: 24, bit width: 1, Filter bits
    constexpr auto FB25 = BitField<can2_t, 25, 1>{}; // bit offset: 25, bit width: 1, Filter bits
    constexpr auto FB26 = BitField<can2_t, 26, 1>{}; // bit offset: 26, bit width: 1, Filter bits
    constexpr auto FB27 = BitField<can2_t, 27, 1>{}; // bit offset: 27, bit width: 1, Filter bits
    constexpr auto FB28 = BitField<can2_t, 28, 1>{}; // bit offset: 28, bit width: 1, Filter bits
    constexpr auto FB29 = BitField<can2_t, 29, 1>{}; // bit offset: 29, bit width: 1, Filter bits
    constexpr auto FB30 = BitField<can2_t, 30, 1>{}; // bit offset: 30, bit width: 1, Filter bits
    constexpr auto FB31 = BitField<can2_t, 31, 1>{}; // bit offset: 31, bit width: 1, Filter bits
    static Register<std::uint32_t, CAN2_BASE_ADDRESS + 0x000002f8u, 0, READWRITE, decltype(FB0), decltype(FB1), decltype(FB2), decltype(FB3), decltype(FB4), decltype(FB5), decltype(FB6), decltype(FB7), decltype(FB8), decltype(FB9), decltype(FB10), decltype(FB11), decltype(FB12), decltype(FB13), decltype(FB14), decltype(FB15), decltype(FB16), decltype(FB17), decltype(FB18), decltype(FB19), decltype(FB20), decltype(FB21), decltype(FB22), decltype(FB23), decltype(FB24), decltype(FB25), decltype(FB26), decltype(FB27), decltype(FB28), decltype(FB29), decltype(FB30), decltype(FB31)> F23R1; // Filter bank 23 register 1

    constexpr auto FB0 = BitField<can2_t, 0, 1>{}; // bit offset: 0, bit width: 1, Filter bits
    constexpr auto FB1 = BitField<can2_t, 1, 1>{}; // bit offset: 1, bit width: 1, Filter bits
    constexpr auto FB2 = BitField<can2_t, 2, 1>{}; // bit offset: 2, bit width: 1, Filter bits
    constexpr auto FB3 = BitField<can2_t, 3, 1>{}; // bit offset: 3, bit width: 1, Filter bits
    constexpr auto FB4 = BitField<can2_t, 4, 1>{}; // bit offset: 4, bit width: 1, Filter bits
    constexpr auto FB5 = BitField<can2_t, 5, 1>{}; // bit offset: 5, bit width: 1, Filter bits
    constexpr auto FB6 = BitField<can2_t, 6, 1>{}; // bit offset: 6, bit width: 1, Filter bits
    constexpr auto FB7 = BitField<can2_t, 7, 1>{}; // bit offset: 7, bit width: 1, Filter bits
    constexpr auto FB8 = BitField<can2_t, 8, 1>{}; // bit offset: 8, bit width: 1, Filter bits
    constexpr auto FB9 = BitField<can2_t, 9, 1>{}; // bit offset: 9, bit width: 1, Filter bits
    constexpr auto FB10 = BitField<can2_t, 10, 1>{}; // bit offset: 10, bit width: 1, Filter bits
    constexpr auto FB11 = BitField<can2_t, 11, 1>{}; // bit offset: 11, bit width: 1, Filter bits
    constexpr auto FB12 = BitField<can2_t, 12, 1>{}; // bit offset: 12, bit width: 1, Filter bits
    constexpr auto FB13 = BitField<can2_t, 13, 1>{}; // bit offset: 13, bit width: 1, Filter bits
    constexpr auto FB14 = BitField<can2_t, 14, 1>{}; // bit offset: 14, bit width: 1, Filter bits
    constexpr auto FB15 = BitField<can2_t, 15, 1>{}; // bit offset: 15, bit width: 1, Filter bits
    constexpr auto FB16 = BitField<can2_t, 16, 1>{}; // bit offset: 16, bit width: 1, Filter bits
    constexpr auto FB17 = BitField<can2_t, 17, 1>{}; // bit offset: 17, bit width: 1, Filter bits
    constexpr auto FB18 = BitField<can2_t, 18, 1>{}; // bit offset: 18, bit width: 1, Filter bits
    constexpr auto FB19 = BitField<can2_t, 19, 1>{}; // bit offset: 19, bit width: 1, Filter bits
    constexpr auto FB20 = BitField<can2_t, 20, 1>{}; // bit offset: 20, bit width: 1, Filter bits
    constexpr auto FB21 = BitField<can2_t, 21, 1>{}; // bit offset: 21, bit width: 1, Filter bits
    constexpr auto FB22 = BitField<can2_t, 22, 1>{}; // bit offset: 22, bit width: 1, Filter bits
    constexpr auto FB23 = BitField<can2_t, 23, 1>{}; // bit offset: 23, bit width: 1, Filter bits
    constexpr auto FB24 = BitField<can2_t, 24, 1>{}; // bit offset: 24, bit width: 1, Filter bits
    constexpr auto FB25 = BitField<can2_t, 25, 1>{}; // bit offset: 25, bit width: 1, Filter bits
    constexpr auto FB26 = BitField<can2_t, 26, 1>{}; // bit offset: 26, bit width: 1, Filter bits
    constexpr auto FB27 = BitField<can2_t, 27, 1>{}; // bit offset: 27, bit width: 1, Filter bits
    constexpr auto FB28 = BitField<can2_t, 28, 1>{}; // bit offset: 28, bit width: 1, Filter bits
    constexpr auto FB29 = BitField<can2_t, 29, 1>{}; // bit offset: 29, bit width: 1, Filter bits
    constexpr auto FB30 = BitField<can2_t, 30, 1>{}; // bit offset: 30, bit width: 1, Filter bits
    constexpr auto FB31 = BitField<can2_t, 31, 1>{}; // bit offset: 31, bit width: 1, Filter bits
    static Register<std::uint32_t, CAN2_BASE_ADDRESS + 0x000002fcu, 0, READWRITE, decltype(FB0), decltype(FB1), decltype(FB2), decltype(FB3), decltype(FB4), decltype(FB5), decltype(FB6), decltype(FB7), decltype(FB8), decltype(FB9), decltype(FB10), decltype(FB11), decltype(FB12), decltype(FB13), decltype(FB14), decltype(FB15), decltype(FB16), decltype(FB17), decltype(FB18), decltype(FB19), decltype(FB20), decltype(FB21), decltype(FB22), decltype(FB23), decltype(FB24), decltype(FB25), decltype(FB26), decltype(FB27), decltype(FB28), decltype(FB29), decltype(FB30), decltype(FB31)> F23R2; // Filter bank 23 register 2

    constexpr auto FB0 = BitField<can2_t, 0, 1>{}; // bit offset: 0, bit width: 1, Filter bits
    constexpr auto FB1 = BitField<can2_t, 1, 1>{}; // bit offset: 1, bit width: 1, Filter bits
    constexpr auto FB2 = BitField<can2_t, 2, 1>{}; // bit offset: 2, bit width: 1, Filter bits
    constexpr auto FB3 = BitField<can2_t, 3, 1>{}; // bit offset: 3, bit width: 1, Filter bits
    constexpr auto FB4 = BitField<can2_t, 4, 1>{}; // bit offset: 4, bit width: 1, Filter bits
    constexpr auto FB5 = BitField<can2_t, 5, 1>{}; // bit offset: 5, bit width: 1, Filter bits
    constexpr auto FB6 = BitField<can2_t, 6, 1>{}; // bit offset: 6, bit width: 1, Filter bits
    constexpr auto FB7 = BitField<can2_t, 7, 1>{}; // bit offset: 7, bit width: 1, Filter bits
    constexpr auto FB8 = BitField<can2_t, 8, 1>{}; // bit offset: 8, bit width: 1, Filter bits
    constexpr auto FB9 = BitField<can2_t, 9, 1>{}; // bit offset: 9, bit width: 1, Filter bits
    constexpr auto FB10 = BitField<can2_t, 10, 1>{}; // bit offset: 10, bit width: 1, Filter bits
    constexpr auto FB11 = BitField<can2_t, 11, 1>{}; // bit offset: 11, bit width: 1, Filter bits
    constexpr auto FB12 = BitField<can2_t, 12, 1>{}; // bit offset: 12, bit width: 1, Filter bits
    constexpr auto FB13 = BitField<can2_t, 13, 1>{}; // bit offset: 13, bit width: 1, Filter bits
    constexpr auto FB14 = BitField<can2_t, 14, 1>{}; // bit offset: 14, bit width: 1, Filter bits
    constexpr auto FB15 = BitField<can2_t, 15, 1>{}; // bit offset: 15, bit width: 1, Filter bits
    constexpr auto FB16 = BitField<can2_t, 16, 1>{}; // bit offset: 16, bit width: 1, Filter bits
    constexpr auto FB17 = BitField<can2_t, 17, 1>{}; // bit offset: 17, bit width: 1, Filter bits
    constexpr auto FB18 = BitField<can2_t, 18, 1>{}; // bit offset: 18, bit width: 1, Filter bits
    constexpr auto FB19 = BitField<can2_t, 19, 1>{}; // bit offset: 19, bit width: 1, Filter bits
    constexpr auto FB20 = BitField<can2_t, 20, 1>{}; // bit offset: 20, bit width: 1, Filter bits
    constexpr auto FB21 = BitField<can2_t, 21, 1>{}; // bit offset: 21, bit width: 1, Filter bits
    constexpr auto FB22 = BitField<can2_t, 22, 1>{}; // bit offset: 22, bit width: 1, Filter bits
    constexpr auto FB23 = BitField<can2_t, 23, 1>{}; // bit offset: 23, bit width: 1, Filter bits
    constexpr auto FB24 = BitField<can2_t, 24, 1>{}; // bit offset: 24, bit width: 1, Filter bits
    constexpr auto FB25 = BitField<can2_t, 25, 1>{}; // bit offset: 25, bit width: 1, Filter bits
    constexpr auto FB26 = BitField<can2_t, 26, 1>{}; // bit offset: 26, bit width: 1, Filter bits
    constexpr auto FB27 = BitField<can2_t, 27, 1>{}; // bit offset: 27, bit width: 1, Filter bits
    constexpr auto FB28 = BitField<can2_t, 28, 1>{}; // bit offset: 28, bit width: 1, Filter bits
    constexpr auto FB29 = BitField<can2_t, 29, 1>{}; // bit offset: 29, bit width: 1, Filter bits
    constexpr auto FB30 = BitField<can2_t, 30, 1>{}; // bit offset: 30, bit width: 1, Filter bits
    constexpr auto FB31 = BitField<can2_t, 31, 1>{}; // bit offset: 31, bit width: 1, Filter bits
    static Register<std::uint32_t, CAN2_BASE_ADDRESS + 0x00000300u, 0, READWRITE, decltype(FB0), decltype(FB1), decltype(FB2), decltype(FB3), decltype(FB4), decltype(FB5), decltype(FB6), decltype(FB7), decltype(FB8), decltype(FB9), decltype(FB10), decltype(FB11), decltype(FB12), decltype(FB13), decltype(FB14), decltype(FB15), decltype(FB16), decltype(FB17), decltype(FB18), decltype(FB19), decltype(FB20), decltype(FB21), decltype(FB22), decltype(FB23), decltype(FB24), decltype(FB25), decltype(FB26), decltype(FB27), decltype(FB28), decltype(FB29), decltype(FB30), decltype(FB31)> F24R1; // Filter bank 24 register 1

    constexpr auto FB0 = BitField<can2_t, 0, 1>{}; // bit offset: 0, bit width: 1, Filter bits
    constexpr auto FB1 = BitField<can2_t, 1, 1>{}; // bit offset: 1, bit width: 1, Filter bits
    constexpr auto FB2 = BitField<can2_t, 2, 1>{}; // bit offset: 2, bit width: 1, Filter bits
    constexpr auto FB3 = BitField<can2_t, 3, 1>{}; // bit offset: 3, bit width: 1, Filter bits
    constexpr auto FB4 = BitField<can2_t, 4, 1>{}; // bit offset: 4, bit width: 1, Filter bits
    constexpr auto FB5 = BitField<can2_t, 5, 1>{}; // bit offset: 5, bit width: 1, Filter bits
    constexpr auto FB6 = BitField<can2_t, 6, 1>{}; // bit offset: 6, bit width: 1, Filter bits
    constexpr auto FB7 = BitField<can2_t, 7, 1>{}; // bit offset: 7, bit width: 1, Filter bits
    constexpr auto FB8 = BitField<can2_t, 8, 1>{}; // bit offset: 8, bit width: 1, Filter bits
    constexpr auto FB9 = BitField<can2_t, 9, 1>{}; // bit offset: 9, bit width: 1, Filter bits
    constexpr auto FB10 = BitField<can2_t, 10, 1>{}; // bit offset: 10, bit width: 1, Filter bits
    constexpr auto FB11 = BitField<can2_t, 11, 1>{}; // bit offset: 11, bit width: 1, Filter bits
    constexpr auto FB12 = BitField<can2_t, 12, 1>{}; // bit offset: 12, bit width: 1, Filter bits
    constexpr auto FB13 = BitField<can2_t, 13, 1>{}; // bit offset: 13, bit width: 1, Filter bits
    constexpr auto FB14 = BitField<can2_t, 14, 1>{}; // bit offset: 14, bit width: 1, Filter bits
    constexpr auto FB15 = BitField<can2_t, 15, 1>{}; // bit offset: 15, bit width: 1, Filter bits
    constexpr auto FB16 = BitField<can2_t, 16, 1>{}; // bit offset: 16, bit width: 1, Filter bits
    constexpr auto FB17 = BitField<can2_t, 17, 1>{}; // bit offset: 17, bit width: 1, Filter bits
    constexpr auto FB18 = BitField<can2_t, 18, 1>{}; // bit offset: 18, bit width: 1, Filter bits
    constexpr auto FB19 = BitField<can2_t, 19, 1>{}; // bit offset: 19, bit width: 1, Filter bits
    constexpr auto FB20 = BitField<can2_t, 20, 1>{}; // bit offset: 20, bit width: 1, Filter bits
    constexpr auto FB21 = BitField<can2_t, 21, 1>{}; // bit offset: 21, bit width: 1, Filter bits
    constexpr auto FB22 = BitField<can2_t, 22, 1>{}; // bit offset: 22, bit width: 1, Filter bits
    constexpr auto FB23 = BitField<can2_t, 23, 1>{}; // bit offset: 23, bit width: 1, Filter bits
    constexpr auto FB24 = BitField<can2_t, 24, 1>{}; // bit offset: 24, bit width: 1, Filter bits
    constexpr auto FB25 = BitField<can2_t, 25, 1>{}; // bit offset: 25, bit width: 1, Filter bits
    constexpr auto FB26 = BitField<can2_t, 26, 1>{}; // bit offset: 26, bit width: 1, Filter bits
    constexpr auto FB27 = BitField<can2_t, 27, 1>{}; // bit offset: 27, bit width: 1, Filter bits
    constexpr auto FB28 = BitField<can2_t, 28, 1>{}; // bit offset: 28, bit width: 1, Filter bits
    constexpr auto FB29 = BitField<can2_t, 29, 1>{}; // bit offset: 29, bit width: 1, Filter bits
    constexpr auto FB30 = BitField<can2_t, 30, 1>{}; // bit offset: 30, bit width: 1, Filter bits
    constexpr auto FB31 = BitField<can2_t, 31, 1>{}; // bit offset: 31, bit width: 1, Filter bits
    static Register<std::uint32_t, CAN2_BASE_ADDRESS + 0x00000304u, 0, READWRITE, decltype(FB0), decltype(FB1), decltype(FB2), decltype(FB3), decltype(FB4), decltype(FB5), decltype(FB6), decltype(FB7), decltype(FB8), decltype(FB9), decltype(FB10), decltype(FB11), decltype(FB12), decltype(FB13), decltype(FB14), decltype(FB15), decltype(FB16), decltype(FB17), decltype(FB18), decltype(FB19), decltype(FB20), decltype(FB21), decltype(FB22), decltype(FB23), decltype(FB24), decltype(FB25), decltype(FB26), decltype(FB27), decltype(FB28), decltype(FB29), decltype(FB30), decltype(FB31)> F24R2; // Filter bank 24 register 2

    constexpr auto FB0 = BitField<can2_t, 0, 1>{}; // bit offset: 0, bit width: 1, Filter bits
    constexpr auto FB1 = BitField<can2_t, 1, 1>{}; // bit offset: 1, bit width: 1, Filter bits
    constexpr auto FB2 = BitField<can2_t, 2, 1>{}; // bit offset: 2, bit width: 1, Filter bits
    constexpr auto FB3 = BitField<can2_t, 3, 1>{}; // bit offset: 3, bit width: 1, Filter bits
    constexpr auto FB4 = BitField<can2_t, 4, 1>{}; // bit offset: 4, bit width: 1, Filter bits
    constexpr auto FB5 = BitField<can2_t, 5, 1>{}; // bit offset: 5, bit width: 1, Filter bits
    constexpr auto FB6 = BitField<can2_t, 6, 1>{}; // bit offset: 6, bit width: 1, Filter bits
    constexpr auto FB7 = BitField<can2_t, 7, 1>{}; // bit offset: 7, bit width: 1, Filter bits
    constexpr auto FB8 = BitField<can2_t, 8, 1>{}; // bit offset: 8, bit width: 1, Filter bits
    constexpr auto FB9 = BitField<can2_t, 9, 1>{}; // bit offset: 9, bit width: 1, Filter bits
    constexpr auto FB10 = BitField<can2_t, 10, 1>{}; // bit offset: 10, bit width: 1, Filter bits
    constexpr auto FB11 = BitField<can2_t, 11, 1>{}; // bit offset: 11, bit width: 1, Filter bits
    constexpr auto FB12 = BitField<can2_t, 12, 1>{}; // bit offset: 12, bit width: 1, Filter bits
    constexpr auto FB13 = BitField<can2_t, 13, 1>{}; // bit offset: 13, bit width: 1, Filter bits
    constexpr auto FB14 = BitField<can2_t, 14, 1>{}; // bit offset: 14, bit width: 1, Filter bits
    constexpr auto FB15 = BitField<can2_t, 15, 1>{}; // bit offset: 15, bit width: 1, Filter bits
    constexpr auto FB16 = BitField<can2_t, 16, 1>{}; // bit offset: 16, bit width: 1, Filter bits
    constexpr auto FB17 = BitField<can2_t, 17, 1>{}; // bit offset: 17, bit width: 1, Filter bits
    constexpr auto FB18 = BitField<can2_t, 18, 1>{}; // bit offset: 18, bit width: 1, Filter bits
    constexpr auto FB19 = BitField<can2_t, 19, 1>{}; // bit offset: 19, bit width: 1, Filter bits
    constexpr auto FB20 = BitField<can2_t, 20, 1>{}; // bit offset: 20, bit width: 1, Filter bits
    constexpr auto FB21 = BitField<can2_t, 21, 1>{}; // bit offset: 21, bit width: 1, Filter bits
    constexpr auto FB22 = BitField<can2_t, 22, 1>{}; // bit offset: 22, bit width: 1, Filter bits
    constexpr auto FB23 = BitField<can2_t, 23, 1>{}; // bit offset: 23, bit width: 1, Filter bits
    constexpr auto FB24 = BitField<can2_t, 24, 1>{}; // bit offset: 24, bit width: 1, Filter bits
    constexpr auto FB25 = BitField<can2_t, 25, 1>{}; // bit offset: 25, bit width: 1, Filter bits
    constexpr auto FB26 = BitField<can2_t, 26, 1>{}; // bit offset: 26, bit width: 1, Filter bits
    constexpr auto FB27 = BitField<can2_t, 27, 1>{}; // bit offset: 27, bit width: 1, Filter bits
    constexpr auto FB28 = BitField<can2_t, 28, 1>{}; // bit offset: 28, bit width: 1, Filter bits
    constexpr auto FB29 = BitField<can2_t, 29, 1>{}; // bit offset: 29, bit width: 1, Filter bits
    constexpr auto FB30 = BitField<can2_t, 30, 1>{}; // bit offset: 30, bit width: 1, Filter bits
    constexpr auto FB31 = BitField<can2_t, 31, 1>{}; // bit offset: 31, bit width: 1, Filter bits
    static Register<std::uint32_t, CAN2_BASE_ADDRESS + 0x00000308u, 0, READWRITE, decltype(FB0), decltype(FB1), decltype(FB2), decltype(FB3), decltype(FB4), decltype(FB5), decltype(FB6), decltype(FB7), decltype(FB8), decltype(FB9), decltype(FB10), decltype(FB11), decltype(FB12), decltype(FB13), decltype(FB14), decltype(FB15), decltype(FB16), decltype(FB17), decltype(FB18), decltype(FB19), decltype(FB20), decltype(FB21), decltype(FB22), decltype(FB23), decltype(FB24), decltype(FB25), decltype(FB26), decltype(FB27), decltype(FB28), decltype(FB29), decltype(FB30), decltype(FB31)> F25R1; // Filter bank 25 register 1

    constexpr auto FB0 = BitField<can2_t, 0, 1>{}; // bit offset: 0, bit width: 1, Filter bits
    constexpr auto FB1 = BitField<can2_t, 1, 1>{}; // bit offset: 1, bit width: 1, Filter bits
    constexpr auto FB2 = BitField<can2_t, 2, 1>{}; // bit offset: 2, bit width: 1, Filter bits
    constexpr auto FB3 = BitField<can2_t, 3, 1>{}; // bit offset: 3, bit width: 1, Filter bits
    constexpr auto FB4 = BitField<can2_t, 4, 1>{}; // bit offset: 4, bit width: 1, Filter bits
    constexpr auto FB5 = BitField<can2_t, 5, 1>{}; // bit offset: 5, bit width: 1, Filter bits
    constexpr auto FB6 = BitField<can2_t, 6, 1>{}; // bit offset: 6, bit width: 1, Filter bits
    constexpr auto FB7 = BitField<can2_t, 7, 1>{}; // bit offset: 7, bit width: 1, Filter bits
    constexpr auto FB8 = BitField<can2_t, 8, 1>{}; // bit offset: 8, bit width: 1, Filter bits
    constexpr auto FB9 = BitField<can2_t, 9, 1>{}; // bit offset: 9, bit width: 1, Filter bits
    constexpr auto FB10 = BitField<can2_t, 10, 1>{}; // bit offset: 10, bit width: 1, Filter bits
    constexpr auto FB11 = BitField<can2_t, 11, 1>{}; // bit offset: 11, bit width: 1, Filter bits
    constexpr auto FB12 = BitField<can2_t, 12, 1>{}; // bit offset: 12, bit width: 1, Filter bits
    constexpr auto FB13 = BitField<can2_t, 13, 1>{}; // bit offset: 13, bit width: 1, Filter bits
    constexpr auto FB14 = BitField<can2_t, 14, 1>{}; // bit offset: 14, bit width: 1, Filter bits
    constexpr auto FB15 = BitField<can2_t, 15, 1>{}; // bit offset: 15, bit width: 1, Filter bits
    constexpr auto FB16 = BitField<can2_t, 16, 1>{}; // bit offset: 16, bit width: 1, Filter bits
    constexpr auto FB17 = BitField<can2_t, 17, 1>{}; // bit offset: 17, bit width: 1, Filter bits
    constexpr auto FB18 = BitField<can2_t, 18, 1>{}; // bit offset: 18, bit width: 1, Filter bits
    constexpr auto FB19 = BitField<can2_t, 19, 1>{}; // bit offset: 19, bit width: 1, Filter bits
    constexpr auto FB20 = BitField<can2_t, 20, 1>{}; // bit offset: 20, bit width: 1, Filter bits
    constexpr auto FB21 = BitField<can2_t, 21, 1>{}; // bit offset: 21, bit width: 1, Filter bits
    constexpr auto FB22 = BitField<can2_t, 22, 1>{}; // bit offset: 22, bit width: 1, Filter bits
    constexpr auto FB23 = BitField<can2_t, 23, 1>{}; // bit offset: 23, bit width: 1, Filter bits
    constexpr auto FB24 = BitField<can2_t, 24, 1>{}; // bit offset: 24, bit width: 1, Filter bits
    constexpr auto FB25 = BitField<can2_t, 25, 1>{}; // bit offset: 25, bit width: 1, Filter bits
    constexpr auto FB26 = BitField<can2_t, 26, 1>{}; // bit offset: 26, bit width: 1, Filter bits
    constexpr auto FB27 = BitField<can2_t, 27, 1>{}; // bit offset: 27, bit width: 1, Filter bits
    constexpr auto FB28 = BitField<can2_t, 28, 1>{}; // bit offset: 28, bit width: 1, Filter bits
    constexpr auto FB29 = BitField<can2_t, 29, 1>{}; // bit offset: 29, bit width: 1, Filter bits
    constexpr auto FB30 = BitField<can2_t, 30, 1>{}; // bit offset: 30, bit width: 1, Filter bits
    constexpr auto FB31 = BitField<can2_t, 31, 1>{}; // bit offset: 31, bit width: 1, Filter bits
    static Register<std::uint32_t, CAN2_BASE_ADDRESS + 0x0000030cu, 0, READWRITE, decltype(FB0), decltype(FB1), decltype(FB2), decltype(FB3), decltype(FB4), decltype(FB5), decltype(FB6), decltype(FB7), decltype(FB8), decltype(FB9), decltype(FB10), decltype(FB11), decltype(FB12), decltype(FB13), decltype(FB14), decltype(FB15), decltype(FB16), decltype(FB17), decltype(FB18), decltype(FB19), decltype(FB20), decltype(FB21), decltype(FB22), decltype(FB23), decltype(FB24), decltype(FB25), decltype(FB26), decltype(FB27), decltype(FB28), decltype(FB29), decltype(FB30), decltype(FB31)> F25R2; // Filter bank 25 register 2

    constexpr auto FB0 = BitField<can2_t, 0, 1>{}; // bit offset: 0, bit width: 1, Filter bits
    constexpr auto FB1 = BitField<can2_t, 1, 1>{}; // bit offset: 1, bit width: 1, Filter bits
    constexpr auto FB2 = BitField<can2_t, 2, 1>{}; // bit offset: 2, bit width: 1, Filter bits
    constexpr auto FB3 = BitField<can2_t, 3, 1>{}; // bit offset: 3, bit width: 1, Filter bits
    constexpr auto FB4 = BitField<can2_t, 4, 1>{}; // bit offset: 4, bit width: 1, Filter bits
    constexpr auto FB5 = BitField<can2_t, 5, 1>{}; // bit offset: 5, bit width: 1, Filter bits
    constexpr auto FB6 = BitField<can2_t, 6, 1>{}; // bit offset: 6, bit width: 1, Filter bits
    constexpr auto FB7 = BitField<can2_t, 7, 1>{}; // bit offset: 7, bit width: 1, Filter bits
    constexpr auto FB8 = BitField<can2_t, 8, 1>{}; // bit offset: 8, bit width: 1, Filter bits
    constexpr auto FB9 = BitField<can2_t, 9, 1>{}; // bit offset: 9, bit width: 1, Filter bits
    constexpr auto FB10 = BitField<can2_t, 10, 1>{}; // bit offset: 10, bit width: 1, Filter bits
    constexpr auto FB11 = BitField<can2_t, 11, 1>{}; // bit offset: 11, bit width: 1, Filter bits
    constexpr auto FB12 = BitField<can2_t, 12, 1>{}; // bit offset: 12, bit width: 1, Filter bits
    constexpr auto FB13 = BitField<can2_t, 13, 1>{}; // bit offset: 13, bit width: 1, Filter bits
    constexpr auto FB14 = BitField<can2_t, 14, 1>{}; // bit offset: 14, bit width: 1, Filter bits
    constexpr auto FB15 = BitField<can2_t, 15, 1>{}; // bit offset: 15, bit width: 1, Filter bits
    constexpr auto FB16 = BitField<can2_t, 16, 1>{}; // bit offset: 16, bit width: 1, Filter bits
    constexpr auto FB17 = BitField<can2_t, 17, 1>{}; // bit offset: 17, bit width: 1, Filter bits
    constexpr auto FB18 = BitField<can2_t, 18, 1>{}; // bit offset: 18, bit width: 1, Filter bits
    constexpr auto FB19 = BitField<can2_t, 19, 1>{}; // bit offset: 19, bit width: 1, Filter bits
    constexpr auto FB20 = BitField<can2_t, 20, 1>{}; // bit offset: 20, bit width: 1, Filter bits
    constexpr auto FB21 = BitField<can2_t, 21, 1>{}; // bit offset: 21, bit width: 1, Filter bits
    constexpr auto FB22 = BitField<can2_t, 22, 1>{}; // bit offset: 22, bit width: 1, Filter bits
    constexpr auto FB23 = BitField<can2_t, 23, 1>{}; // bit offset: 23, bit width: 1, Filter bits
    constexpr auto FB24 = BitField<can2_t, 24, 1>{}; // bit offset: 24, bit width: 1, Filter bits
    constexpr auto FB25 = BitField<can2_t, 25, 1>{}; // bit offset: 25, bit width: 1, Filter bits
    constexpr auto FB26 = BitField<can2_t, 26, 1>{}; // bit offset: 26, bit width: 1, Filter bits
    constexpr auto FB27 = BitField<can2_t, 27, 1>{}; // bit offset: 27, bit width: 1, Filter bits
    constexpr auto FB28 = BitField<can2_t, 28, 1>{}; // bit offset: 28, bit width: 1, Filter bits
    constexpr auto FB29 = BitField<can2_t, 29, 1>{}; // bit offset: 29, bit width: 1, Filter bits
    constexpr auto FB30 = BitField<can2_t, 30, 1>{}; // bit offset: 30, bit width: 1, Filter bits
    constexpr auto FB31 = BitField<can2_t, 31, 1>{}; // bit offset: 31, bit width: 1, Filter bits
    static Register<std::uint32_t, CAN2_BASE_ADDRESS + 0x00000310u, 0, READWRITE, decltype(FB0), decltype(FB1), decltype(FB2), decltype(FB3), decltype(FB4), decltype(FB5), decltype(FB6), decltype(FB7), decltype(FB8), decltype(FB9), decltype(FB10), decltype(FB11), decltype(FB12), decltype(FB13), decltype(FB14), decltype(FB15), decltype(FB16), decltype(FB17), decltype(FB18), decltype(FB19), decltype(FB20), decltype(FB21), decltype(FB22), decltype(FB23), decltype(FB24), decltype(FB25), decltype(FB26), decltype(FB27), decltype(FB28), decltype(FB29), decltype(FB30), decltype(FB31)> F26R1; // Filter bank 26 register 1

    constexpr auto FB0 = BitField<can2_t, 0, 1>{}; // bit offset: 0, bit width: 1, Filter bits
    constexpr auto FB1 = BitField<can2_t, 1, 1>{}; // bit offset: 1, bit width: 1, Filter bits
    constexpr auto FB2 = BitField<can2_t, 2, 1>{}; // bit offset: 2, bit width: 1, Filter bits
    constexpr auto FB3 = BitField<can2_t, 3, 1>{}; // bit offset: 3, bit width: 1, Filter bits
    constexpr auto FB4 = BitField<can2_t, 4, 1>{}; // bit offset: 4, bit width: 1, Filter bits
    constexpr auto FB5 = BitField<can2_t, 5, 1>{}; // bit offset: 5, bit width: 1, Filter bits
    constexpr auto FB6 = BitField<can2_t, 6, 1>{}; // bit offset: 6, bit width: 1, Filter bits
    constexpr auto FB7 = BitField<can2_t, 7, 1>{}; // bit offset: 7, bit width: 1, Filter bits
    constexpr auto FB8 = BitField<can2_t, 8, 1>{}; // bit offset: 8, bit width: 1, Filter bits
    constexpr auto FB9 = BitField<can2_t, 9, 1>{}; // bit offset: 9, bit width: 1, Filter bits
    constexpr auto FB10 = BitField<can2_t, 10, 1>{}; // bit offset: 10, bit width: 1, Filter bits
    constexpr auto FB11 = BitField<can2_t, 11, 1>{}; // bit offset: 11, bit width: 1, Filter bits
    constexpr auto FB12 = BitField<can2_t, 12, 1>{}; // bit offset: 12, bit width: 1, Filter bits
    constexpr auto FB13 = BitField<can2_t, 13, 1>{}; // bit offset: 13, bit width: 1, Filter bits
    constexpr auto FB14 = BitField<can2_t, 14, 1>{}; // bit offset: 14, bit width: 1, Filter bits
    constexpr auto FB15 = BitField<can2_t, 15, 1>{}; // bit offset: 15, bit width: 1, Filter bits
    constexpr auto FB16 = BitField<can2_t, 16, 1>{}; // bit offset: 16, bit width: 1, Filter bits
    constexpr auto FB17 = BitField<can2_t, 17, 1>{}; // bit offset: 17, bit width: 1, Filter bits
    constexpr auto FB18 = BitField<can2_t, 18, 1>{}; // bit offset: 18, bit width: 1, Filter bits
    constexpr auto FB19 = BitField<can2_t, 19, 1>{}; // bit offset: 19, bit width: 1, Filter bits
    constexpr auto FB20 = BitField<can2_t, 20, 1>{}; // bit offset: 20, bit width: 1, Filter bits
    constexpr auto FB21 = BitField<can2_t, 21, 1>{}; // bit offset: 21, bit width: 1, Filter bits
    constexpr auto FB22 = BitField<can2_t, 22, 1>{}; // bit offset: 22, bit width: 1, Filter bits
    constexpr auto FB23 = BitField<can2_t, 23, 1>{}; // bit offset: 23, bit width: 1, Filter bits
    constexpr auto FB24 = BitField<can2_t, 24, 1>{}; // bit offset: 24, bit width: 1, Filter bits
    constexpr auto FB25 = BitField<can2_t, 25, 1>{}; // bit offset: 25, bit width: 1, Filter bits
    constexpr auto FB26 = BitField<can2_t, 26, 1>{}; // bit offset: 26, bit width: 1, Filter bits
    constexpr auto FB27 = BitField<can2_t, 27, 1>{}; // bit offset: 27, bit width: 1, Filter bits
    constexpr auto FB28 = BitField<can2_t, 28, 1>{}; // bit offset: 28, bit width: 1, Filter bits
    constexpr auto FB29 = BitField<can2_t, 29, 1>{}; // bit offset: 29, bit width: 1, Filter bits
    constexpr auto FB30 = BitField<can2_t, 30, 1>{}; // bit offset: 30, bit width: 1, Filter bits
    constexpr auto FB31 = BitField<can2_t, 31, 1>{}; // bit offset: 31, bit width: 1, Filter bits
    static Register<std::uint32_t, CAN2_BASE_ADDRESS + 0x00000314u, 0, READWRITE, decltype(FB0), decltype(FB1), decltype(FB2), decltype(FB3), decltype(FB4), decltype(FB5), decltype(FB6), decltype(FB7), decltype(FB8), decltype(FB9), decltype(FB10), decltype(FB11), decltype(FB12), decltype(FB13), decltype(FB14), decltype(FB15), decltype(FB16), decltype(FB17), decltype(FB18), decltype(FB19), decltype(FB20), decltype(FB21), decltype(FB22), decltype(FB23), decltype(FB24), decltype(FB25), decltype(FB26), decltype(FB27), decltype(FB28), decltype(FB29), decltype(FB30), decltype(FB31)> F26R2; // Filter bank 26 register 2

    constexpr auto FB0 = BitField<can2_t, 0, 1>{}; // bit offset: 0, bit width: 1, Filter bits
    constexpr auto FB1 = BitField<can2_t, 1, 1>{}; // bit offset: 1, bit width: 1, Filter bits
    constexpr auto FB2 = BitField<can2_t, 2, 1>{}; // bit offset: 2, bit width: 1, Filter bits
    constexpr auto FB3 = BitField<can2_t, 3, 1>{}; // bit offset: 3, bit width: 1, Filter bits
    constexpr auto FB4 = BitField<can2_t, 4, 1>{}; // bit offset: 4, bit width: 1, Filter bits
    constexpr auto FB5 = BitField<can2_t, 5, 1>{}; // bit offset: 5, bit width: 1, Filter bits
    constexpr auto FB6 = BitField<can2_t, 6, 1>{}; // bit offset: 6, bit width: 1, Filter bits
    constexpr auto FB7 = BitField<can2_t, 7, 1>{}; // bit offset: 7, bit width: 1, Filter bits
    constexpr auto FB8 = BitField<can2_t, 8, 1>{}; // bit offset: 8, bit width: 1, Filter bits
    constexpr auto FB9 = BitField<can2_t, 9, 1>{}; // bit offset: 9, bit width: 1, Filter bits
    constexpr auto FB10 = BitField<can2_t, 10, 1>{}; // bit offset: 10, bit width: 1, Filter bits
    constexpr auto FB11 = BitField<can2_t, 11, 1>{}; // bit offset: 11, bit width: 1, Filter bits
    constexpr auto FB12 = BitField<can2_t, 12, 1>{}; // bit offset: 12, bit width: 1, Filter bits
    constexpr auto FB13 = BitField<can2_t, 13, 1>{}; // bit offset: 13, bit width: 1, Filter bits
    constexpr auto FB14 = BitField<can2_t, 14, 1>{}; // bit offset: 14, bit width: 1, Filter bits
    constexpr auto FB15 = BitField<can2_t, 15, 1>{}; // bit offset: 15, bit width: 1, Filter bits
    constexpr auto FB16 = BitField<can2_t, 16, 1>{}; // bit offset: 16, bit width: 1, Filter bits
    constexpr auto FB17 = BitField<can2_t, 17, 1>{}; // bit offset: 17, bit width: 1, Filter bits
    constexpr auto FB18 = BitField<can2_t, 18, 1>{}; // bit offset: 18, bit width: 1, Filter bits
    constexpr auto FB19 = BitField<can2_t, 19, 1>{}; // bit offset: 19, bit width: 1, Filter bits
    constexpr auto FB20 = BitField<can2_t, 20, 1>{}; // bit offset: 20, bit width: 1, Filter bits
    constexpr auto FB21 = BitField<can2_t, 21, 1>{}; // bit offset: 21, bit width: 1, Filter bits
    constexpr auto FB22 = BitField<can2_t, 22, 1>{}; // bit offset: 22, bit width: 1, Filter bits
    constexpr auto FB23 = BitField<can2_t, 23, 1>{}; // bit offset: 23, bit width: 1, Filter bits
    constexpr auto FB24 = BitField<can2_t, 24, 1>{}; // bit offset: 24, bit width: 1, Filter bits
    constexpr auto FB25 = BitField<can2_t, 25, 1>{}; // bit offset: 25, bit width: 1, Filter bits
    constexpr auto FB26 = BitField<can2_t, 26, 1>{}; // bit offset: 26, bit width: 1, Filter bits
    constexpr auto FB27 = BitField<can2_t, 27, 1>{}; // bit offset: 27, bit width: 1, Filter bits
    constexpr auto FB28 = BitField<can2_t, 28, 1>{}; // bit offset: 28, bit width: 1, Filter bits
    constexpr auto FB29 = BitField<can2_t, 29, 1>{}; // bit offset: 29, bit width: 1, Filter bits
    constexpr auto FB30 = BitField<can2_t, 30, 1>{}; // bit offset: 30, bit width: 1, Filter bits
    constexpr auto FB31 = BitField<can2_t, 31, 1>{}; // bit offset: 31, bit width: 1, Filter bits
    static Register<std::uint32_t, CAN2_BASE_ADDRESS + 0x00000318u, 0, READWRITE, decltype(FB0), decltype(FB1), decltype(FB2), decltype(FB3), decltype(FB4), decltype(FB5), decltype(FB6), decltype(FB7), decltype(FB8), decltype(FB9), decltype(FB10), decltype(FB11), decltype(FB12), decltype(FB13), decltype(FB14), decltype(FB15), decltype(FB16), decltype(FB17), decltype(FB18), decltype(FB19), decltype(FB20), decltype(FB21), decltype(FB22), decltype(FB23), decltype(FB24), decltype(FB25), decltype(FB26), decltype(FB27), decltype(FB28), decltype(FB29), decltype(FB30), decltype(FB31)> F27R1; // Filter bank 27 register 1

    constexpr auto FB0 = BitField<can2_t, 0, 1>{}; // bit offset: 0, bit width: 1, Filter bits
    constexpr auto FB1 = BitField<can2_t, 1, 1>{}; // bit offset: 1, bit width: 1, Filter bits
    constexpr auto FB2 = BitField<can2_t, 2, 1>{}; // bit offset: 2, bit width: 1, Filter bits
    constexpr auto FB3 = BitField<can2_t, 3, 1>{}; // bit offset: 3, bit width: 1, Filter bits
    constexpr auto FB4 = BitField<can2_t, 4, 1>{}; // bit offset: 4, bit width: 1, Filter bits
    constexpr auto FB5 = BitField<can2_t, 5, 1>{}; // bit offset: 5, bit width: 1, Filter bits
    constexpr auto FB6 = BitField<can2_t, 6, 1>{}; // bit offset: 6, bit width: 1, Filter bits
    constexpr auto FB7 = BitField<can2_t, 7, 1>{}; // bit offset: 7, bit width: 1, Filter bits
    constexpr auto FB8 = BitField<can2_t, 8, 1>{}; // bit offset: 8, bit width: 1, Filter bits
    constexpr auto FB9 = BitField<can2_t, 9, 1>{}; // bit offset: 9, bit width: 1, Filter bits
    constexpr auto FB10 = BitField<can2_t, 10, 1>{}; // bit offset: 10, bit width: 1, Filter bits
    constexpr auto FB11 = BitField<can2_t, 11, 1>{}; // bit offset: 11, bit width: 1, Filter bits
    constexpr auto FB12 = BitField<can2_t, 12, 1>{}; // bit offset: 12, bit width: 1, Filter bits
    constexpr auto FB13 = BitField<can2_t, 13, 1>{}; // bit offset: 13, bit width: 1, Filter bits
    constexpr auto FB14 = BitField<can2_t, 14, 1>{}; // bit offset: 14, bit width: 1, Filter bits
    constexpr auto FB15 = BitField<can2_t, 15, 1>{}; // bit offset: 15, bit width: 1, Filter bits
    constexpr auto FB16 = BitField<can2_t, 16, 1>{}; // bit offset: 16, bit width: 1, Filter bits
    constexpr auto FB17 = BitField<can2_t, 17, 1>{}; // bit offset: 17, bit width: 1, Filter bits
    constexpr auto FB18 = BitField<can2_t, 18, 1>{}; // bit offset: 18, bit width: 1, Filter bits
    constexpr auto FB19 = BitField<can2_t, 19, 1>{}; // bit offset: 19, bit width: 1, Filter bits
    constexpr auto FB20 = BitField<can2_t, 20, 1>{}; // bit offset: 20, bit width: 1, Filter bits
    constexpr auto FB21 = BitField<can2_t, 21, 1>{}; // bit offset: 21, bit width: 1, Filter bits
    constexpr auto FB22 = BitField<can2_t, 22, 1>{}; // bit offset: 22, bit width: 1, Filter bits
    constexpr auto FB23 = BitField<can2_t, 23, 1>{}; // bit offset: 23, bit width: 1, Filter bits
    constexpr auto FB24 = BitField<can2_t, 24, 1>{}; // bit offset: 24, bit width: 1, Filter bits
    constexpr auto FB25 = BitField<can2_t, 25, 1>{}; // bit offset: 25, bit width: 1, Filter bits
    constexpr auto FB26 = BitField<can2_t, 26, 1>{}; // bit offset: 26, bit width: 1, Filter bits
    constexpr auto FB27 = BitField<can2_t, 27, 1>{}; // bit offset: 27, bit width: 1, Filter bits
    constexpr auto FB28 = BitField<can2_t, 28, 1>{}; // bit offset: 28, bit width: 1, Filter bits
    constexpr auto FB29 = BitField<can2_t, 29, 1>{}; // bit offset: 29, bit width: 1, Filter bits
    constexpr auto FB30 = BitField<can2_t, 30, 1>{}; // bit offset: 30, bit width: 1, Filter bits
    constexpr auto FB31 = BitField<can2_t, 31, 1>{}; // bit offset: 31, bit width: 1, Filter bits
    static Register<std::uint32_t, CAN2_BASE_ADDRESS + 0x0000031cu, 0, READWRITE, decltype(FB0), decltype(FB1), decltype(FB2), decltype(FB3), decltype(FB4), decltype(FB5), decltype(FB6), decltype(FB7), decltype(FB8), decltype(FB9), decltype(FB10), decltype(FB11), decltype(FB12), decltype(FB13), decltype(FB14), decltype(FB15), decltype(FB16), decltype(FB17), decltype(FB18), decltype(FB19), decltype(FB20), decltype(FB21), decltype(FB22), decltype(FB23), decltype(FB24), decltype(FB25), decltype(FB26), decltype(FB27), decltype(FB28), decltype(FB29), decltype(FB30), decltype(FB31)> F27R2; // Filter bank 27 register 2

} // namespace CAN2